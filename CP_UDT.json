{
  "tags": [
    {
      "name": "EMS",
      "tagType": "Folder",
      "tags": [
        {
          "name": "Meter_Ref_Line",
          "parameters": {
            "Meter": {
              "dataType": "String",
              "value": "LMCI/Plant-2/UTL_COMPRESSOR-2"
            },
            "Gateway": {
              "dataType": "String",
              "value": ""
            },
            "DB": {
              "dataType": "Integer"
            }
          },
          "tagType": "UdtType",
          "tags": [
            {
              "valueSource": "memory",
              "name": "Machine_ID",
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "name": "Machine_Code",
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "name": "Machine_Name",
              "tagType": "AtomicTag"
            },
            {
              "name": "OPC",
              "tagType": "Folder",
              "tags": [
                {
                  "name": "From",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "sourceTagPath": {
                        "bindType": "parameter",
                        "binding": "[LMCI-default]EMS/{Meter}/Current-Y"
                      },
                      "valueSource": "reference",
                      "dataType": "Float4",
                      "name": "Current-Y",
                      "tagType": "AtomicTag"
                    },
                    {
                      "sourceTagPath": {
                        "bindType": "parameter",
                        "binding": "[LMCI-default]EMS/{Meter}/Volt-R"
                      },
                      "valueSource": "reference",
                      "dataType": "Float4",
                      "name": "Volt-R",
                      "tagType": "AtomicTag"
                    },
                    {
                      "sourceTagPath": {
                        "bindType": "parameter",
                        "binding": "[LMCI-default]EMS/{Meter}/Active_Pwr(KW)"
                      },
                      "valueSource": "reference",
                      "dataType": "Float4",
                      "name": "Active_Pwr(KW)",
                      "tagType": "AtomicTag"
                    },
                    {
                      "sourceTagPath": {
                        "bindType": "parameter",
                        "binding": "[LMCI-default]EMS/{Meter}/WH"
                      },
                      "valueSource": "reference",
                      "dataType": "Float4",
                      "name": "WH",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "opc",
                      "opcItemPath": "ns\u003d4;i\u003d320",
                      "dataType": "Float4",
                      "name": "VA",
                      "tagType": "AtomicTag",
                      "opcServer": "SIMATIC.S7-1200.OPC-UA.Application:P2_EMS"
                    },
                    {
                      "sourceTagPath": {
                        "bindType": "parameter",
                        "binding": "[LMCI-default]EMS/{Meter}/Frequency"
                      },
                      "valueSource": "reference",
                      "dataType": "Float4",
                      "name": "Frequency",
                      "tagType": "AtomicTag"
                    },
                    {
                      "sourceTagPath": {
                        "bindType": "parameter",
                        "binding": "[LMCI-default]EMS/{Meter}/Current-R"
                      },
                      "valueSource": "reference",
                      "dataType": "Float4",
                      "name": "Current-R",
                      "tagType": "AtomicTag"
                    },
                    {
                      "sourceTagPath": {
                        "bindType": "parameter",
                        "binding": "[LMCI-default]EMS/{Meter}/Volt-B"
                      },
                      "valueSource": "reference",
                      "dataType": "Float4",
                      "name": "Volt-B",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "expr",
                      "expression": "({[.]Current-B.value}+{[.]Current-R.value}+{[.]Current-Y.value})/3",
                      "name": "CurrentTotal",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "rt",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "sourceTagPath": {
                        "bindType": "parameter",
                        "binding": "[LMCI-default]EMS/{Meter}/Volt-Avg"
                      },
                      "valueSource": "reference",
                      "dataType": "Float4",
                      "name": "Volt-Avg",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "opc",
                      "opcItemPath": "ns\u003d4;s\u003dstatus",
                      "name": "Status",
                      "tagType": "AtomicTag",
                      "opcServer": "eWON - RML-P4-EMS"
                    },
                    {
                      "sourceTagPath": {
                        "bindType": "parameter",
                        "binding": "[LMCI-default]EMS/{Meter}/Current-B"
                      },
                      "valueSource": "reference",
                      "dataType": "Float4",
                      "name": "Current-B",
                      "tagType": "AtomicTag"
                    },
                    {
                      "sourceTagPath": {
                        "bindType": "parameter",
                        "binding": "[LMCI-default]EMS/{Meter}/KWH"
                      },
                      "valueSource": "reference",
                      "dataType": "Float4",
                      "name": "KWH",
                      "tagType": "AtomicTag"
                    },
                    {
                      "sourceTagPath": {
                        "bindType": "parameter",
                        "binding": "[LMCI-default]EMS/{Meter}/Volt-Y"
                      },
                      "valueSource": "reference",
                      "dataType": "Float4",
                      "name": "Volt-Y",
                      "tagType": "AtomicTag"
                    },
                    {
                      "sourceTagPath": {
                        "bindType": "parameter",
                        "binding": "[LMCI-default]EMS/{Meter}/PF"
                      },
                      "valueSource": "reference",
                      "dataType": "Float4",
                      "name": "PF",
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "To",
                  "tagType": "Folder"
                }
              ]
            },
            {
              "name": "Calculation",
              "tagType": "Folder",
              "tags": [
                {
                  "name": "Triggers",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "expr",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\ttags_to_read \u003d [\n\t     \"[.]../../../../../DateTime\",\n\t\t \"[.]../../../../../../Business_Code\",\n\t\t \"[.]../../../../../../Business_Name\",\t\t\n        \"[.]../../../../../Plant_Code\",\n        \"[.]../../../../../Plant_Name\",\n        \"[.]../../../Line_Code\",\n        \"[.]../../../Line_Name\",\n        \"[.]../../Machine_ID\",\n        \"[.]../../Machine_Name\",\n        \"[.]../../Machine_Code\",\n        \"[.]../../../../../Date\",\n\t    \"[.]../../OPC/From/Current-B\",\n\t    \"[.]../../OPC/From/Current-R\",\n\t    \"[.]../../OPC/From/Current-Y\",\n\t    \"[.]../../OPC/From/CurrentTotal\",\n\t    \"[.]../../OPC/From/Frequency\",\n\t    \"[.]../../OPC/From/KWH\",\n\t    \"[.]../../OPC/From/PF\",\n\t    \"[.]../Expression/Voltage_Avg\",\n\t    \"[.]../../OPC/From/Volt-B\",\n\t    \"[.]../../OPC/From/Volt-R\",\n\t    \"[.]../../OPC/From/Volt-Y\",\n\t    \"[.]../../OPC/From/WH\",\n\t    \"[.]../../../../../Shift\",\t    \t    \t   \n\t]\n\ttag_values \u003d [tag.value if tag.value is not None else \u0027\u0027 for tag in system.tag.readBlocking(tags_to_read)]\n\t\n\tEMS_Overall.Log_Function.EMS_trigger(tag_values, \u0027Line\u0027)"
                        }
                      ],
                      "expression": "floor(getMinute({[.]../../../../../DateTime}) / 5)",
                      "name": "Main_Trigger",
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "Expression",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "expr",
                      "expression": "{[.]../../OPC/From/Volt-Avg}*1.732",
                      "name": "Voltage_Avg",
                      "tagType": "AtomicTag"
                    }
                  ]
                }
              ]
            },
            {
              "valueSource": "memory",
              "name": "Machine_Tracking",
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "name": "Machine_Status",
              "tagType": "AtomicTag"
            }
          ]
        },
        {
          "name": "Meter_OPC_Line",
          "parameters": {
            "Meter": {
              "dataType": "String"
            },
            "Gateway": {
              "dataType": "String"
            },
            "DB": {
              "dataType": "Integer"
            }
          },
          "tagType": "UdtType",
          "tags": [
            {
              "valueSource": "memory",
              "name": "Machine_Name",
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "name": "Machine_Code",
              "historyEnabled": false,
              "tagType": "AtomicTag"
            },
            {
              "name": "OPC",
              "tagType": "Folder",
              "tags": [
                {
                  "name": "From",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "opc",
                      "dataType": "Float4",
                      "name": "Volt-Avg",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "expr",
                      "expression": "({[.]Current-B.value}+{[.]Current-R.value}+{[.]Current-Y.value})/3",
                      "name": "CurrentTotal",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "opc",
                      "dataType": "Float4",
                      "name": "Current-B",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "opc",
                      "dataType": "Float4",
                      "name": "VA",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "opc",
                      "dataType": "Float4",
                      "name": "Current-R",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "opc",
                      "dataType": "Float4",
                      "name": "KWH",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "opc",
                      "dataType": "Float4",
                      "name": "Volt-R",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "opc",
                      "dataType": "Float4",
                      "name": "Volt-Y",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "opc",
                      "dataType": "Float4",
                      "name": "Frequency",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "opc",
                      "name": "Status",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "opc",
                      "dataType": "Float4",
                      "name": "Volt-B",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "opc",
                      "dataType": "Float4",
                      "name": "PF",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "opc",
                      "dataType": "Float4",
                      "name": "Current-Y",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "opc",
                      "dataType": "Float4",
                      "name": "WH",
                      "tagType": "AtomicTag"
                    },
                    {
                      "sourceTagPath": {
                        "bindType": "parameter",
                        "binding": "[LMCI-default]EMS/LMCI/Plant-2/{Meter}/Active_Pwr(KW)"
                      },
                      "valueSource": "opc",
                      "dataType": "Float4",
                      "name": "Active_Pwr(KW)",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "rt",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "opc",
                      "name": "TESTING",
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "To",
                  "tagType": "Folder"
                }
              ]
            },
            {
              "name": "Calculation",
              "tagType": "Folder",
              "tags": [
                {
                  "name": "Expression",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "expr",
                      "expression": "{[.]../../OPC/From/Volt-Avg}*1.732",
                      "name": "Voltage_Avg",
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "Triggers",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "expr",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\ttags_to_read \u003d [\n\t     \"[.]../../../../../DateTime\",\n\t\t \"[.]../../../../../../Business_Code\",\n\t\t \"[.]../../../../../../Business_Name\",\t\t\n        \"[.]../../../../../Plant_Code\",\n        \"[.]../../../../../Plant_Name\",\n        \"[.]../../../Cell_Code\",\n        \"[.]../../../Cell_Name\"\n        \"[.]../../../Line_Code\",\n        \"[.]../../../Line_Name\",\n        \"[.]../../Machine_ID\",\n        \"[.]../../Machine_Name\",\n        \"[.]../../Machine_Code\",\n        \"[.]../../../../../Date\",\n\t    \"[.]../../OPC/From/Current-B\",\n\t    \"[.]../../OPC/From/Current-R\",\n\t    \"[.]../../OPC/From/Current-Y\",\n\t    \"[.]../../OPC/From/CurrentTotal\",\n\t    \"[.]../../OPC/From/Frequency\",\n\t    \"[.]../../OPC/From/KWH\",\n\t    \"[.]../../OPC/From/PF\",\n\t    \"[.]../Expression/Voltage_Avg\",\n\t    \"[.]../../OPC/From/Volt-B\",\n\t    \"[.]../../OPC/From/Volt-R\",\n\t    \"[.]../../OPC/From/Volt-Y\",\n\t    \"[.]../../OPC/From/WH\",\n\t    \"[.]../../../../../Shift\",\t    \t    \t   \n\t]\n\ttag_values \u003d [tag.value if tag.value is not None else \u0027\u0027 for tag in system.tag.readBlocking(tags_to_read)]\n\t\n\tEMS_Overall.Log_Function.EMS_trigger(tag_values, \u0027\u0027)"
                        }
                      ],
                      "expression": "floor(getMinute({[.]../../../../../DateTime}) / 5)",
                      "name": "Main_Trigger",
                      "tagType": "AtomicTag"
                    }
                  ]
                }
              ]
            },
            {
              "valueSource": "memory",
              "name": "Machine_Tracking",
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "name": "Machine_Status",
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "name": "Machine_ID",
              "tagType": "AtomicTag"
            }
          ]
        },
        {
          "name": "3000",
          "tagType": "Folder",
          "tags": [
            {
              "name": "3200",
              "tagType": "Folder",
              "tags": [
                {
                  "name": "EM6436H_OPC_Line",
                  "parameters": {
                    "Meter": {
                      "dataType": "String",
                      "value": ""
                    },
                    "Gateway": {
                      "dataType": "String",
                      "value": "RML_BCD_P3_ADVANT_1"
                    },
                    "DB": {
                      "dataType": "String",
                      "value": "EMS_CP"
                    }
                  },
                  "tagType": "UdtType",
                  "tags": [
                    {
                      "valueSource": "db",
                      "datasource": "EMS_CP",
                      "query": "SELECT Data_Tracking \r\nFROM [EMS_CP].[dbo].[M_EMS_MASTER]\r\nWHERE Business_ID \u003d {[.]../../../../Business_Code}\r\n  AND Plant_ID\u003d {[.]../../../Plant_Code}\r\n  AND Cell_ID \u003d{[.]../../Cell_Code}\r\n  AND Line_ID \u003d {[.]../Line_Code}\r\n  AND Machine_Code \u003d {[.]Machine_Code}",
                      "name": "Machine_Tracking",
                      "executionMode": "FixedRate",
                      "executionRate": 15000,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "String",
                      "name": "Machine_Name",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "Calculation",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "Expression",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "valueSource": "expr",
                              "expression": "{[.]../../OPC/From/Volt-Avg}*1.732",
                              "name": "Voltage_Avg",
                              "tagType": "AtomicTag"
                            }
                          ]
                        },
                        {
                          "name": "Triggers",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "valueSource": "expr",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "   \tM_Tracking\u003dsystem.tag.read(\"[.]../../Machine_Tracking\").value\n\tif M_Tracking\u003d\u003d1:\n\t\ttags_to_read \u003d [\n\t\t     \"[.]../../../../../DateTime\",\n\t\t\t \"[.]../../../../../../Business_Code\",\t\t\n\t        \"[.]../../../../../Plant_Code\",\n\t        \"[.]../../../../Cell_Code\",\n\t        \"[.]../../../Line_Code\",\n\t        \"[.]../../Machine_ID\",\n\t        \"[.]../../Machine_Code\",\n\t        \"[.]../../../../../Date\",\n\t        \"[.]../../../../../Shift\",\t\n\t\t    \"[.]../../OPC/From/Current-B\",\n\t\t    \"[.]../../OPC/From/Current-R\",\n\t\t    \"[.]../../OPC/From/Current-Y\",\n\t\t    \"[.]../../OPC/From/Current_Avg\",\n\t\t    \"[.]../../OPC/From/Frequency\",\n\t\t    \"[.]../../OPC/From/KWH\",\n\t\t    \"[.]../../OPC/From/PF\",\n\t\t    \"[.]../Expression/Voltage_Avg\",\n\t\t    \"[.]../../OPC/From/Volt-B\",\n\t\t    \"[.]../../OPC/From/Volt-R\",\n\t\t    \"[.]../../OPC/From/Volt-Y\",\n\t\t    \"[.]../../OPC/From/WH\",\n\t\t        \t    \t   \n\t\t]\n\t\ttag_values \u003d [tag.value if tag.value is not None else \u0027\u0027 for tag in system.tag.readBlocking(tags_to_read)]\n\t\t\n\t\tEMS_Overall.TestFunction.EMS_trigger(tag_values)"
                                }
                              ],
                              "expression": "floor(getMinute({[.]../../../../../DateTime}) / 5)",
                              "name": "Main_Trigger",
                              "tagType": "AtomicTag"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "valueSource": "memory",
                      "name": "Machine_ID",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Machine_Status",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Machine_Code",
                      "historyEnabled": false,
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "OPC",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "To",
                          "tagType": "Folder"
                        },
                        {
                          "name": "From",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dOpcUaServer.Data_Center;s\u003dDPO_{Meter}:Active_Power_T"
                              },
                              "sourceTagPath": {
                                "bindType": "parameter",
                                "binding": "[LMCI-default]EMS/LMCI/Plant-2/{Meter}/Active_Pwr(KW)"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "dataType": "Float4",
                              "name": "Active_Pwr_T",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dOpcUaServer.Data_Center;s\u003dDPO_{Meter}:Current_Y"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "dataType": "Float4",
                              "name": "Current-Y",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dOpcUaServer.Data_Center;s\u003dDPO_{Meter}:Voltage_B"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "dataType": "Float4",
                              "name": "Volt-B",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dOpcUaServer.Data_Center;s\u003dDPO_{Meter}:Voltage_RYBN_Avg"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "dataType": "Float4",
                              "name": "Volt-Avg",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dOpcUaServer.Data_Center;s\u003dDPO_{Meter}:Current_B"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "dataType": "Float4",
                              "name": "Current-B",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dOpcUaServer.Data_Center;s\u003dDPO_{Meter}:Voltage_R"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "dataType": "Float4",
                              "name": "Volt-R",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dOpcUaServer.Data_Center;s\u003dDPO_{Meter}:Power_Factor_T"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "dataType": "Float4",
                              "name": "PF",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dOpcUaServer.Data_Center;s\u003dDPO_{Meter}:Voltage_Y"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "dataType": "Float4",
                              "name": "Volt-Y",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dOpcUaServer.Data_Center;s\u003dDPO_{Meter}:Active_Energy_Into_Load"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "dataType": "Float4",
                              "name": "KWH",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dOpcUaServer.Data_Center;s\u003dDPO_{Meter}:Current_Avg"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "expression": "({[.]Current-B.value}+{[.]Current-R.value}+{[.]Current-Y.value})/3",
                              "name": "Current_Avg",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dOpcUaServer.Data_Center;s\u003dDPO_{Meter}:Frequency"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "dataType": "Float4",
                              "name": "Frequency",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dOpcUaServer.Data_Center;s\u003dDPO_{Meter}:Current_R"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "dataType": "Float4",
                              "name": "Current-R",
                              "tagType": "AtomicTag"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "EM6436H_OPC_Line",
          "parameters": {
            "Meter": {
              "dataType": "String"
            },
            "Gateway": {
              "dataType": "String"
            },
            "DB": {
              "dataType": "Integer"
            }
          },
          "tagType": "UdtType",
          "tags": [
            {
              "valueSource": "memory",
              "name": "Machine_Tracking",
              "tagType": "AtomicTag"
            },
            {
              "name": "OPC",
              "tagType": "Folder",
              "tags": [
                {
                  "name": "To",
                  "tagType": "Folder"
                },
                {
                  "name": "From",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "opc",
                      "dataType": "Float4",
                      "name": "Current-B",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "opc",
                      "dataType": "Float4",
                      "name": "PF",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "opc",
                      "dataType": "Float4",
                      "name": "Current-Y",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "opc",
                      "dataType": "Float4",
                      "name": "Volt-B",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "opc",
                      "dataType": "Float4",
                      "name": "Volt-R",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "opc",
                      "dataType": "Float4",
                      "name": "Current-R",
                      "tagType": "AtomicTag"
                    },
                    {
                      "sourceTagPath": {
                        "bindType": "parameter",
                        "binding": "[LMCI-default]EMS/LMCI/Plant-2/{Meter}/Active_Pwr(KW)"
                      },
                      "valueSource": "opc",
                      "dataType": "Float4",
                      "name": "Active_Pwr_T",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "opc",
                      "expression": "({[.]Current-B.value}+{[.]Current-R.value}+{[.]Current-Y.value})/3",
                      "name": "Current_Avg",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "opc",
                      "dataType": "Float4",
                      "name": "KWH",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "opc",
                      "dataType": "Float4",
                      "name": "Frequency",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "opc",
                      "dataType": "Float4",
                      "name": "Volt-Y",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "opc",
                      "dataType": "Float4",
                      "name": "Volt-Avg",
                      "tagType": "AtomicTag"
                    }
                  ]
                }
              ]
            },
            {
              "valueSource": "memory",
              "name": "Machine_Code",
              "historyEnabled": false,
              "tagType": "AtomicTag"
            },
            {
              "name": "Calculation",
              "tagType": "Folder",
              "tags": [
                {
                  "name": "Expression",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "expr",
                      "expression": "{[.]../../OPC/From/Volt-Avg}*1.732",
                      "name": "Voltage_Avg",
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "Triggers",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "expr",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\ttags_to_read \u003d [\n\t     \"[.]../../../../../DateTime\",\n\t\t \"[.]../../../../../../Business_Code\",\n\t\t \"[.]../../../../../../Business_Name\",\t\t\n        \"[.]../../../../../Plant_Code\",\n        \"[.]../../../../../Plant_Name\",\n        \"[.]../../../Line_Code\",\n        \"[.]../../../Line_Name\",\n        \"[.]../../Machine_ID\",\n        \"[.]../../Machine_Name\",\n        \"[.]../../Machine_Code\",\n        \"[.]../../../../../Date\",\n\t    \"[.]../../OPC/From/Current-B\",\n\t    \"[.]../../OPC/From/Current-R\",\n\t    \"[.]../../OPC/From/Current-Y\",\n\t    \"[.]../../OPC/From/CurrentTotal\",\n\t    \"[.]../../OPC/From/Frequency\",\n\t    \"[.]../../OPC/From/KWH\",\n\t    \"[.]../../OPC/From/PF\",\n\t    \"[.]../Expression/Voltage_Avg\",\n\t    \"[.]../../OPC/From/Volt-B\",\n\t    \"[.]../../OPC/From/Volt-R\",\n\t    \"[.]../../OPC/From/Volt-Y\",\n\t    \"[.]../../OPC/From/WH\",\n\t    \"[.]../../../../../Shift\",\t    \t    \t   \n\t]\n\ttag_values \u003d [tag.value if tag.value is not None else \u0027\u0027 for tag in system.tag.readBlocking(tags_to_read)]\n\t\n\tEMS_Overall.Log_Function.EMS_trigger(tag_values, \u0027Line\u0027)"
                        }
                      ],
                      "expression": "floor(getMinute({[.]../../../../../DateTime}) / 5)",
                      "name": "Main_Trigger",
                      "tagType": "AtomicTag"
                    }
                  ]
                }
              ]
            },
            {
              "valueSource": "memory",
              "name": "Machine_Name",
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "name": "Machine_ID",
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "name": "Machine_Status",
              "tagType": "AtomicTag"
            }
          ]
        },
        {
          "name": "Meter_Ref_Cell",
          "parameters": {
            "Meter": {
              "dataType": "String",
              "value": "LMCI/Plant-2/UTL_COMPRESSOR-2"
            },
            "Gateway": {
              "dataType": "String",
              "value": ""
            },
            "DB": {
              "dataType": "Integer"
            }
          },
          "tagType": "UdtType",
          "tags": [
            {
              "name": "Calculation",
              "tagType": "Folder",
              "tags": [
                {
                  "name": "Triggers",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "expr",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\ttags_to_read \u003d [\n\t     \"[.]../../../../../DateTime\",\n\t\t \"[.]../../../../../../Business_Code\",\n\t\t \"[.]../../../../../../Business_Name\",\t\t\n        \"[.]../../../../../Plant_Code\",\n        \"[.]../../../../../Plant_Name\",\n        \"[.]../../../../Cell_Code\",\n        \"[.]../../../../Cell_Name\",\n        \"[.]../../Machine_ID\",\n        \"[.]../../Machine_Name\",\n        \"[.]../../Machine_Code\",\n        \"[.]../../../../../Date\",\n\t    \"[.]../../OPC/From/Current-B\",\n\t    \"[.]../../OPC/From/Current-R\",\n\t    \"[.]../../OPC/From/Current-Y\",\n\t    \"[.]../../OPC/From/CurrentTotal\",\n\t    \"[.]../../OPC/From/Frequency\",\n\t    \"[.]../../OPC/From/KWH\",\n\t    \"[.]../../OPC/From/PF\",\n\t    \"[.]../Expression/Voltage_Avg\",\n\t    \"[.]../../OPC/From/Volt-B\",\n\t    \"[.]../../OPC/From/Volt-R\",\n\t    \"[.]../../OPC/From/Volt-Y\",\n\t    \"[.]../../OPC/From/WH\",\n\t    \"[.]../../../../../Shift\",\t    \t    \t   \n\t]\n\ttag_values \u003d [tag.value if tag.value is not None else \u0027\u0027 for tag in system.tag.readBlocking(tags_to_read)]\n\t\n\tEMS_Overall.Log_Function.EMS_trigger(tag_values, \u0027Cell\u0027)"
                        }
                      ],
                      "expression": "floor(getMinute({[.]../../../../../DateTime}) / 5)",
                      "name": "Main_Trigger",
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "Expression",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "expr",
                      "expression": "{[.]../../OPC/From/Volt-Avg}*1.732",
                      "name": "Voltage_Avg",
                      "tagType": "AtomicTag"
                    }
                  ]
                }
              ]
            },
            {
              "valueSource": "memory",
              "name": "Machine_Code",
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "name": "Machine_Status",
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "name": "Machine_ID",
              "tagType": "AtomicTag"
            },
            {
              "name": "OPC",
              "tagType": "Folder",
              "tags": [
                {
                  "name": "To",
                  "tagType": "Folder"
                },
                {
                  "name": "From",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "sourceTagPath": {
                        "bindType": "parameter",
                        "binding": "[LMCI-default]EMS/{Meter}/KWH"
                      },
                      "valueSource": "reference",
                      "dataType": "Float4",
                      "name": "KWH",
                      "tagType": "AtomicTag"
                    },
                    {
                      "sourceTagPath": {
                        "bindType": "parameter",
                        "binding": "[LMCI-default]EMS/{Meter}/Volt-Y"
                      },
                      "valueSource": "reference",
                      "dataType": "Float4",
                      "name": "Volt-Y",
                      "tagType": "AtomicTag"
                    },
                    {
                      "sourceTagPath": {
                        "bindType": "parameter",
                        "binding": "[LMCI-default]EMS/{Meter}/Frequency"
                      },
                      "valueSource": "reference",
                      "dataType": "Float4",
                      "name": "Frequency",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "expr",
                      "expression": "({[.]Current-B.value}+{[.]Current-R.value}+{[.]Current-Y.value})/3",
                      "name": "CurrentTotal",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "opc",
                      "opcItemPath": "ns\u003d4;s\u003dstatus",
                      "name": "Status",
                      "tagType": "AtomicTag",
                      "opcServer": "eWON - RML-P4-EMS"
                    },
                    {
                      "sourceTagPath": {
                        "bindType": "parameter",
                        "binding": "[LMCI-default]EMS/{Meter}/Active_Pwr(KW)"
                      },
                      "valueSource": "reference",
                      "dataType": "Float4",
                      "name": "Active_Pwr(KW)",
                      "tagType": "AtomicTag"
                    },
                    {
                      "sourceTagPath": {
                        "bindType": "parameter",
                        "binding": "[LMCI-default]EMS/{Meter}/Current-B"
                      },
                      "valueSource": "reference",
                      "dataType": "Float4",
                      "name": "Current-B",
                      "tagType": "AtomicTag"
                    },
                    {
                      "sourceTagPath": {
                        "bindType": "parameter",
                        "binding": "[LMCI-default]EMS/{Meter}/Volt-B"
                      },
                      "valueSource": "reference",
                      "dataType": "Float4",
                      "name": "Volt-B",
                      "tagType": "AtomicTag"
                    },
                    {
                      "sourceTagPath": {
                        "bindType": "parameter",
                        "binding": "[LMCI-default]EMS/{Meter}/PF"
                      },
                      "valueSource": "reference",
                      "dataType": "Float4",
                      "name": "PF",
                      "tagType": "AtomicTag"
                    },
                    {
                      "sourceTagPath": {
                        "bindType": "parameter",
                        "binding": "[LMCI-default]EMS/{Meter}/Volt-Avg"
                      },
                      "valueSource": "reference",
                      "dataType": "Float4",
                      "name": "Volt-Avg",
                      "tagType": "AtomicTag"
                    },
                    {
                      "sourceTagPath": {
                        "bindType": "parameter",
                        "binding": "[LMCI-default]EMS/{Meter}/Volt-R"
                      },
                      "valueSource": "reference",
                      "dataType": "Float4",
                      "name": "Volt-R",
                      "tagType": "AtomicTag"
                    },
                    {
                      "sourceTagPath": {
                        "bindType": "parameter",
                        "binding": "[LMCI-default]EMS/{Meter}/Current-R"
                      },
                      "valueSource": "reference",
                      "dataType": "Float4",
                      "name": "Current-R",
                      "tagType": "AtomicTag"
                    },
                    {
                      "sourceTagPath": {
                        "bindType": "parameter",
                        "binding": "[LMCI-default]EMS/{Meter}/WH"
                      },
                      "valueSource": "reference",
                      "dataType": "Float4",
                      "name": "WH",
                      "tagType": "AtomicTag"
                    },
                    {
                      "sourceTagPath": {
                        "bindType": "parameter",
                        "binding": "[LMCI-default]EMS/{Meter}/Current-Y"
                      },
                      "valueSource": "reference",
                      "dataType": "Float4",
                      "name": "Current-Y",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "opc",
                      "opcItemPath": "ns\u003d4;i\u003d320",
                      "dataType": "Float4",
                      "name": "VA",
                      "tagType": "AtomicTag",
                      "opcServer": "SIMATIC.S7-1200.OPC-UA.Application:P2_EMS"
                    },
                    {
                      "valueSource": "memory",
                      "name": "rt",
                      "value": 0,
                      "tagType": "AtomicTag"
                    }
                  ]
                }
              ]
            },
            {
              "valueSource": "memory",
              "name": "Machine_Name",
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "name": "Machine_Tracking",
              "tagType": "AtomicTag"
            }
          ]
        }
      ]
    },
    {
      "name": "Exchange",
      "tagType": "Folder",
      "tags": [
        {
          "name": "Cognex",
          "tagType": "Folder",
          "tags": [
            {
              "name": "Result",
              "typeId": "",
              "tagType": "UdtType",
              "tags": [
                {
                  "valueSource": "memory",
                  "dataType": "DateTime",
                  "name": "Timestamp",
                  "formatString": "yyyy-MM-dd h:mm:ss aa",
                  "tagType": "AtomicTag"
                },
                {
                  "name": "Images",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "memory",
                      "dataType": "String",
                      "name": "Jpeg",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "String",
                      "name": "Svg",
                      "tagGroup": "Default",
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "valueSource": "memory",
                  "dataType": "Document",
                  "name": "Data",
                  "value": "[]",
                  "tagType": "AtomicTag"
                },
                {
                  "name": "Viewport",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "memory",
                      "name": "Width",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Height",
                      "tagType": "AtomicTag"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Connection",
              "typeId": "",
              "tagType": "UdtType",
              "tags": [
                {
                  "name": "Camera",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "memory",
                      "dataType": "String",
                      "name": "JobName",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "String",
                      "name": "FirmwareVersion",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "String",
                      "name": "Model",
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "Config",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "memory",
                      "name": "Port",
                      "formatString": "##0",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "String",
                      "name": "Password",
                      "value": "",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "String",
                      "name": "IP",
                      "value": "",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "Document",
                      "documentation": "By default this will read all cells. There are a lot of them.",
                      "name": "ReadCells",
                      "value": [],
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "String",
                      "name": "Username",
                      "value": "",
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "Status",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "memory",
                      "dataType": "Boolean",
                      "name": "Connected",
                      "value": false,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "String",
                      "name": "Description",
                      "value": "",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "expr",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tif(currentValue.value \u003d\u003d 20):\n\t\tsystem.tag.writeAsync([\"[.]../Commands/KeepAlive\"],[True])"
                        }
                      ],
                      "expression": "if({[.]Connected},  getSecond(now(1000)) % 20 + 1, 0)",
                      "readOnly": true,
                      "dataType": "Int4",
                      "name": "KeepAlive",
                      "formatString": "#,##0.##",
                      "executionMode": "EventDriven",
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "Results",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "name": "Last",
                      "typeId": "Exchange/Cognex/Result",
                      "tagType": "UdtInstance",
                      "tags": [
                        {
                          "name": "Data",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "Timestamp",
                          "tagType": "AtomicTag"
                        },
                        {
                          "name": "Viewport",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "name": "Height",
                              "tagType": "AtomicTag"
                            },
                            {
                              "name": "Width",
                              "tagType": "AtomicTag"
                            }
                          ]
                        },
                        {
                          "name": "Images",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "name": "Svg",
                              "tagType": "AtomicTag"
                            },
                            {
                              "name": "Jpeg",
                              "tagType": "AtomicTag"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Commands",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "memory",
                      "dataType": "Boolean",
                      "name": "KeepAlive",
                      "value": false,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "Boolean",
                      "name": "Capture",
                      "value": false,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tif(not initialChange):\n\t\tif(currentValue.value):\n\t\t\t\n\t\t\t#Get the parent UDT tag path\n\t\t\tudtTagPath \u003d str(tagPath).rsplit(\u0027/\u0027,2)[0]\n\t\t\t\n\t\t\t#Start a new asynchronous Cognex device connection. Give it the path to the UDT tag.\n\t\t\tsystem.util.invokeAsynchronous(exchange.cognexVisionDemo.connect, [udtTagPath])\n\t\telse:\n\t\t\t#Reset the connected status\n\t\t\tsystem.util.getLogger(\u0027Cognex Connection Connection\u0027).info(\"Disconnecting\")\n\t\t\tsystem.tag.writeBlocking([\"[.]../Status/Connected\"],[False])"
                        }
                      ],
                      "dataType": "Boolean",
                      "name": "Connect",
                      "value": false,
                      "tagType": "AtomicTag"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "System Monitor",
          "tagType": "Folder",
          "tags": [
            {
              "name": "System Monitor",
              "parameters": {
                "storageProvider": {
                  "dataType": "String"
                }
              },
              "tagType": "UdtType",
              "tags": [
                {
                  "historyProvider": {
                    "bindType": "parameter",
                    "binding": "{storageProvider}"
                  },
                  "valueSource": "memory",
                  "dataType": "Float4",
                  "name": "CPU",
                  "historyEnabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "historyProvider": {
                    "bindType": "parameter",
                    "binding": "{storageProvider}"
                  },
                  "valueSource": "memory",
                  "dataType": "Float4",
                  "name": "In Use Memory",
                  "historyEnabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "historyProvider": {
                    "bindType": "parameter",
                    "binding": "{storageProvider}"
                  },
                  "valueSource": "memory",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\t\n\t# Calculate In Use Memory based on updated Available Memory\n\tif currentValue.value:\n\t\ttry:\n\t\t\ttagPaths \u003d [\"[.]In Use Memory\", \"[.]Total Memory\", \"[.]Available Memory\"]\n\t\t\t[inUseMemory, totalMemory, availableMemory] \u003d system.tag.readBlocking(tagPaths)\n\t\t\t\n\t\t\t# Calculate In Use Memory\n\t\t\tinUseMemory \u003d totalMemory.value - availableMemory.value\n\t\t\t\n\t\t\t# Format In Use Memory to two decimal places\n\t\t\tinUseMemoryFormatted \u003d round(inUseMemory, 2)\n\t\t\t\n\t\t\t# Write the formatted value back to the In Use Memory tag\n\t\t\tsystem.tag.writeBlocking([\"[.]In Use Memory\"], [inUseMemoryFormatted])\n\t\texcept Exception as e:\n\t\t\t# Handle exceptions if any\n\t\t\tprint(\"Error:\", e)"
                    }
                  ],
                  "dataType": "Float4",
                  "name": "Available Memory",
                  "historyEnabled": true,
                  "tagType": "AtomicTag"
                },
                {
                  "historyProvider": {
                    "bindType": "parameter",
                    "binding": "{storageProvider}"
                  },
                  "valueSource": "memory",
                  "dataType": "String",
                  "name": "Uptime",
                  "historyEnabled": true,
                  "formatString": "#,##0.##",
                  "tagType": "AtomicTag"
                },
                {
                  "historyProvider": {
                    "bindType": "parameter",
                    "binding": "{storageProvider}"
                  },
                  "valueSource": "memory",
                  "historyMaxAge": 0,
                  "historyTimeDeadband": 0,
                  "historicalDeadbandMode": "Absolute",
                  "dataType": "Float4",
                  "historyMaxAgeUnits": "HOUR",
                  "name": "Total Memory",
                  "historyEnabled": true,
                  "historyTimeDeadbandUnits": "HOUR",
                  "sampleMode": "OnChange",
                  "tagType": "AtomicTag"
                },
                {
                  "valueSource": "expr",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\tfrom java.lang.management import ManagementFactory\n\t\n\tkilo \u003d 1024.0\n\tmega \u003d 1048576.0\n\tgiga \u003d 1073741824.0\n\ttera \u003d 1099511627776.0\n\t\n\t# Get system metrics\n\tbean \u003d ManagementFactory.getOperatingSystemMXBean()\n\tcpu \u003d bean.getSystemCpuLoad() * 100  # CPU load in percentage\n\ttotalMem \u003d bean.getTotalPhysicalMemorySize() / giga  # Total physical memory in GB\n\tavailableMem \u003d bean.getFreePhysicalMemorySize() / giga  # Available memory in GB\n\t\n\t# Get uptime\n\truntimeMXBean \u003d ManagementFactory.getRuntimeMXBean()\n\tuptimeMillis \u003d runtimeMXBean.getUptime()  # Uptime in milliseconds\n\t\n\t# Convert uptime to days, hours, minutes, and seconds\n\tuptimeSeconds \u003d uptimeMillis / 1000.0\n\tdays \u003d int(uptimeSeconds // (24 * 3600))\n\thours \u003d int((uptimeSeconds % (24 * 3600)) // 3600)\n\tminutes \u003d int((uptimeSeconds % 3600) // 60)\n\t\n\t\n\t# Format uptime as days:hours:minutes:seconds\n\tuptimeFormatted \u003d \"{}d:{:02d}h:{:02d}m\".format(days, hours, minutes)\n\t\n\t# Format other values to 2 decimal places\n\tcpuFormatted \u003d \"{:.2f}\".format(cpu)\n\ttotalMemFormatted \u003d \"{:.2f}\".format(totalMem)\n\tavailableMemFormatted \u003d \"{:.2f}\".format(availableMem)\n\t\n\t# Define paths and parameters\n\tpaths \u003d [\"[.]CPU\", \"[.]Total Memory\", \"[.]Available Memory\", \"[.]Uptime\"]\n\tparams \u003d [float(cpuFormatted), float(totalMemFormatted), float(availableMemFormatted), uptimeFormatted]\n\t\n\t# Write values to tags\n\tsystem.tag.writeBlocking(paths, params)"
                    }
                  ],
                  "expression": "now(0)",
                  "dataType": "Float8",
                  "name": "Update",
                  "executionMode": "TagGroupRate",
                  "tagType": "AtomicTag"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "OEE",
      "tagType": "Folder",
      "tags": [
        {
          "name": "Machine",
          "typeId": "",
          "parameters": {
            "Machine_ID": {
              "dataType": "String"
            },
            "Machine_Path": {
              "dataType": "String",
              "value": ""
            },
            "DB": {
              "dataType": "String"
            },
            "Gateway": {
              "dataType": "String"
            },
            "Machine_Code": {
              "dataType": "Integer"
            }
          },
          "tagType": "UdtType",
          "tags": [
            {
              "valueSource": "db",
              "dataType": "String",
              "datasource": "Master",
              "query": "Select distinct Machine_name from STD_Master where Business_ID \u003d {[.]../../../../Business_Code} and Plant_ID \u003d {[.]../../../Plant_Code} and Cell_ID \u003d {[.]../../Cell_Code} and Line_ID \u003d {[.]../Line_Code} and Machine_Code \u003d {[.]Machine_Code} and Status \u003d \u0027Live\u0027",
              "name": "Machine_Name",
              "value": "0",
              "tagType": "AtomicTag"
            },
            {
              "value": {
                "bindType": "parameter",
                "binding": "{Machine_Code}"
              },
              "valueSource": "memory",
              "name": "Machine_Code",
              "tagType": "AtomicTag"
            },
            {
              "name": "OPC",
              "tagType": "Folder",
              "tags": [
                {
                  "name": "To",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/PER_{Machine_ID}"
                      },
                      "valueSource": "memory",
                      "name": "Performance",
                      "tagType": "AtomicTag",
                      "opcServer": "Ignition OPC UA Server"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/IWT_{Machine_ID}"
                      },
                      "valueSource": "memory",
                      "name": "IW_Time",
                      "tagType": "AtomicTag",
                      "opcServer": "Ignition OPC UA Server"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/QUAL_{Machine_ID}"
                      },
                      "valueSource": "memory",
                      "name": "Quality",
                      "tagType": "AtomicTag",
                      "opcServer": "Ignition OPC UA Server"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/RESET_{Machine_ID}"
                      },
                      "valueSource": "memory",
                      "name": "Shift_Reset",
                      "tagType": "AtomicTag",
                      "opcServer": "Ignition OPC UA Server"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/AVA_{Machine_ID}"
                      },
                      "valueSource": "memory",
                      "name": "Availability",
                      "tagType": "AtomicTag",
                      "opcServer": "Ignition OPC UA Server"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/OEE_{Machine_ID}"
                      },
                      "valueSource": "memory",
                      "name": "OEE",
                      "tagType": "AtomicTag",
                      "opcServer": "Ignition OPC UA Server"
                    }
                  ]
                },
                {
                  "name": "From",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dRejection_Count{Machine_ID}"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Bad_Count",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dLoading_Unloading_Time{Machine_ID}"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "LU_Time",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dOperator_ID{Machine_ID}"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Operator_Id",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dMachine_Status{Machine_ID}"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Machine_Status",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dMachineBreakDownReasons{Machine_ID}"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "BD_Reason",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dMachine_cycle_time{Machine_ID}"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "MT_Actual",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dReject_reason{Machine_ID}"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Rejection_Reason",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dPart_Number{Machine_ID}"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Part_Id",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dGOC_Communication{Machine_ID}"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "GOC_Com",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dProduction_Count{Machine_ID}"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Good_Count",
                      "tagType": "AtomicTag"
                    }
                  ]
                }
              ]
            },
            {
              "valueSource": "memory",
              "name": "Machine_Tracking",
              "value": 0,
              "tagType": "AtomicTag"
            },
            {
              "name": "Calculation",
              "tagType": "Folder",
              "tags": [
                {
                  "name": "OEE",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "db",
                      "query": "select isnull((Select CycleTime from OEE_ProductMaster where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Cell_ID \u003d {[.]../../../../Cell_Code} and Line_ID \u003d {[.]../../../Line_Code} and Machine_Code \u003d {[.]../../Machine_Code} and Product_ID \u003d {[.]../../OPC/From/Part_Id}),0)",
                      "name": "CT",
                      "tagType": "AtomicTag"
                    },
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "db",
                      "query": "select isnull((Select CycleTime_Cumulative from OEE_ProductMaster where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Cell_ID \u003d {[.]../../../../Cell_Code} and Line_ID \u003d {[.]../../../Line_Code} and Machine_Code \u003d {[.]../../Machine_Code} and Product_ID \u003d {[.]../../OPC/From/Part_Id}),0)",
                      "name": "Cum_CT",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "DateTime",
                      "name": "OEE_Start",
                      "formatString": "yyyy-MM-dd h:mm:ss aa",
                      "value": 1735670220000,
                      "tagType": "AtomicTag"
                    },
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "db",
                      "dataType": "String",
                      "query": "Select isnull((Select Product_Name from OEE_ProductMaster where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Cell_ID \u003d {[.]../../../../Cell_Code} and Line_ID \u003d {[.]../../../Line_Code} and Machine_Code \u003d {[.]../../Machine_Code} and Product_ID \u003d {[.]../../OPC/From/Part_Id}),\u0027No Part Model in Master\u0027)",
                      "name": "Part_Model",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "sourceTagPath": "0",
                      "name": "PS_Planner",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "db",
                      "query": "Select isnull((Select Handling_Time from OEE_ProductMaster where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Cell_ID \u003d {[.]../../../../Cell_Code} and Line_ID \u003d {[.]../../../Line_Code} and Machine_Code \u003d {[.]../../Machine_Code} and Product_ID \u003d {[.]../../OPC/From/Part_Id}),0)",
                      "name": "HT_Std",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "CT_Actual",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "DateTime",
                      "name": "OEE_Stop",
                      "formatString": "yyyy-MM-dd h:mm:ss aa",
                      "value": 1735670220000,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "HT_Actual",
                      "value": 0,
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "Operating_Time",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "memory",
                      "name": "Off_Timer",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Stop_Timer",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Reason_UD",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "Int4",
                      "name": "Shift_Time",
                      "formatString": "#,##0.##",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "MC_Time",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "HT_Time",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Idle_Timer",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "DateTime",
                      "name": "DT_Start_Act",
                      "formatString": "yyyy-MM-dd h:mm:ss aa",
                      "value": 1735670220000,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Down_Time",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Run_Timer",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "DT_Type",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "DT_Reason",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tOEE_ON \u003d system.tag.read(\"[.]../Count/OEE_On\").value\n\tMACHINE_Tracking \u003d system.tag.read(\"[.]../../Machine_Tracking\").value\n\tMachine_Status \u003d system.tag.read(\"[.]MC_Status_Act\").value\n\tT_Stamp \u003d system.tag.read(\"[.]../../../../DateTime_OEE\").value\n\tif OEE_ON \u003d\u003d 1 and MACHINE_Tracking \u003d\u003d 1 and Machine_Status \u003d\u003d 1:\n\t\tsystem.tag.write(\"[.]DT_Stop\",T_Stamp)\n\ttags_to_read \u003d [\n        \"[.]../Count/OEE_On\",\n        \"[.]../../Machine_Tracking\",\n        \"[.]MC_Status_Act\",\n        \"[.]../Triggers/Off_Tag\",\n        \"[.]../../../../../DateTime_OEE\",\n        \"[.]DT_Start\",\n        \"[.]DT_Start_Act\",\n        \"[.]../../../../../../Business_Code\",\n        \"[.]../../../../../../Business_Name\",\n        \"[.]../../../../../Plant_Code\",\n        \"[.]../../../../../Plant_Name\",\n        \"[.]../../../../Cell_Code\",\n        \"[.]../../../../Cell_Name\",\n        \"[.]../../../Line_Code\",\n        \"[.]../../../Line_Name\",\n        \"[.]../../Machine_Code\",\n        \"[.]../../Machine_Name\",\n        \"[.]../../OPC/From/Operator_Id\",\n        \"[.]../../../../../Shift\",\n        \"[.]../../../../../Shift_Hour\",\n        \"[.]../../../../../../../Hour\",\n        \"[.]../../../../../../../Date_hour\",\n        \"[.]Shift_Time\",\n        \"[.]../OEE/OEE_Start\",\n        \"[.]Idle_Timer\",\n        \"[.]Stop_Timer\",\n        \"[.]Run_Timer\",\n        \"[.]Off_Timer\",\n        \"[.]../Count/G_Count\",\n        \"[.]../Count/R_Count\",\n        \"[.]../../OPC/From/Part_Id\",\n        \"[.]DT_Stop\",\n        \"[.]../Triggers/Idel_Limit\",\n        \"[.]DT_Reason\",\n        \"[.]../OEE/CT\",\n        \"[.]../Count/CT_H\",\n        \"[.]../Count/CT_E\",\n        \"[.]../Count/CT_L\",\n        \"[.]HT_Time\",\n        \"[.]MC_Time\",\n        \"[.]../../../../../DateTime_OEE\"\n    ]\n    \n\tOEE.MC_Status_Act.MC_Status_Act(tags_to_read)\n    "
                        }
                      ],
                      "name": "MC_Status_Act",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Minor_Loss",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "DateTime",
                      "name": "DT_Stop",
                      "formatString": "yyyy-MM-dd h:mm:ss aa",
                      "value": 1735670220000,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "DateTime",
                      "name": "DT_Start",
                      "formatString": "yyyy-MM-dd h:mm:ss aa",
                      "value": 1735670220000,
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "Count",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "memory",
                      "name": "OEE_On",
                      "value": 1,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "CT_H",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Rejection_Act",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "CT_L",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "db",
                      "query": "Select isnull((Select PartPerCount from OEE_ProductMaster where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Cell_ID \u003d {[.]../../../../Cell_Code} and Line_ID \u003d {[.]../../../Line_Code} and Machine_Code \u003d {[.]../../Machine_Code} and Product_ID \u003d {[.]../../OPC/From/Part_Id}),0)",
                      "name": "Part_Per_Cycle",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Idel_Time",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "R_Count",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "CT_E",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "G_Count",
                      "value": 0,
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "Triggers",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "qualityChanged",
                          "script": "\tMS_Qual \u003d currentValue.quality\n\tif currentValue.quality.isGood():\n\t\tsystem.tag.write(\"[.]Off_Tag\",0)\n\telse:\n\t\tsystem.tag.write(\"[.]Off_Tag\",1)"
                        },
                        {
                          "eventid": "valueChanged",
                          "script": "\tMC_Status \u003d currentValue.value\n\t#system.tag.write(\"[default]Tags/OEE/Enterprise/BG4/Plant2/Line1/Machine1/Operating_time/Mc_status\",a)\n\tsystem.tag.write(\"[.]../Operating_Time/MC_Status_Act\",MC_Status)\n\tsystem.tag.write(\"[.]HT_Timer\",0)\n\tif MC_Status \u003d\u003d 1:\n\t\tsystem.tag.write(\"[.]../Operating_Time/MC_Status_Act\",1)\n\t\tsystem.tag.write(\"[.]HT_Timer\",0)\n\t\t#system.tag.write(\"[default]Tags/OEE/Enterprise/BG4/Plant2/Line1/Machine1/Operating_time/Mc_status_Act 1\",1)\n\t\t\t\n\t"
                        }
                      ],
                      "sourceTagPath": "[.]../../OPC/From/Machine_Status",
                      "name": "MC_Status_Trigger",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\ttags_to_read \u003d [\n\t    \"[.]../Count/OEE_On\",\n\t    \"[.]MC_Status_Trigger\",\n\t    \"[.]../Count/R_Count\",\n\t    \"[.]../Count/Part_Per_Cycle\",\n\t    \"[.]../../OPC/From/MT_Actual\",\n\t    \"[.]../OEE/HT_Actual\",\n\t    \"[.]../Operating_Time/MC_Time\",\n\t    \"[.]../Operating_Time/HT_Time\",\n\t    \"[.]../OEE/Cum_CT\",\n\t    \"[.]../Count/CT_H\",\n\t    \"[.]../Count/CT_L\",\n\t    \"[.]../Count/CT_E\",\n\t    \"[.]../../../../../../Business_Code\",\n\t    \"[.]../../../../../../Business_Name\",\n\t    \"[.]../../../../../Plant_Code\",\n\t    \"[.]../../../../../Plant_Name\",\n\t    \"[.]../../../../Cell_Code\",\n\t    \"[.]../../../../Cell_Name\",\n\t    \"[.]../../../Line_Code\",\n\t    \"[.]../../../Line_Name\",\n\t    \"[.]../../Machine_Code\",\n\t    \"[.]../../Machine_Name\",\n\t    \"[.]../../../../../Shift\",\n\t    \"[.]../../../../../../../Hour\",\n\t    \"[.]../../OPC/From/Part_Id\",\n\t    \"[.]../../OPC/From/Operator_Id\",\n\t    \"[.]../../../../../DateTime_OEE\",\n\t    \"[.]../Count/Rejection_Act\",\n\t    \"[.]Idel_Limit\"\n\t]\n\t\n\t#OEE_On, MC_Status, Cycle_partcount, Good_Count, HT_Actual, MT_Actual, Handling_time, Maching_time, Cycle_time_act, CycleTime, CTH, CTL, CTE,\n\t#Enterprise_No, BG_No, Plant_No, Line_No, Machine_No, Shift, Hour, Operator, Part_ID, DateTime_OEE, Rejection\n\t\n\tresult \u003d OEE.P_Count.Rejection_Count(tags_to_read)\n\t\n\tif result:\n\t    rejection_count, ct_actual, ht_final, mt_final, cth, ctl, cte, R_id \u003d result\n\t\n\t    system.tag.writeBlocking([\n\t        \"[.]../Count/R_Count\",\n\t        \"[.]../OEE/CT_Actual\",\n\t        \"[.]../Operating_Time/HT_Time\",\n\t        \"[.]../Operating_Time/MC_Time\",\n\t        \"[.]../Count/CT_H\",\n\t        \"[.]../Count/CT_L\",\n\t        \"[.]../Count/CT_E\",\n\t        \"[.]../Count/Rejection_Act\"\n\t    ], [rejection_count, ct_actual, ht_final, mt_final, cth, ctl, cte, R_id])"
                        }
                      ],
                      "sourceTagPath": "[.]../../OPC/From/Bad_Count",
                      "name": "Rejection_Count",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "PS_Planner",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "expr",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tif currentValue.value \u003d\u003d 1:\n\t\ttags_to_read \u003d [\n\t\t\t\"[.]../../../../../../Business_Code\",\n\t\t\t\"[.]../../../../../../Business_Name\",\n\t\t\t\"[.]../../../../../Plant_Code\",\n\t\t\t\"[.]../../../../../Plant_Name\",\n\t\t\t\"[.]../../../../Cell_Code\",\n\t\t\t\"[.]../../../../Cell_Name\",\n\t\t\t\"[.]../../../Line_Code\",\n\t\t\t\"[.]../../../Line_Name\",\n\t\t\t\"[.]../../Machine_Code\",\n\t\t\t\"[.]../../Machine_Name\",\n\t\t\t\"[.]../../../../../Shift\",\n\t\t\t\"[.]../../../../../Shift_Hour\",\n\t\t\t\"[.]../../../../../DateTime_OEE\",\n\t\t\t\"[.]../Count/OEE_On\",\n\t\t\t\"[.]../Operating_Time/MC_Status_Act\",\n\t\t\t\"[.]../../OPC/From/Operator_Id\",\n\t\t\t\"[.]../../../../../../../Hour\",\n\t\t\t\"[.]../../../../../../../Date_hour\",\n\t\t\t\"[.]../../OPC/From/Part_Id\",\n\t\t\t\"[.]../OEE/OEE_Start\",\n\t\t\t\"[.]../../../../../DateTime_OEE\",\n\t\t\t\"[.]../Operating_Time/Stop_Timer\",\n\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\"[.]../Count/G_Count\",\n\t\t\t\"[.]../Count/R_Count\",\n\t\t\t\"[.]Breakdown_ID\",\n\t\t\t\"[.]../Operating_Time/Idle_Timer\",\n\t\t\t\"[.]../Operating_Time/Shift_Time\",\n\t\t\t\"[.]../OEE/CT\",\n\t\t\t\"[.]../Count/CT_E\",\n\t\t\t\"[.]../Count/CT_H\",\n\t\t\t\"[.]../Count/CT_L\",\n\t\t\t\"[.]../Operating_Time/HT_Time\",\n\t\t\t\"[.]../Operating_Time/MC_Time\"\n\t\t]\n\t\t# Call the function\n\t\tresult_values \u003d OEE.OEE_Triggers.log_oee_data_15Min(tags_to_read)\n\t\t\n\t\t# If the function returned valid data, write to tags\n\t\tif result_values:\n\t\t\treset_tags \u003d [\n\t\t\t\t\"[.]../OEE/OEE_Start\",\n\t\t\t\t\"[.]../Count/G_Count\",\n\t\t\t\t\"[.]../Count/R_Count\",\n\t\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Stop_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Idle_Timer\",\n\t\t\t\t\"[.]../Count/CT_E\",\n\t\t\t\t\"[.]../Count/CT_H\",\n\t\t\t\t\"[.]../Count/CT_L\",\n\t\t\t\t\"[.]../Operating_Time/HT_Time\",\n\t\t\t\t\"[.]../Operating_Time/MC_Time\",\n\t\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Shift_Time\",\n\t\t\t\t\"[.]../../OPC/To/Availability\",\n\t\t\t\t\"[.]../../OPC/To/Quality\",\n\t\t\t\t\"[.]../../OPC/To/Performance\",\n\t\t\t\t\"[.]../../OPC/To/OEE\"           \n\t\t\t]\n\t\t\t\n\t\t\tsystem.tag.writeBlocking(reset_tags, result_values)"
                        }
                      ],
                      "expression": "getMinute(now()) % 15 \u003d 0 \u0026\u0026 getSecond(now()) \u003d 0",
                      "name": "OEE_15Mins",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "expr",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\ttags_to_read \u003d [\n\t\t\"[.]../Count/OEE_On\",                    # OEE_On\n\t\t\"[.]../../Machine_Tracking\",                 # MC_Stat\n\t\t\"[.]OEE_1hour\",               # Triger\n\t\t\"[.]MC_Status_Trigger\",   # Triger1\n\t\t\n\t\t\"[.]../../../../../../Business_Code\",  # BG_Id\n\t\t\"[.]../../../../../../Business_Name\",\n\t\t\"[.]../../../../../Plant_Code\",        # Plant\n\t\t\"[.]../../../../../Plant_Name\",\n\t\t\"[.]../../../../Cell_Code\",\n\t\t\"[.]../../../../Cell_Name\",\n\t\t\"[.]../../../Line_Code\",                # Line\n\t\t\"[.]../../../Line_Name\",\n\t\t\"[.]../../Machine_Code\",             # Machine\n\t\t\"[.]../../Machine_Name\",\n\t\t\n\t\t\"[.]../../OPC/From/Operator_Id\",                   # Operator\n\t\t\"[.]../../../../../Shift\",                                         # Shift\n\t\t\"[.]../../../../../Shift_Hour\",                                    # Shift_Hour\n\t\t\"[.]../../../../../../../Hour\",                                                                # Hour\n\t\t\"[.]../../../../../../../Date_hour\",                                                           # Datetime_Hour\n\t\t\n\t\t\"[.]../../OPC/From/Part_Id\",                    # Part_Id\n\t\t\"[.]../OEE/OEE_Start\",                  # Start_Time\n\t\t\"[.]../../../../../DateTime_OEE\",                                  # end_Time\n\t\t\n\t\t\"[.]../Operating_Time/Stop_Timer\",       # StopTime1\n\t\t\"[.]../Operating_Time/Run_Timer\",        # run_time\n\t\t\"[.]../Operating_Time/Off_Timer\",        # Off_time\n\t\t\n\t\t\"[.]../Count/G_Count\",               # Good_Count\n\t\t\"[.]../Count/R_Count\",                   # Rejection\n\t\t\"[.]Breakdown_ID\",    # Reason\n\t\t\"[.]../Operating_Time/Idle_Timer\",       # downTime1\n\t\t\n\t\t\"[.]../Operating_Time/Shift_Time\",             # Shifttime\n\t\t\"[.]../Operating_Time/DT_Type\",         # DT_type\n\t\t\"[.]../OEE/CT\",                 # idle_Cycle_time\n\t\t\n\t\t\"[.]../Count/CT_E\",                      # CTE\n\t\t\"[.]../Count/CT_H\",                      # CTH\n\t\t\"[.]../Count/CT_L\",                      # CTL\n\t\t\n\t\t\"[.]../Operating_Time/HT_Time\",   # Handling_time_tag\n\t\t\"[.]../Operating_Time/MC_Time\"     # Maching_time_tag\n\t]\n\t\n\tresult \u003d OEE.OEE_Triggers.log_oee_data_1Hou(tags_to_read)\n\t\n\tif result:\n\t\ttag_write_values \u003d result[:-1]         # First 13 values\n\t\tdt_type \u003d result[-1]                   # 14th value is DT_type\n\t\t\n\t\tresult_tags \u003d [\n\t\t\t\"[.]../OEE/OEE_Start\",\n\t\t\t\"[.]../Count/G_Count\",\n\t\t\t\"[.]../Count/R_Count\",\n\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\"[.]../Operating_Time/Stop_Timer\",\n\t\t\t\"[.]../Operating_Time/Idle_Timer\",\n\t\t\t\"[.]../Count/CT_E\",\n\t\t\t\"[.]../Count/CT_H\",\n\t\t\t\"[.]../Count/CT_L\",\n\t\t\t\"[.]../Operating_Time/HT_Time\",\n\t\t\t\"[.]../Operating_Time/MC_Time\",\n\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\"[.]../Operating_Time/Shift_Time\"\n\t\t]\n\t\t\n\t\tsystem.tag.writeBlocking(result_tags, tag_write_values)\n\t\t\n\t\tif dt_type \u003d\u003d 2:\n\t\t\tsystem.tag.writeBlocking(\n\t\t\t\t[\"[.]../Operating_Time/Minor_Loss\"],\n\t\t\t\t[1]\n\t\t\t)"
                        }
                      ],
                      "expression": "getHour24(now())",
                      "name": "OEE_1hour",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tif currentValue.quality.isGood() and currentValue.value !\u003d 0 and previousValue.quality.isGood():\n\t\tsystem.tag.write(\"[.]../Count/Rejection_Act\",currentValue.value)"
                        }
                      ],
                      "sourceTagPath": "[.]../../OPC/From/Rejection_Reason",
                      "name": "Rejection_Id",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "expr",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\ttags_to_read \u003d [\n\t\t\"[.]../../Machine_Tracking\",\n\t\t\"[.]Off_Tag\",\n\t\t\"[.]../Operating_Time/MC_Status_Act\",\n\t\t\"[.]DT_Timer\",\n\t\t\"[.]MC_Status_Trigger\",\n\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\"[.]HT_Timer\"\n\t]\n\ttags \u003d [tag.value for tag in system.tag.readBlocking(tags_to_read)]\n\tif tags[0] !\u003d 1:\n\t\treturn\n\tb \u003d tags[1]\n\ta \u003d int(tags[2])\n\tc \u003d tags[3]\n\te \u003d int(tags[4])\n\toff, run, ht \u003d tags[5], tags[6], tags[7]\n\tupdates \u003d []\n\tif b \u003d\u003d 1:\n\t\tsystem.tag.write(\"[.]../Operating_Time/Off_Timer\" , off + 1)\n\tif a \u003d\u003d 1 and b !\u003d 1:\n\t\tsystem.tag.write(\"[.]../Operating_Time/Run_Timer\", run + 1)\n\tif a \u003d\u003d 2 and b !\u003d 1:\n\t\tsystem.tag.write(\"[.]DT_Timer\", c + 1)\n\tif e \u003d\u003d 2 and b !\u003d 1:\n\t\tsystem.tag.write(\"[.]HT_Timer\", ht + 1)\n\t#if Write_Tag:\n\t\t#system.tag.writeBlocking([item[0] for item in Write_Tag], [item[1] for item in Write_Tag])\n\t\t\n\t\t\n\t"
                        }
                      ],
                      "expression": "getSecond(now())",
                      "name": "Seconds",
                      "executionMode": "FixedRate",
                      "executionRate": 500,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tMC_status \u003d system.tag.read(\"[.]../Operating_Time/MC_Status_Act\").value\n\tOFF_Tag \u003d system.tag.read(\"[.]Off_Tag\").value\n\tT_Stamp \u003d system.tag.read(\"[.]../../../../../DateTime_OEE\").value\n\tif MC_status \u003d\u003d 1 and OFF_Tag \u003d\u003d0:\n\t\tsystem.tag.write(\"[.]../Operating_Time/DT_Stop\",T_Stamp)\n\t\n\ttags_to_read \u003d [\n\t\t\"[.]../../../../../Shift\",\n\t\t\"[.]../Operating_Time/MC_Status_Act\",\n\t\t\"[.]Off_Tag\",\n\t\t\"[.]../../../../../DateTime_OEE\",\n\t\t\"[.]../../../../../../Business_Code\",\n\t\t\"[.]../../../../../../Business_Name\",\n\t\t\"[.]../../../../../Plant_Code\",\n\t\t\"[.]../../../../../Plant_Name\",\n\t\t\"[.]../../../../Cell_Code\",\n\t\t\"[.]../../../../Cell_Name\",\n\t\t\"[.]../../../Line_Code\",\n\t\t\"[.]../../../Line_Name\",\n\t\t\"[.]../../Machine_Code\",\n\t\t\"[.]../../Machine_Name\",\n\t\t\"[.]../../OPC/From/Operator_Id\",\n\t\t\"[.]../../../../../../../Hour\",\n\t\t\"[.]../../OPC/From/Part_Id\",\n\t\t\"[.]../Operating_Time/DT_Start\",\n\t\t\"[.]../Operating_Time/DT_Start_Act\",\n\t\t\"[.]Idel_Limit\",\n\t\t\"[.]../Operating_Time/DT_Stop\",\n\t\t\"[.]../../../../../DateTime_OEE\",\n\t\t\"[.]Breakdown_ID\"\n\t]\n\twrite_value \u003d OEE.Operating_Time.offtime(tags_to_read)\n\tif write_value:\n\t\tsystem.tag.writeBlocking([item[0] for item in write_value], [item[1] for item in write_value])"
                        }
                      ],
                      "name": "Off_Tag",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tI_Limit \u003d system.tag.read(\"[.]Idel_Limit\").value\n\tHT_Act \u003d currentValue.value\n\tif I_Limit\u003cHT_Act:\n\t\tsystem.tag.write(\"[.]../OEE/HT_Actual\",I_Limit)\n\telse:\n\t\tsystem.tag.write(\"[.]../OEE/HT_Actual\",HT_Act)"
                        }
                      ],
                      "sourceTagPath": "[.]../../OPC/From/LU_Time",
                      "name": "HT_Actual",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tif currentValue.quality.isGood() and currentValue.value !\u003d 0 and previousValue.quality.isGood():\n\t\tsystem.tag.write(\"[.]../Operating_Time/DT_Reason\",currentValue.value)"
                        }
                      ],
                      "sourceTagPath": "[.]../../OPC/From/BD_Reason",
                      "name": "Breakdown_ID",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\ttags_to_read \u003d [\n\t    \"[.]../Operating_Time/MC_Status_Act\",\n\t    \"[.]DT_Timer\",\n\t    \"[.]Idel_Limit\",\n\t    \"[.]../Operating_Time/Stop_Timer\",\n\t    \"[.]../Operating_Time/Idle_Timer\",\n\t    \"[.]../Operating_Time/Minor_Loss\",\n\t    \"[.]../../../../../../Business_Code\",\n\t    \"[.]../../../../../../Business_Name\",\n\t    \"[.]../../../../../Plant_Code\",\n\t    \"[.]../../../../../Plant_Name\",\n\t    \"[.]../../../../Cell_Code\",\n\t    \"[.]../../../../Cell_Name\",\n\t    \"[.]../../../Line_Code\",\n\t    \"[.]../../../Line_Name\",\n\t    \"[.]../../Machine_Code\",\n\t    \"[.]../../Machine_Name\",\n\t    \"[.]../../../../../Shift\",\n\t    \"[.]../../../../../../../Hour\"\n\t]\n\t# Read tag values in one go\n\tvalues \u003d [tag.value for tag in system.tag.readBlocking(tags_to_read)]\n\t\n\t# Assign values with meaningful names\n\tmc_status, dt_timer, idle_limit, stop_time, idle_time, minor_loss, bg_id, bg_Name, plant, plant_Name, Cell, Cell_Name, line, Line_Name, machine, Machine_Name, shift, hour \u003d values\n\t\n\t# Ensure values are numeric (type safety)\n\tdt_timer \u003d int(dt_timer)\n\tidle_limit \u003d int(idle_limit)\n\tstop_time \u003d int(stop_time)\n\tidle_time \u003d int(idle_time)\n\tminor_loss \u003d int(minor_loss)\n\t\n\t# Prepare tag writes\n\twrite_tags \u003d []\n\t\n\t# Main logic for DT classification\n\tif mc_status \u003d\u003d 2:\n\t\n\t    if dt_timer \u003c idle_limit:\n\t        stop_time +\u003d 1\n\t        write_tags +\u003d [\n\t            [\"[.]../Operating_Time/Stop_Timer\", stop_time],\n\t            [\"[.]../Operating_Time/DT_Type\", 2]  # 2 \u003d STOP\n\t        ]\n\t\n\t    elif dt_timer \u003e idle_limit:\n\t        idle_time +\u003d 1\n\t        write_tags +\u003d [\n\t            [\"[.]../Operating_Time/Idle_Timer\", idle_time],\n\t            [\"[.]../Operating_Time/DT_Type\", 3]  # 3 \u003d IDLE\n\t        ]\n\t\n\t    elif dt_timer \u003d\u003d idle_limit and dt_timer !\u003d 0:\n\t        # Calculate new stop time capped at 0\n\t        new_stop_time \u003d stop_time - idle_limit if stop_time \u003e\u003d idle_limit else 0\n\t        #2025-07-31 write_tags.append([\"[.]../Operating_Time/Stop_Timer\", new_stop_time])\n\t        system.tag.write(\"[.]../Operating_Time/Stop_Timer\", new_stop_time)\n\t        #2025-07-2025 write_tags.append([\"[.]../Operating_Time/Idle_Timer\", idle_time])\n\t        new_idle_time \u003d idle_time + idle_limit #2025-07-2025 if stop_time \u003e\u003d idle_limit else idle_time\n\t        #2025-07-2025 write_tags.append([\"[.]../Operating_Time/Idle_Timer\", new_idle_time])\n\t        system.tag.write(\"[.]../Operating_Time/Idle_Timer\", new_idle_time)\n\t\n\t        # Fetch latest DB record for this machine\n\t        row \u003d system.db.runPrepQuery(\n\t            \"SELECT TOP 1 ID, Shift, Hour, Stoptime, Downtime FROM OEE_OEEData \"\n\t            \"WHERE Business_ID \u003d ? AND Plant_ID \u003d ? AND Cell_ID \u003d ? AND Line_ID \u003d ? AND Machine_Code \u003d ? ORDER BY id DESC\",\n\t            [bg_id, plant, Cell, line, machine], \u0027OEE\u0027\n\t        )\n\t\n\t        if row:\n\t            record \u003d row[0]\n\t            id \u003d record[\"id\"]\n\t            shift_pre \u003d record[\"Shift\"]\n\t            hour_pre \u003d record[\"Hour\"]\n\t            stop_time_pre \u003d int(record[\"StopTime\"])\n\t            downtime_pre \u003d int(record[\"DownTime\"])\n\t\n\t            # Handle minor loss reversal if hour changed\n\t            if hour_pre !\u003d hour and shift \u003d\u003d shift_pre and downtime_pre \u003d\u003d 0 and minor_loss \u003d\u003d 1:\n\t                updated_stop_time \u003d stop_time_pre + new_stop_time + 1  # +1 for current cycle\n\t                downtime_new \u003d -new_stop_time\n\t\n\t                # Update OEE_data to reflect the corrected minor loss transition\n\t                system.db.runPrepUpdate(\n\t                    \"UPDATE OEE_OEEData SET Downtime \u003d ?, Stoptime \u003d ?,Trigger_Type \u003d ? WHERE ID \u003d ?\",\n\t                    [downtime_new, updated_stop_time, \"DT_Timer\", id],\n\t                    \u0027OEE\u0027\n\t                )\n\t\n\t                # Reset minor loss flag\n\t                write_tags.append([\"[.]../Operating_Time/Minor_Loss\", 0])\n\t\n\t# Write back tag values if any changes occurred\n\tif write_tags:\n\t    system.tag.writeBlocking(\n\t        [tag_path for tag_path, _ in write_tags],\n\t        [value for _, value in write_tags]\n\t    )"
                        }
                      ],
                      "name": "DT_Timer",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "db",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\ttags_to_read \u003d [\n\t    \"[.]../Count/OEE_On\",\n\t    \"[.]../../../../../DateTime_OEE\",\n\t    \"[.]../../../../../Shift_Id\",\n\t    \"[.]../../../../../../Business_Code\",\n\t    \"[.]../../../../../../Business_Name\",\n\t    \"[.]../../../../../Plant_Code\",\n\t    \"[.]../../../../../Plant_Name\",\n\t    \"[.]../../../../Cell_Code\",\n\t    \"[.]../../../../Cell_Name\",\n\t    \"[.]../../../Line_Code\",\n\t    \"[.]../../../Line_Name\",\n\t    \"[.]../../Machine_Code\",\n\t    \"[.]../../Machine_Name\",\n\t    \"[.]../../../../../Shift\",\n\t    \"[.]../../../../../Shift_Id\"\n\t]\n\tresult \u003d OEE.PS.PS(tags_to_read)\n\tDate,date_oee,Shift,T_stamp,Tstamp_act, SE, Shift_Time \u003d result\n\tif SE\u003d\u003d0:\n\t\tsystem.tag.writeBlocking([\"[.]../Operating_Time/Shift_Time\"], [Shift_Time])\n\tif Date \u003d\u003d date_oee and Shift \u003e 0:\n\t    system.tag.writeAll([\n\t        \"[.]../Count/OEE_On\",\n\t        \"[.]../Operating_Time/Shift_Time\"\n\t    ], [0, 0])\n\telse:\n\t    system.tag.writeAll([\n\t        \"[.]../OEE/OEE_Start\",\n\t        \"[.]../Operating_Time/DT_Start\",\n\t        \"[.]../Operating_Time/DT_Start_Act\",\n\t        \"[.]../Count/OEE_On\"\n\t    ], [T_stamp, T_stamp, Tstamp_act, 1])\n\t"
                        }
                      ],
                      "datasource": "Master",
                      "query": "Select isnull((Select distinct Shift_ID from Shift_Master where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Start_time \u003c \u0027{[.]../../../../../../../Time 2}\u0027 and End_time \u003e \u0027{[.]../../../../../../../Time 2}\u0027),\u00273\u0027)",
                      "name": "PS",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\ttags_to_read \u003d [\n\t    \"[.]../Count/OEE_On\",\n\t    \"[.]MC_Status_Trigger\",\n\t    \"[.]../Count/Part_Per_Cycle\",\n\t    \"[.]../Count/G_Count\",\n\t    \"[.]../../OPC/From/MT_Actual\",\n\t    \"[.]../OEE/HT_Actual\",\n\t    \"[.]../Operating_Time/MC_Time\",\n\t    \"[.]../Operating_Time/HT_Time\",\n\t    \"[.]../OEE/CT_Actual\",\n\t    \"[.]../OEE/CT\",\n\t    \"[.]../Count/CT_H\",\n\t    \"[.]../Count/CT_L\",\n\t    \"[.]../Count/CT_E\",\n\t    \"[.]../../../../../../Business_Code\",\n\t    \"[.]../../../../../../Business_Name\",\n\t    \"[.]../../../../../Plant_Code\",\n\t    \"[.]../../../../../Plant_Name\",\n\t    \"[.]../../../../Cell_Code\",\n\t    \"[.]../../../../Cell_Name\",\n\t    \"[.]../../../Line_Code\",\n\t    \"[.]../../../Line_Name\",\n\t    \"[.]../../Machine_Code\",\n\t    \"[.]../../Machine_Name\",\n\t    \"[.]../../../../../Shift\",\n\t    \"[.]../../../../../../../Hour\",\n\t    \"[.]../../OPC/From/Part_Id\",\n\t    \"[.]../../OPC/From/Operator_Id\",\n\t    \"[.]Shot_Count\",\n\t    \"[.]../OEE/Cum_CT\",\n\t    \"[.]../../../../../DateTime_OEE\",\n\t    \"[.]../../../../../../Rejection\",\n\t    \"[.]Idel_Limit\"\n\t]\n\t\n\t#OEE_On, MC_Status, Cycle_partcount, Good_Count, HT_Actual, MT_Actual, Handling_time, Maching_time, Cycle_time_act, CycleTime, CTH, CTL, CTE,\n\t#Enterprise_No, BG_No, Plant_No, Line_No, Machine_No, Shift, Hour, Operator, Part_ID, DateTime_OEE, Rejection\n\t\n\tresult \u003d OEE.P_Count.Shot_Count(tags_to_read)\n\t\n\tif result:\n\t    good_count, ct_actual, ht_final, mt_final, cth, ctl, cte \u003d result\n\t\n\t    system.tag.writeBlocking([\n\t        \"[.]../Count/G_Count\",\n\t        \"[.]../OEE/CT_Actual\",\n\t        \"[.]../Operating_Time/HT_Time\",\n\t        \"[.]../Operating_Time/MC_Time\",\n\t        \"[.]../Count/CT_H\",\n\t        \"[.]../Count/CT_L\",\n\t        \"[.]../Count/CT_E\",\n\t    ], [good_count, ct_actual, ht_final, mt_final, cth, ctl, cte])"
                        }
                      ],
                      "sourceTagPath": "[.]../../OPC/From/Good_Count",
                      "name": "Shot_Count",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tHT_Actual \u003d system.tag.read(\"[.]HT_Timer\").value\n\tHT_Standard \u003d int(system.tag.read(\"[.]../OEE/HT_Std\").value)\n\tif HT_Actual \u003e\u003d HT_Standard:\n\t\tsystem.tag.write(\"[.]../Operating_Time/MC_Status_Act\",2)\n\t\n"
                        }
                      ],
                      "name": "HT_Timer",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "memory",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tsystem.tag.write(\"[.]../Count/Idel_Time\",currentValue.value)"
                        }
                      ],
                      "query": "Select Idle_Time from Idle_Time where Eg_ID \u003d 1 and Bg_ID \u003d 4 and Plant_Id \u003d 2 and Line_Id \u003d 1 and Machine_Id \u003d 1\r\n\r\n",
                      "name": "Idel_Limit",
                      "value": 300,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\t# Tag paths\n\tTrigger \u003d system.tag.read(\"[.]../Operating_Time/MC_Status_Act\").value\n\tTrigger1 \u003d system.tag.read(\"[.]Off_Tag\").value\n\tOEE_On \u003d system.tag.read(\"[.]../Count/OEE_On\").value\n\tMC_Track \u003d system.tag.read(\"[.]../../Machine_Tracking\").value\n\tT_stamp \u003d system.tag.read(\"[.]../../../../../DateTime_OEE\").value\n\t\n\t# Write OEE_On \u003d 1 if the condition is met\n\tif (Trigger \u003d\u003d 2 or Trigger1 \u003d\u003d 1) and OEE_On \u003d\u003d 1 and MC_Track \u003d\u003d 1:\n\t    system.tag.write(\"[.]../Operating_Time/DT_Stop\", T_stamp)\n\t\n\t# Tags to read\n\ttags_to_read \u003d [\n\t    \"[.]../Count/OEE_On\",\n\t    \"[.]../../Machine_Tracking\",\n\t    \"[.]../Operating_Time/MC_Status_Act\",\n\t    \"[.]Off_Tag\",\n\t    \"[.]../../../../../../Business_Code\",\n\t    \"[.]../../../../../../Business_Name\",\n\t    \"[.]../../../../../Plant_Code\",\n\t    \"[.]../../../../../Plant_Name\",\n\t    \"[.]../../../../Cell_Code\",\n\t    \"[.]../../../../Cell_Name\",\n\t    \"[.]../../../Line_Code\",\n\t    \"[.]../../../Line_Name\",\n\t    \"[.]../../Machine_Code\",\n\t    \"[.]../../Machine_Name\",\n\t    \"[.]../../OPC/From/Operator_Id\",\n\t    \"[.]../../../../../Shift_dup\",\n\t    \"[.]../../../../../Shift_Hour_Dup\",\n\t    \"[.]../../../../../Shift_Id\",\n\t    \"[.]../../../../../../../Hour\",\n\t    \"[.]../../../../../../../Date_hour\",\n\t    \"[.]../../OPC/From/Part_Id\",\n\t    \"[.]../OEE/OEE_Start\",\n\t    \"[.]../../../../../DateTime_OEE\",\n\t    \"[.]../Operating_Time/Stop_Timer\",\n\t    \"[.]../Operating_Time/Run_Timer\",\n\t    \"[.]../Operating_Time/Off_Timer\",\n\t    \"[.]../Count/G_Count\",\n\t    \"[.]../Count/R_Count\",\n\t    \"[.]../Operating_Time/DT_Reason\",\n\t    \"[.]../Operating_Time/Idle_Timer\",\n\t    \"[.]../Operating_Time/Shift_Time\",\n\t    \"[.]../Operating_Time/DT_Type\",\n\t    \"[.]../OEE/CT\",\n\t    \"[.]../Count/CT_E\",\n\t    \"[.]../Count/CT_H\",\n\t    \"[.]../Count/CT_L\",\n\t    \"[.]HT_Timer\",\n\t    \"[.]../Operating_Time/MC_Time\",\n\t    \"[.]../Operating_Time/DT_Start\",\n\t    \"[.]../Operating_Time/DT_Start_Act\",\n\t    \"[.]../Operating_Time/DT_Stop\",\n\t    \"[.]Idel_Limit\",\n\t    \"[.]Breakdown_ID\",\n\t    \"[.]../../../../../DateTime_OEE\"  # currentTimestamp\n\t]\n\t\n\tReturn_values \u003d OEE.OEE_Triggers.log_oee_data_Shift(tags_to_read)\n\t\n\tsystem.tag.write(\"[.]../../OPC/To/Shift_Reset\",currentValue.value)\n\tif Return_values:\n\t    (\n\t        Trigger, Trigger1, OEE_On, MC_Stat,\n\t        actualDowntime, SP_DATE_TIME, Date_OEE,\n\t        Shift_Plan, end_Time, oeeTimestamp, currentTimestamp\n\t    ) \u003d Return_values\n\t    if (Trigger \u003d\u003d 2 or Trigger1 \u003d\u003d 1) and OEE_On \u003d\u003d 1 and MC_Stat \u003d\u003d 1:\n\t        tags_to_write \u003d [\n\t            \"[.]../OEE/OEE_Start\",\n\t            \"[.]../Count/G_Count\",\n\t            \"[.]../Count/R_Count\",\n\t            \"[.]../Operating_Time/Run_Timer\",\n\t            \"[.]../Operating_Time/Stop_Timer\",\n\t            \"[.]../Operating_Time/Idle_Timer\",\n\t            \"[.]../Count/CT_E\",\n\t            \"[.]../Count/CT_H\",\n\t            \"[.]../Count/CT_L\",\n\t            \"[.]HT_Timer\",\n\t            \"[.]../Operating_Time/MC_Time\",\n\t            \"[.]../Operating_Time/Off_Timer\",\n\t            \"[.]../Operating_Time/Down_Time\",\n\t            \"[.]../Operating_Time/DT_Start\",\n\t            \"[.]../Operating_Time/DT_Start_Act\"\n\t        ]\n\t        values_to_write \u003d [end_Time, 0, 0, 0, 0, 0,0, 0, 0,0, 0, 0,0, oeeTimestamp, currentTimestamp]\n\t        system.tag.writeBlocking(tags_to_write, values_to_write)\n\t    if SP_DATE_TIME \u003d\u003d Date_OEE and Shift_Plan \u003e 0:\n\t        system.tag.write(\"[.]../Count/OEE_On\", 0)\n\t        system.tag.write(\"[.]../Operating_Time/Shift_Time\", 0)\n\t    else:\n\t        system.tag.write(\"[.]../OEE/OEE_Start\", oeeTimestamp)\n\t        system.tag.write(\"[.]../Operating_Time/DT_Start\", oeeTimestamp)\n\t        system.tag.write(\"[.]../Operating_Time/DT_Start_Act\", currentTimestamp)\n\t        system.tag.write(\"[.]../Count/OEE_On\", 1)"
                        }
                      ],
                      "sourceTagPath": "[.]../../../../../Shift_Trigger",
                      "name": "OEE_Shift",
                      "tagType": "AtomicTag"
                    }
                  ]
                }
              ]
            },
            {
              "valueSource": "opc",
              "opcItemPath": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dGOC_Communication",
              "name": "Machine_Communication",
              "tagType": "AtomicTag",
              "opcServer": "eWON - Tags server_SGD_P1"
            }
          ]
        },
        {
          "name": "RML-SLD",
          "tagType": "Folder",
          "tags": [
            {
              "name": "P4",
              "tagType": "Folder",
              "tags": [
                {
                  "name": "Machine_New",
                  "typeId": "",
                  "parameters": {
                    "Machine_ID": {
                      "dataType": "String"
                    },
                    "Machine_Path": {
                      "dataType": "String",
                      "value": ""
                    },
                    "DB": {
                      "dataType": "String"
                    },
                    "Gateway": {
                      "dataType": "String"
                    },
                    "Machine_Code": {
                      "dataType": "Integer"
                    }
                  },
                  "tagType": "UdtType",
                  "tags": [
                    {
                      "name": "OPC",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "From",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003d{Machine_Path}_Line_NG_Count"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "Bad_Count",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dReject_reason{Machine_ID}"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "memory",
                              "name": "Rejection_Reason",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003d{Machine_Path}_Line_Stop_Time"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "LU_Time",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003d{Machine_Path}_Line_RUN_Status"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "Machine_Status",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003d{Machine_Path}_Line_OK_Count"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "Good_Count",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003d{Machine_Path}_Line_Part_No"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "Part_Id",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003d{Machine_Path}_Cycle_Time"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "MT_Actual",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003d{Machine_Path}_Connection_Status"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "GOC_Com",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dOperator_ID{Machine_ID}"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "memory",
                              "name": "Operator_Id",
                              "value": 9999,
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003d{Machine_Path}_Line_BreakDown_Reason"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "BD_Reason",
                              "tagType": "AtomicTag"
                            }
                          ]
                        },
                        {
                          "name": "To",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/RESET_{Machine_ID}"
                              },
                              "valueSource": "memory",
                              "name": "Shift_Reset",
                              "tagType": "AtomicTag",
                              "opcServer": "Ignition OPC UA Server"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/QUAL_{Machine_ID}"
                              },
                              "valueSource": "memory",
                              "name": "Quality",
                              "tagType": "AtomicTag",
                              "opcServer": "Ignition OPC UA Server"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/AVA_{Machine_ID}"
                              },
                              "valueSource": "memory",
                              "name": "Availability",
                              "tagType": "AtomicTag",
                              "opcServer": "Ignition OPC UA Server"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/OEE_{Machine_ID}"
                              },
                              "valueSource": "memory",
                              "name": "OEE",
                              "tagType": "AtomicTag",
                              "opcServer": "Ignition OPC UA Server"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/PER_{Machine_ID}"
                              },
                              "valueSource": "memory",
                              "name": "Performance",
                              "tagType": "AtomicTag",
                              "opcServer": "Ignition OPC UA Server"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/IWT_{Machine_ID}"
                              },
                              "valueSource": "memory",
                              "name": "IW_Time",
                              "tagType": "AtomicTag",
                              "opcServer": "Ignition OPC UA Server"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "valueSource": "db",
                      "datasource": "OEE_NEW",
                      "query": "SELECT Data_Tracking\r\nFROM [OEE_NEW].[dbo].[M_OVERALL_MASTER] \r\nWHERE Business_ID \u003d {[.]../../../../Business_Code}\r\n  AND Plant_ID\u003d {[.]../../../Plant_Code}\r\n  AND Cell_ID \u003d {[.]../../Cell_Code}\r\n  AND Line_ID \u003d {[.]../Line_Code}\r\n  AND Machine_Code \u003d {[.]Machine_Code}",
                      "name": "Machine_Tracking",
                      "executionMode": "FixedRate",
                      "executionRate": 15000,
                      "value": 1,
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "Calculation",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "Triggers",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "valueSource": "memory",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif OEE_On\u003d\u003d1:\n\t\tDB \u003d \"OEE_NEW\"\n\t\ttags_to_read \u003d [\n\t\t    \"[.]../Operating_Time/MC_Status_Act\",\n\t\t    \"[.]DT_Timer\",\n\t\t    \"[.]Idel_Limit\",\n\t\t    \"[.]../Operating_Time/Stop_Timer\",\n\t\t    \"[.]../Operating_Time/Idle_Timer\",\n\t\t    \"[.]../Operating_Time/Minor_Loss\",\n\t\t    \"[.]../../../../../../Business_Code\",\n\t\t    \"[.]../../../../../Plant_Code\",\n\t\t    \"[.]../../../../Cell_Code\",\n\t\t    \"[.]../../../Line_Code\",\n\t\t    \"[.]../../Machine_Code\",\n\t\t    \"[.]../../../../../Shift_Id\",\n\t\t    \"[.]../../../../../../../Hour\"\n\t\t  \n\t\t]\n\t\t# Read tag values in one go\n\t\tvalues \u003d [tag.value for tag in system.tag.readBlocking(tags_to_read)]\n\t\t\n\t\t# Assign values with meaningful names\n\t\tmc_status, dt_timer, idle_limit, stop_time, idle_time, minor_loss, bg_id, plant, Cell, line, machine, shift, hour \u003d values\n\t\t\n\t\t# Ensure values are numeric (type safety)\n\t\tdt_timer \u003d int(dt_timer)\n\t\tidle_limit \u003d int(idle_limit)\n\t\tstop_time \u003d int(stop_time)\n\t\tidle_time \u003d int(idle_time)\n\t\tminor_loss \u003d int(minor_loss)\n\t\t# Prepare tag writes\n\t\twrite_tags \u003d []\n\t\t\n\t\t# Main logic for DT classification\n\t\tif mc_status \u003d\u003d 2 :\n\t\t\n\t\t    if dt_timer \u003c idle_limit:\n\t\t        stop_time +\u003d 1\n\t\t        write_tags +\u003d [\n\t\t            [\"[.]../Operating_Time/Stop_Timer\", stop_time],\n\t\t            [\"[.]../Operating_Time/DT_Type\", 2]  # 2 \u003d STOP\n\t\t        ]\n\t\t\n\t\t    elif dt_timer \u003e idle_limit:\n\t\t        idle_time +\u003d 1\n\t\t        write_tags +\u003d [\n\t\t            [\"[.]../Operating_Time/Idle_Timer\", idle_time],\n\t\t            [\"[.]../Operating_Time/DT_Type\", 3]  # 3 \u003d IDLE\n\t\t        ]\n\t\t\n\t\t    elif dt_timer \u003d\u003d idle_limit and dt_timer !\u003d 0:\n\t\t        # Calculate new stop time capped at 0\n\t\t        new_stop_time \u003d stop_time - idle_limit if stop_time \u003e\u003d idle_limit else 0\n\t\t        #2025-07-31 write_tags.append([\"[.]../Operating_Time/Stop_Timer\", new_stop_time])\n\t\t        system.tag.write(\"[.]../Operating_Time/Stop_Timer\", new_stop_time)\n\t\t        #2025-07-2025 write_tags.append([\"[.]../Operating_Time/Idle_Timer\", idle_time])\n\t\t        new_idle_time \u003d idle_time + idle_limit #2025-07-2025 if stop_time \u003e\u003d idle_limit else idle_time\n\t\t        #2025-07-2025 write_tags.append([\"[.]../Operating_Time/Idle_Timer\", new_idle_time])\n\t\t        system.tag.write(\"[.]../Operating_Time/Idle_Timer\", new_idle_time)\n\t\t\n\t\t        # Fetch latest DB record for this machine\n\t\t        row \u003d system.db.runPrepQuery(\n\t\t            \"SELECT TOP 1 id, shift_id, hour, stop_time, down_time FROM [OEE_NEW].[dbo].[OEE_DATA] \"\n\t\t            \"WHERE business_id \u003d ? and plant_id \u003d ? and cell_id \u003d ? and line_id \u003d ? and machine_code \u003d ? order by id desc\",\n\t\t            [bg_id, plant, Cell, line, machine], DB\n\t\t        )\n\t\t\n\t\t        if row:\n\t\t            record \u003d row[0]\n\t\t            id \u003d record[\"id\"]\n\t\t            shift_pre \u003d record[\"shift_id\"]\n\t\t            hour_pre \u003d record[\"hour\"]\n\t\t            stop_time_pre \u003d int(record[\"stop_time\"])\n\t\t            downtime_pre \u003d int(record[\"down_time\"])\n\t\t\n\t\t            # Handle minor loss reversal if hour changed\n\t\t            if hour_pre !\u003d hour and shift \u003d\u003d shift_pre and downtime_pre \u003d\u003d 0 and minor_loss \u003d\u003d 1:\n\t\t                updated_stop_time \u003d stop_time_pre + new_stop_time + 1  # +1 for current cycle\n\t\t                downtime_new \u003d -new_stop_time\n\t\t\n\t\t                # Update OEE_data to reflect the corrected minor loss transition\n\t\t                system.db.runPrepUpdate(\n\t\t                    \"UPDATE [OEE_NEW].[dbo].[OEE_DATA] SET down_time \u003d ?, stop_time \u003d ?, trigger_type \u003d ? WHERE ID \u003d ?\",\n\t\t                    [downtime_new, updated_stop_time, \"DT_Timer\", id],\n\t\t                    DB\n\t\t                )\n\t\t\n\t\t                # Reset minor loss flag\n\t\t                write_tags.append([\"[.]../Operating_Time/Minor_Loss\", 0])\n\t\t\n\t\t# Write back tag values if any changes occurred\n\t\tif write_tags :\n\t\t    system.tag.writeBlocking(\n\t\t        [tag_path for tag_path, _ in write_tags],\n\t\t        [value for _, value in write_tags]\n\t\t    )"
                                }
                              ],
                              "name": "DT_Timer",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tM_Tracking\u003dsystem.tag.read(\"[.]../../Machine_Tracking\").value\n\tif OEE_On\u003d\u003d1 and M_Tracking\u003d\u003d1:\n\t\ttags_to_read \u003d [\n\t\t    \"[.]../Count/OEE_On\",\n\t\t    \"[.]MC_Status_Trigger\",\n\t\t    \"[.]../Count/Part_Per_Cycle\",\n\t\t    \"[.]../Count/G_Count\",\n\t\t    \"[.]../../OPC/From/MT_Actual\",\n\t\t    \"[.]../OEE/HT_Actual\",\n\t\t    \"[.]../Operating_Time/MC_Time\",\n\t\t    \"[.]../Operating_Time/HT_Time\",\n\t\t    \"[.]../OEE/CT_Actual\",\n\t\t    \"[.]../OEE/CT\",\n\t\t    \"[.]../Count/CT_H\",\n\t\t    \"[.]../Count/CT_L\",\n\t\t    \"[.]../Count/CT_E\",\n\t\t    \"[.]../../../../../../Business_Code\",\n\t\t    \"[.]../../../../../Plant_Code\",\n\t\t    \"[.]../../../../Cell_Code\",\n\t\t    \"[.]../../../Line_Code\",\n\t\t    \"[.]../../Machine_Code\",\n\t\t    \"[.]../../../../../Shift_Id\",\n\t\t    \"[.]../../../../../../../Hour\",\n\t\t    \"[.]../../OPC/From/Part_Id\",\n\t\t    \"[.]../../OPC/From/Operator_Id\",\n\t\t    \"[.]Shot_Count\",\n\t\t    \"[.]../OEE/Cum_CT\",\n\t\t    \"[.]../../../../../DateTime_OEE\",\n\t\t    \"[.]../../../../../../Rejection\",\n\t\t    \"[.]Idel_Limit\"\n\t\t   \n\t\t]\n\t\t\n\t\t#OEE_On, MC_Status, Cycle_partcount, Good_Count, HT_Actual, MT_Actual, Handling_time, Maching_time, Cycle_time_act, CycleTime, CTH, CTL, CTE,\n\t\t#Enterprise_No, BG_No, Plant_No, Line_No, Machine_No, Shift, Hour, Operator, Part_ID, DateTime_OEE, Rejection\n\t\t\n\t\t#result \u003d OEE.P_Count.Shot_Count(tags_to_read)\n\t\tresult \u003d OEE_NEW.P_Count.Shot_Count(tags_to_read)\n\t\n\t\tif result:\n\t\t    good_count, ct_actual, ht_final, mt_final, cth, ctl, cte \u003d result\n\t\t\n\t\t    system.tag.writeBlocking([\n\t\t        \"[.]../Count/G_Count\",\n\t\t        \"[.]../OEE/CT_Actual\",\n\t\t        \"[.]../Operating_Time/HT_Time\",\n\t\t        \"[.]../Operating_Time/MC_Time\",\n\t\t        \"[.]../Count/CT_H\",\n\t\t        \"[.]../Count/CT_L\",\n\t\t        \"[.]../Count/CT_E\",\n\t\t    ], [good_count, ct_actual, ht_final, mt_final, cth, ctl, cte])"
                                }
                              ],
                              "sourceTagPath": "[.]../../OPC/From/Good_Count",
                              "name": "Shot_Count",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif currentValue.quality.isGood() and currentValue.value !\u003d 0 and previousValue.quality.isGood() and OEE_On\u003d\u003d1:\n\t\tsystem.tag.write(\"[.]../Count/Rejection_Act\",currentValue.value)"
                                }
                              ],
                              "sourceTagPath": "[.]../../OPC/From/Rejection_Reason",
                              "name": "Rejection_Id",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\t# Tag paths\n\tTrigger \u003d system.tag.read(\"[.]../Operating_Time/MC_Status_Act\").value\n\tTrigger1 \u003d system.tag.read(\"[.]Off_Tag\").value\n\tOEE_On \u003d system.tag.read(\"[.]../Count/OEE_On\").value\n\tMC_Track \u003d system.tag.read(\"[.]../../Machine_Tracking\").value\n\tT_stamp \u003d system.tag.read(\"[.]../../../../../DateTime_OEE\").value\n\t\n\t# Write OEE_On \u003d 1 if the condition is met\n\tif (Trigger \u003d\u003d 2 or Trigger1 \u003d\u003d 1) and OEE_On \u003d\u003d 1 and MC_Track \u003d\u003d 1:\n\t    system.tag.write(\"[.]../Operating_Time/DT_Stop\", T_stamp)\n\t\n\t# Tags to read\n\ttags_to_read \u003d [\n\t    \"[.]../Count/OEE_On\",\n\t    \"[.]../../Machine_Tracking\",\n\t    \"[.]../Operating_Time/MC_Status_Act\",\n\t    \"[.]Off_Tag\",\n\t    \"[.]../../../../../../Business_Code\",\n\t    \"[.]../../../../../Plant_Code\",\n\t    \"[.]../../../../Cell_Code\",\n\t    \"[.]../../../Line_Code\",\n\t    \"[.]../../Machine_Code\",\n\t    \"[.]../../OPC/From/Operator_Id\",\n\t    \"[.]../../../../../Shift_dup\",\n\t    \"[.]../../../../../Shift_Hour_Dup\",\n\t    \"[.]../../../../../Shift_Id_Dup\",\n\t    \"[.]../../../../../../../Hour\",\n\t    \"[.]../../../../../../../Date_hour\",\n\t    \"[.]../../OPC/From/Part_Id\",\n\t    \"[.]../OEE/OEE_Start\",\n\t    \"[.]../../../../../DateTime_OEE\",\n\t    \"[.]../Operating_Time/Stop_Timer\",\n\t    \"[.]../Operating_Time/Run_Timer\",\n\t    \"[.]../Operating_Time/Off_Timer\",\n\t    \"[.]../Count/G_Count\",\n\t    \"[.]../Count/R_Count\",\n\t    \"[.]../Operating_Time/DT_Reason\",\n\t    \"[.]../Operating_Time/Idle_Timer\",\n\t    \"[.]../Operating_Time/Shift_Time\",\n\t    \"[.]../Operating_Time/DT_Type\",\n\t    \"[.]../OEE/CT\",\n\t    \"[.]../Count/CT_E\",\n\t    \"[.]../Count/CT_H\",\n\t    \"[.]../Count/CT_L\",\n\t    \"[.]HT_Timer\",\n\t    \"[.]../Operating_Time/MC_Time\",\n\t    \"[.]../Operating_Time/DT_Start\",\n\t    \"[.]../Operating_Time/DT_Start_Act\",\n\t    \"[.]../Operating_Time/DT_Stop\",\n\t    \"[.]Idel_Limit\",\n\t    \"[.]Breakdown_ID\",\n\t    \"[.]../../../../../DateTime_OEE\",  # currentTimestamp\n\t    \"[.]../../../../../Shift_Id\"\n\t]\n\t\n\t#Return_values \u003d OEE.OEE_Triggers.log_oee_data_Shift(tags_to_read)\n\tReturn_values \u003d OEE_NEW.OEE_Triggers.log_oee_data_Shift(tags_to_read)\n\t\n\tif Return_values:\n\t    (\n\t        Trigger, Trigger1, OEE_On, MC_Stat,\n\t        actualDowntime, SP_DATE_TIME, Date_OEE,\n\t        Shift_Plan, end_Time, oeeTimestamp, currentTimestamp\n\t    ) \u003d Return_values\n\t    if (Trigger \u003d\u003d 2 or Trigger1 \u003d\u003d 1) and OEE_On \u003d\u003d 1 and MC_Stat \u003d\u003d 1:\n\t        tags_to_write \u003d [\n\t            \"[.]../OEE/OEE_Start\",\n\t            \"[.]../Count/G_Count\",\n\t            \"[.]../Count/R_Count\",\n\t            \"[.]../Operating_Time/Run_Timer\",\n\t            \"[.]../Operating_Time/Stop_Timer\",\n\t            \"[.]../Operating_Time/Idle_Timer\",\n\t            \"[.]../Count/CT_E\",\n\t            \"[.]../Count/CT_H\",\n\t            \"[.]../Count/CT_L\",\n\t            \"[.]HT_Timer\",\n\t            \"[.]../Operating_Time/MC_Time\",\n\t            \"[.]../Operating_Time/Off_Timer\",\n\t            \"[.]../Operating_Time/Down_Time\",\n\t            \"[.]../Operating_Time/DT_Start\",\n\t            \"[.]../Operating_Time/DT_Start_Act\"\n\t        ]\n\t        values_to_write \u003d [end_Time, 0, 0, 0, 0, 0,0, 0, 0,0, 0, 0,0, oeeTimestamp, currentTimestamp]\n\t        system.tag.writeBlocking(tags_to_write, values_to_write)\n\t    if SP_DATE_TIME \u003d\u003d Date_OEE and Shift_Plan \u003e 0:\n\t        system.tag.write(\"[.]../Count/OEE_On\", 0)\n\t        system.tag.write(\"[.]../Operating_Time/Shift_Time\", 0)\n\t    else:\n\t        system.tag.write(\"[.]../OEE/OEE_Start\", oeeTimestamp)\n\t        system.tag.write(\"[.]../Operating_Time/DT_Start\", oeeTimestamp)\n\t        system.tag.write(\"[.]../Operating_Time/DT_Start_Act\", currentTimestamp)\n\t        system.tag.write(\"[.]../Count/OEE_On\", 1)\n\t    system.tag.write(\"[.]../../OPC/To/Shift_Reset\",currentValue.value)"
                                }
                              ],
                              "sourceTagPath": "[.]../../../../../Shift_Trigger",
                              "name": "OEE_Shift",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "expr",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tM_Tracking\u003d system.tag.read(\"[.]../../Machine_Tracking\").value\n\tif OEE_On\u003d\u003d1 and M_Tracking\u003d\u003d1:\n\t\ttags_to_read \u003d [\n\t\t\t\"[.]../Count/OEE_On\",                    # OEE_On\n\t\t\t\"[.]../../Machine_Tracking\",                 # MC_Stat\n\t\t\t\"[.]OEE_1hour\",               # Triger\n\t\t\t\"[.]MC_Status_Trigger\",   # Triger1\n\t\t\t\n\t\t\t\"[.]../../../../../../Business_Code\",  # BG_Id\n\t\t\t\"[.]../../../../../Plant_Code\",        # Plant\n\t\t\t\"[.]../../../../Cell_Code\",\n\t\t\t\"[.]../../../Line_Code\",                # Line\n\t\t\t\"[.]../../Machine_Code\",             # Machine\n\t\t\t\n\t\t\t\"[.]../../OPC/From/Operator_Id\",                   # Operator\n\t\t\t\"[.]../../../../../Shift_Id\",                                         # Shift\n\t\t\t\"[.]../../../../../Shift_Hour\",                                    # Shift_Hour\n\t\t\t\"[.]../../../../../../../Hour\",                                                                # Hour\n\t\t\t\"[.]../../../../../../../Date_hour\",                                                           # Datetime_Hour\n\t\t\t\n\t\t\t\"[.]../../OPC/From/Part_Id\",                    # Part_Id\n\t\t\t\"[.]../OEE/OEE_Start\",                  # Start_Time\n\t\t\t\"[.]../../../../../DateTime_OEE\",                                  # end_Time\n\t\t\t\n\t\t\t\"[.]../Operating_Time/Stop_Timer\",       # StopTime1\n\t\t\t\"[.]../Operating_Time/Run_Timer\",        # run_time\n\t\t\t\"[.]../Operating_Time/Off_Timer\",        # Off_time\n\t\t\t\n\t\t\t\"[.]../Count/G_Count\",               # Good_Count\n\t\t\t\"[.]../Count/R_Count\",                   # Rejection\n\t\t\t\"[.]Breakdown_ID\",    # Reason\n\t\t\t\"[.]../Operating_Time/Idle_Timer\",       # downTime1\n\t\t\t\n\t\t\t\"[.]../Operating_Time/Shift_Time\",             # Shifttime\n\t\t\t\"[.]../Operating_Time/DT_Type\",         # DT_type\n\t\t\t\"[.]../OEE/CT\",                 # idle_Cycle_time\n\t\t\t\n\t\t\t\"[.]../Count/CT_E\",                      # CTE\n\t\t\t\"[.]../Count/CT_H\",                      # CTH\n\t\t\t\"[.]../Count/CT_L\",                      # CTL\n\t\t\t\n\t\t\t\"[.]../Operating_Time/HT_Time\",   # Handling_time_tag\n\t\t\t\"[.]../Operating_Time/MC_Time\"     # Maching_time_tag\n\t\t]\n\t\t\n\t\t#result \u003d OEE.OEE_Triggers.log_oee_data_1Hou(tags_to_read)\n\t\tresult \u003d OEE_NEW.OEE_Triggers.log_oee_data_1Hou(tags_to_read)\t\n\t\tif result:\n\t\t\ttag_write_values \u003d result[:-1]         # First 13 values\n\t\t\tdt_type \u003d result[-1]                   # 14th value is DT_type\n\t\t\t\n\t\t\tresult_tags \u003d [\n\t\t\t\t\"[.]../OEE/OEE_Start\",\n\t\t\t\t\"[.]../Count/G_Count\",\n\t\t\t\t\"[.]../Count/R_Count\",\n\t\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Stop_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Idle_Timer\",\n\t\t\t\t\"[.]../Count/CT_E\",\n\t\t\t\t\"[.]../Count/CT_H\",\n\t\t\t\t\"[.]../Count/CT_L\",\n\t\t\t\t\"[.]../Operating_Time/HT_Time\",\n\t\t\t\t\"[.]../Operating_Time/MC_Time\",\n\t\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Shift_Time\"\n\t\t\t]\n\t\t\t\n\t\t\tsystem.tag.writeBlocking(result_tags, tag_write_values)\n\t\t\t\n\t\t\tif dt_type \u003d\u003d 2:\n\t\t\t\tsystem.tag.writeBlocking(\n\t\t\t\t\t[\"[.]../Operating_Time/Minor_Loss\"],\n\t\t\t\t\t[1]\n\t\t\t\t)"
                                }
                              ],
                              "expression": "getHour24(now())",
                              "name": "OEE_1hour",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "db",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_ProdOff \u003d system.tag.read(\"[.]PS_Planner\").value\t\t\t\n\t\n\tif OEE_ProdOff !\u003d 0:\n\t\t# If OEE_ProdOff is not 0, reset certain tags\n\t\tsystem.tag.write(\"[.]../Count/OEE_On\", 0)\n\t\t#system.tag.write(\"[default]Tags/OEE/Enterprise/BG4/Plant1/Line1/Machine1/Operating_time/TST\", 0)\n\telif OEE_ProdOff \u003d\u003d 0:\n\t\t# If OEE_ProdOff is 0, update certain tags\n\t\tsystem.tag.write(\"[.]../Count/OEE_On\", 1)\n\t\t\t"
                                }
                              ],
                              "datasource": "OEE_NEW",
                              "query": "select isnull ((\r\nSELECT \r\nCASE \r\nWHEN {[.]../../../../../Shift_Id} \u003d 1 THEN shift_1 \r\nWHEN {[.]../../../../../Shift_Id} \u003d 2 THEN shift_2 \r\nWHEN {[.]../../../../../Shift_Id} \u003d 3 THEN shift_3 \r\nEND AS Shift_Status FROM [OEE_NEW].[dbo].[PRODUCTION_OFF_SCHEDULE] \r\nWHERE business_id \u003d {[.]../../../../../../Business_Code} \r\nAND plant_id \u003d {[.]../../../../../Plant_Code} \r\nAND cell_id \u003d {[.]../../../../Cell_Code} \r\nAND line_id \u003d {[.]../../../Line_Code} \r\nAND machine_code \u003d {[.]../../Machine_Code} \r\nAND CAST(date_scheduled AS DATE) \u003d \u0027{[.]../../../../../DateTime_OEE}\u0027\r\n), 0)",
                              "name": "PS_Planner",
                              "executionMode": "FixedRate",
                              "executionRate": 15000,
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tI_Limit \u003d system.tag.read(\"[.]Idel_Limit\").value\n\tHT_Act \u003d currentValue.value\n\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif (I_Limit\u003cHT_Act) and OEE_On\u003d\u003d1:\n\t\tsystem.tag.write(\"[.]../OEE/HT_Actual\",I_Limit)\n\telse:\n\t\tsystem.tag.write(\"[.]../OEE/HT_Actual\",HT_Act)"
                                }
                              ],
                              "sourceTagPath": "[.]../../OPC/From/LU_Time",
                              "name": "HT_Actual",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tM_Tracking\u003dsystem.tag.read(\"[.]../../Machine_Tracking\").value\n\tif OEE_On\u003d\u003d1 and M_Tracking\u003d\u003d1:\n\t\ttags_to_read \u003d [\n\t\t    \"[.]../Count/OEE_On\",\n\t\t    \"[.]MC_Status_Trigger\",\n\t\t    \"[.]../Count/R_Count\",\n\t\t    \"[.]../Count/Part_Per_Cycle\",\n\t\t    \"[.]../../OPC/From/MT_Actual\",\n\t\t    \"[.]../OEE/HT_Actual\",\n\t\t    \"[.]../Operating_Time/MC_Time\",\n\t\t    \"[.]../Operating_Time/HT_Time\",\n\t\t    \"[.]../OEE/Cum_CT\",\n\t\t    \"[.]../Count/CT_H\",\n\t\t    \"[.]../Count/CT_L\",\n\t\t    \"[.]../Count/CT_E\",\n\t\t    \"[.]../../../../../../Business_Code\",\n\t\t    \"[.]../../../../../Plant_Code\",\n\t\t    \"[.]../../../../Cell_Code\",\n\t\t    \"[.]../../../Line_Code\",\n\t\t    \"[.]../../Machine_Code\",\n\t\t    \"[.]../../../../../Shift_Id\",\n\t\t    \"[.]../../../../../../../Hour\",\n\t\t    \"[.]../../OPC/From/Part_Id\",\n\t\t    \"[.]../../OPC/From/Operator_Id\",\n\t\t    \"[.]../../../../../DateTime_OEE\",\n\t\t    \"[.]../Count/Rejection_Act\",\n\t\t    \"[.]Idel_Limit\"\n\t\t    \n\t\t]\n\t\t\n\t\t#OEE_On, MC_Status, Cycle_partcount, Good_Count, HT_Actual, MT_Actual, Handling_time, Maching_time, Cycle_time_act, CycleTime, CTH, CTL, CTE,\n\t\t#Enterprise_No, BG_No, Plant_No, Line_No, Machine_No, Shift, Hour, Operator, Part_ID, DateTime_OEE, Rejection\n\t\t\n\t\t#result \u003d OEE.P_Count.Rejection_Count(tags_to_read)\n\t\tresult \u003d OEE_NEW.P_Count.Rejection_Count(tags_to_read)\n\t\t\n\t\tif result:\n\t\t    rejection_count, ct_actual, ht_final, mt_final, cth, ctl, cte, R_id \u003d result\n\t\t\n\t\t    system.tag.writeBlocking([\n\t\t        \"[.]../Count/R_Count\",\n\t\t        \"[.]../OEE/CT_Actual\",\n\t\t        \"[.]../Operating_Time/HT_Time\",\n\t\t        \"[.]../Operating_Time/MC_Time\",\n\t\t        \"[.]../Count/CT_H\",\n\t\t        \"[.]../Count/CT_L\",\n\t\t        \"[.]../Count/CT_E\",\n\t\t        \"[.]../Count/Rejection_Act\"\n\t\t    ], [rejection_count, ct_actual, ht_final, mt_final, cth, ctl, cte, R_id])"
                                }
                              ],
                              "sourceTagPath": "[.]../../OPC/From/Bad_Count",
                              "name": "Rejection_Count",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tMC_status \u003d system.tag.read(\"[.]../Operating_Time/MC_Status_Act\").value\n\tOFF_Tag \u003d system.tag.read(\"[.]Off_Tag\").value\n\tT_Stamp \u003d system.tag.read(\"[.]../../../../../DateTime_OEE\").value\n\tOEE_On\u003dOEE_on\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif MC_status \u003d\u003d 1 and OFF_Tag \u003d\u003d0 and OEE_On\u003d\u003d1:\n\t\tsystem.tag.write(\"[.]../Operating_Time/DT_Stop\",T_Stamp)\n\t\n\ttags_to_read \u003d [\n\t\t\"[.]../../../../../Shift_Id\",\n\t\t\"[.]../Operating_Time/MC_Status_Act\",\n\t\t\"[.]Off_Tag\",\n\t\t\"[.]../../../../../DateTime_OEE\",\n\t\t\"[.]../../../../../../Business_Code\",\n\t\t\"[.]../../../../../Plant_Code\",\n\t\t\"[.]../../../../Cell_Code\",\n\t\t\"[.]../../../Line_Code\",\n\t\t\"[.]../../Machine_Code\",\n\t\t\"[.]../../OPC/From/Operator_Id\",\n\t\t\"[.]../../../../../../../Hour\",\n\t\t\"[.]../../../../../Shift_Hour\",\n\t\t\"[.]../../OPC/From/Part_Id\",\n\t\t\"[.]../Operating_Time/DT_Start\",\n\t\t\"[.]../Operating_Time/DT_Start_Act\",\n\t\t\"[.]Idel_Limit\",\n\t\t\"[.]../Operating_Time/DT_Stop\",\n\t\t\"[.]../../../../../../../Day\",\n\t\t\"[.]Breakdown_ID\"\n\t]\n\t#write_value \u003d OEE.Operating_Time.offtime(tags_to_read)\n\twrite_value \u003d OEE_NEW.Operating_Time.offtime(tags_to_read)\n\tif write_value and OEE_on\u003d\u003d1:\n\t\tsystem.tag.writeBlocking([item[0] for item in write_value], [item[1] for item in write_value])"
                                }
                              ],
                              "name": "Off_Tag",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "db",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dOEE_on\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif OEE_On\u003d\u003d1:\n\t\ttags_to_read \u003d [\n\t\t    \"[.]../Count/OEE_On\",\n\t\t    \"[.]../../../../../DateTime_OEE\",\n\t\t    \"[.]../../../../../Shift_Id\",\n\t\t    \"[.]../../../../../../Business_Code\",\n\t\t    \"[.]../../../../../Plant_Code\",\n\t\t    \"[.]../../../../Cell_Code\",\n\t\t    \"[.]../../../Line_Code\",\n\t\t    \"[.]../../Machine_Code\",\n\t\t    \"[.]../../../../../Shift\"\n\t\t]\n\t\t#result \u003d OEE.PS.PS(tags_to_read)\n\t\tresult \u003d OEE_NEW.PS.PS(tags_to_read)\n\t\tDate,date_oee,Shift,T_stamp,Tstamp_act, SE, Shift_Time \u003d result\n\t\tif SE\u003d\u003d0:\n\t\t\tsystem.tag.writeBlocking([\"[.]../Operating_Time/Shift_Time\"], [Shift_Time])\n\t\tif Date \u003d\u003d date_oee and Shift \u003e 0:\n\t\t    system.tag.writeAll([\n\t\t        \"[.]../Count/OEE_On\",\n\t\t        \"[.]../Operating_Time/Shift_Time\"\n\t\t    ], [0, 0])\n\t\telse:\n\t\t    system.tag.writeAll([\n\t\t        \"[.]../OEE/OEE_Start\",\n\t\t        \"[.]../Operating_Time/DT_Start\",\n\t\t        \"[.]../Operating_Time/DT_Start_Act\",\n\t\t        \"[.]../Count/OEE_On\"\n\t\t    ], [T_stamp, T_stamp, Tstamp_act, 1])\n\t\t"
                                }
                              ],
                              "datasource": "CM_MASTER",
                              "query": "Select isnull((Select distinct shift_id from [MASTER_DATA].[dbo].[M_SHIFT] where business_id \u003d {[.]../../../../../../Business_Code} and plant_id \u003d {[.]../../../../../Plant_Code} and shift_start_time \u003c \u0027{[.]../../../../../../../Time 2}\u0027 and shift_end_time \u003e \u0027{[.]../../../../../../../Time 2}\u0027),\u00273\u0027)",
                              "name": "PS",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "expr",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dOEE_on\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tM_Tracking\u003d system.tag.read(\"[.]../../Machine_Tracking\").value\n\tif currentValue.value \u003d\u003d 1 and OEE_On\u003d\u003d1 and M_Tracking\u003d\u003d1:\n\t\ttags_to_read \u003d [\n\t\t\t\"[.]../../../../../../Business_Code\",\n\t\t\t\"[.]../../../../../Plant_Code\",\n\t\t\t\"[.]../../../../Cell_Code\",\n\t\t\t\"[.]../../../Line_Code\",\n\t\t\t\"[.]../../Machine_Code\",\n\t\t\t\"[.]../../../../../Shift_Id\",\n\t\t\t\"[.]../../../../../Shift_Hour\",\n\t\t\t\"[.]../../../../../DateTime_OEE\",\n\t\t\t\"[.]../Count/OEE_On\",\n\t\t\t\"[.]../Operating_Time/MC_Status_Act\",\n\t\t\t\"[.]../../OPC/From/Operator_Id\",\n\t\t\t\"[.]../../../../../../../Hour\",\n\t\t\t\"[.]../../../../../../../Date_hour\",\n\t\t\t\"[.]../../OPC/From/Part_Id\",\n\t\t\t\"[.]../OEE/OEE_Start\",\n\t\t\t\"[.]../../../../../DateTime_OEE\",\n\t\t\t\"[.]../Operating_Time/Stop_Timer\",\n\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\"[.]../Count/G_Count\",\n\t\t\t\"[.]../Count/R_Count\",\n\t\t\t\"[.]Breakdown_ID\",\n\t\t\t\"[.]../Operating_Time/Idle_Timer\",\n\t\t\t\"[.]../Operating_Time/Shift_Time\",\n\t\t\t\"[.]../OEE/CT\",\n\t\t\t\"[.]../Count/CT_E\",\n\t\t\t\"[.]../Count/CT_H\",\n\t\t\t\"[.]../Count/CT_L\",\n\t\t\t\"[.]../Operating_Time/HT_Time\",\n\t\t\t\"[.]../Operating_Time/MC_Time\"\n\t\t]\n\t\t# Call the function\n\t\t#result_values \u003d OEE.OEE_Triggers.log_oee_data_15Min(tags_to_read)\n\t\tresult_values \u003d OEE_NEW.OEE_Triggers.log_oee_data_15Min(tags_to_read)\n\t\t\n\t\t# If the function returned valid data, write to tags\n\t\tif result_values:\n\t\t\treset_tags \u003d [\n\t\t\t\t\"[.]../OEE/OEE_Start\",\n\t\t\t\t\"[.]../Count/G_Count\",\n\t\t\t\t\"[.]../Count/R_Count\",\n\t\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Stop_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Idle_Timer\",\n\t\t\t\t\"[.]../Count/CT_E\",\n\t\t\t\t\"[.]../Count/CT_H\",\n\t\t\t\t\"[.]../Count/CT_L\",\n\t\t\t\t\"[.]../Operating_Time/HT_Time\",\n\t\t\t\t\"[.]../Operating_Time/MC_Time\",\n\t\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Shift_Time\",\n\t\t\t\t\"[.]../../OPC/To/Availability\",\n\t\t\t\t\"[.]../../OPC/To/Quality\",\n\t\t\t\t\"[.]../../OPC/To/Performance\",\n\t\t\t\t\"[.]../../OPC/To/OEE\"           \n\t\t\t]\n\t\t\t\n\t\t\tsystem.tag.writeBlocking(reset_tags, result_values)"
                                }
                              ],
                              "expression": "getMinute(now()) % 15 \u003d 0 \u0026\u0026 getSecond(now()) \u003d 0",
                              "name": "OEE_15Mins",
                              "tagType": "AtomicTag"
                            },
                            {
                              "datasource": {
                                "bindType": "parameter",
                                "binding": "{DB}"
                              },
                              "valueSource": "memory",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tsystem.tag.write(\"[.]../Count/Idel_Time\",currentValue.value)"
                                }
                              ],
                              "query": "Select Idle_Time from Idle_Time where Eg_ID \u003d 1 and Bg_ID \u003d 4 and Plant_Id \u003d 2 and Line_Id \u003d 1 and Machine_Id \u003d 1\r\n\r\n",
                              "name": "Idel_Limit",
                              "value": 300,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif currentValue.quality.isGood() and currentValue.value !\u003d 0 and previousValue.quality.isGood() and OEE_On\u003d\u003d1:\n\t\tsystem.tag.write(\"[.]../Operating_Time/DT_Reason\",currentValue.value)"
                                }
                              ],
                              "sourceTagPath": "[.]../../OPC/From/BD_Reason",
                              "name": "Breakdown_ID",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "expr",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif OEE_On\u003d\u003d1:\n\t\ttags_to_read \u003d [\n\t\t\t\"[.]../../Machine_Tracking\",\n\t\t\t\"[.]Off_Tag\",\n\t\t\t\"[.]../Operating_Time/MC_Status_Act\",\n\t\t\t\"[.]DT_Timer\",\n\t\t\t\"[.]MC_Status_Trigger\",\n\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\"[.]HT_Timer\"\n\t\t\t\n\t\t]\n\t\ttags \u003d [tag.value for tag in system.tag.readBlocking(tags_to_read)]\n\t\t\n\t\tif tags[0] !\u003d 1:\n\t\t\treturn\n\t\tb \u003d tags[1]\n\t\ta \u003d int(tags[2])\n\t\tc \u003d tags[3]\n\t\te \u003d int(tags[4])\n\t\toff, run, ht \u003d tags[5], tags[6], tags[7]\n\t\tupdates \u003d []\n\t\tif b \u003d\u003d 1:\n\t\t\tsystem.tag.write(\"[.]../Operating_Time/Off_Timer\" , off + 1)\n\t\telif a \u003d\u003d 1 and b !\u003d 1:\n\t\t\tsystem.tag.write(\"[.]../Operating_Time/Run_Timer\", run + 1)\n\t\telif a \u003d\u003d 2 and b !\u003d 1:\n\t\t\tsystem.tag.write(\"[.]DT_Timer\", c + 1)\n\t\telif e \u003d\u003d 2 and b !\u003d 1:\n\t\t\tsystem.tag.write(\"[.]HT_Timer\", ht + 1)\n\t\t#if Write_Tag:\n\t\t\t#system.tag.writeBlocking([item[0] for item in Write_Tag], [item[1] for item in Write_Tag])\n\t\t\t\n\t\t\t\n\t\t"
                                }
                              ],
                              "expression": "getSecond(now())",
                              "name": "Seconds",
                              "executionMode": "FixedRate",
                              "executionRate": 500,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "qualityChanged",
                                  "script": "\tMS_Qual \u003d currentValue.quality\n\tif currentValue.quality.isGood():\n\t\tsystem.tag.write(\"[.]Off_Tag\",0)\n\telse:\n\t\tsystem.tag.write(\"[.]Off_Tag\",1)"
                                },
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tMC_Status \u003d currentValue.value\n\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\t#system.tag.write(\"[default]Tags/OEE/Enterprise/BG4/Plant2/Line1/Machine1/Operating_time/Mc_status\",a)\n\tsystem.tag.write(\"[.]../Operating_Time/MC_Status_Act\",MC_Status)\n\tsystem.tag.write(\"[.]HT_Timer\",0)\n\tif MC_Status \u003d\u003d 1 and OEE_On\u003d\u003d1:\n\t\tsystem.tag.write(\"[.]../Operating_Time/MC_Status_Act\",1)\n\t\tsystem.tag.write(\"[.]HT_Timer\",0)\n\t\t#system.tag.write(\"[default]Tags/OEE/Enterprise/BG4/Plant2/Line1/Machine1/Operating_time/Mc_status_Act 1\",1)\n\t\t\t\n\t"
                                }
                              ],
                              "sourceTagPath": "[.]../../OPC/From/Machine_Status",
                              "name": "MC_Status_Trigger",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tHT_Actual \u003d system.tag.read(\"[.]HT_Timer\").value\n\tHT_Standard \u003d int(system.tag.read(\"[.]../OEE/HT_Std\").value)\n\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\t#if (HT_Actual \u003e\u003d HT_Standard) and OEE_On\u003d\u003d1:\n\t\t#system.tag.write(\"[.]../Operating_Time/MC_Status_Act\",2)\n\t\n"
                                }
                              ],
                              "name": "HT_Timer",
                              "value": 0,
                              "tagType": "AtomicTag"
                            }
                          ]
                        },
                        {
                          "name": "Count",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "valueSource": "memory",
                              "name": "G_Count",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "OEE_On",
                              "value": 1,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Rejection_Act",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "R_Count",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "CT_L",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "datasource": {
                                "bindType": "parameter",
                                "binding": "{DB}"
                              },
                              "valueSource": "db",
                              "query": "Select isnull((Select part_per_cycle from [OEE_NEW].[dbo].[M_PRODUCT] where business_id \u003d {[.]../../../../../../Business_Code} and plant_id \u003d {[.]../../../../../Plant_Code} and cell_id \u003d {[.]../../../../Cell_Code} and line_id \u003d {[.]../../../Line_Code} and machine_code \u003d {[.]../../Machine_Code} and product_id \u003d {[.]../../OPC/From/Part_Id}),0)",
                              "name": "Part_Per_Cycle",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "CT_H",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "CT_E",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Idel_Time",
                              "value": 0,
                              "tagType": "AtomicTag"
                            }
                          ]
                        },
                        {
                          "name": "OEE",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "datasource": {
                                "bindType": "parameter",
                                "binding": "{DB}"
                              },
                              "valueSource": "db",
                              "query": "Select isnull((Select cumulative_cycle_time from [OEE_NEW].[dbo].[M_PRODUCT] where business_id \u003d {[.]../../../../../../Business_Code} and plant_id \u003d {[.]../../../../../Plant_Code} and cell_id \u003d {[.]../../../../Cell_Code} and line_id \u003d {[.]../../../Line_Code} and machine_code \u003d {[.]../../Machine_Code} and product_id \u003d {[.]../../OPC/From/Part_Id}),0)",
                              "name": "Cum_CT",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "dataType": "DateTime",
                              "name": "OEE_Stop",
                              "formatString": "yyyy-MM-dd h:mm:ss aa",
                              "value": 1735670220000,
                              "tagType": "AtomicTag"
                            },
                            {
                              "datasource": {
                                "bindType": "parameter",
                                "binding": "{DB}"
                              },
                              "valueSource": "db",
                              "query": "Select isnull((Select cycle_time from [OEE_NEW].[dbo].[M_PRODUCT] where business_id \u003d {[.]../../../../../../Business_Code} and plant_id \u003d {[.]../../../../../Plant_Code} and cell_id \u003d {[.]../../../../Cell_Code} and line_id \u003d {[.]../../../Line_Code} and machine_code \u003d {[.]../../Machine_Code} and product_id \u003d {[.]../../OPC/From/Part_Id}),0)",
                              "name": "CT",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "sourceTagPath": "0",
                              "name": "PS_Planner",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "datasource": {
                                "bindType": "parameter",
                                "binding": "{DB}"
                              },
                              "valueSource": "db",
                              "query": "Select isnull((Select handling_time from [OEE_NEW].[dbo].[M_PRODUCT] where business_id \u003d {[.]../../../../../../Business_Code} and plant_id \u003d {[.]../../../../../Plant_Code} and cell_id \u003d {[.]../../../../Cell_Code} and line_id \u003d {[.]../../../Line_Code} and machine_code \u003d {[.]../../Machine_Code} and product_id \u003d {[.]../../OPC/From/Part_Id}),0)",
                              "name": "HT_Std",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "HT_Actual",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "datasource": {
                                "bindType": "parameter",
                                "binding": "{DB}"
                              },
                              "valueSource": "db",
                              "dataType": "String",
                              "query": "Select isnull((Select product_name from [OEE_NEW].[dbo].[M_PRODUCT] where business_id \u003d {[.]../../../../../../Business_Code} and plant_id \u003d {[.]../../../../../Plant_Code} and cell_id \u003d {[.]../../../../Cell_Code} and line_id \u003d {[.]../../../Line_Code} and machine_code \u003d {[.]../../Machine_Code} and product_id \u003d {[.]../../OPC/From/Part_Id}),0)",
                              "name": "Part_Model",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "CT_Actual",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "dataType": "DateTime",
                              "name": "OEE_Start",
                              "formatString": "yyyy-MM-dd h:mm:ss aa",
                              "value": 1735670220000,
                              "tagType": "AtomicTag"
                            }
                          ]
                        },
                        {
                          "name": "Operating_Time",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "valueSource": "memory",
                              "name": "Idle_Timer",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "dataType": "DateTime",
                              "name": "DT_Start_Act",
                              "formatString": "yyyy-MM-dd h:mm:ss aa",
                              "value": 1735670220000,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_ON \u003d system.tag.read(\"[.]../Count/OEE_On\").value\n\tMACHINE_Tracking \u003d system.tag.read(\"[.]../../Machine_Tracking\").value\n\tMachine_Status \u003d system.tag.read(\"[.]MC_Status_Act\").value\n\tT_Stamp \u003d system.tag.read(\"[.]../../../../DateTime_OEE\").value\n\tif OEE_ON \u003d\u003d 1 and MACHINE_Tracking \u003d\u003d 1 and Machine_Status \u003d\u003d 1:\n\t\tsystem.tag.write(\"[.]DT_Stop\",T_Stamp)\n\ttags_to_read \u003d [\n        \"[.]../Count/OEE_On\",\n        \"[.]../../Machine_Tracking\",\n        \"[.]MC_Status_Act\",\n        \"[.]../Triggers/Off_Tag\",\n        \"[.]../../../../../DateTime_OEE\",\n        \"[.]DT_Start\",\n        \"[.]DT_Start_Act\",\n        \"[.]../../../../../../Business_Code\",\n        \"[.]../../../../../Plant_Code\",\n        \"[.]../../../../Cell_Code\",\n        \"[.]../../../Line_Code\",\n        \"[.]../../Machine_Code\",\n        \"[.]../../OPC/From/Operator_Id\",\n        \"[.]../../../../../Shift_Id\",\n        \"[.]../../../../../Shift_Hour\",\n        \"[.]../../../../../../../Hour\",\n        \"[.]../../../../../../../Date_hour\",\n        \"[.]Shift_Time\",\n        \"[.]../OEE/OEE_Start\",\n        \"[.]Idle_Timer\",\n        \"[.]Stop_Timer\",\n        \"[.]Run_Timer\",\n        \"[.]Off_Timer\",\n        \"[.]../Count/G_Count\",\n        \"[.]../Count/R_Count\",\n        \"[.]../../OPC/From/Part_Id\",\n        \"[.]DT_Stop\",\n        \"[.]../Triggers/Idel_Limit\",\n        \"[.]DT_Reason\",\n        \"[.]../OEE/CT\",\n        \"[.]../Count/CT_H\",\n        \"[.]../Count/CT_E\",\n        \"[.]../Count/CT_L\",\n        \"[.]HT_Time\",\n        \"[.]MC_Time\",\n        \"[.]../../../../../DateTime_OEE\"\n    ]\n    \n\t#OEE.MC_Status_Act.MC_Status_Act(tags_to_read)\n\tOEE_NEW.MC_Status_Act.MC_Status_Act(tags_to_read)\n    "
                                }
                              ],
                              "name": "MC_Status_Act",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Run_Timer",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Minor_Loss",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "dataType": "Int4",
                              "name": "Shift_Time",
                              "formatString": "#,##0.##",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "dataType": "DateTime",
                              "name": "DT_Start",
                              "formatString": "yyyy-MM-dd h:mm:ss aa",
                              "value": 1735670220000,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Reason_UD",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "dataType": "DateTime",
                              "name": "DT_Stop",
                              "formatString": "yyyy-MM-dd h:mm:ss aa",
                              "value": 1735670220000,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "DT_Type",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "MC_Time",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "HT_Time",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "DT_Reason",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Stop_Timer",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Down_Time",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Off_Timer",
                              "value": 0,
                              "tagType": "AtomicTag"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": {
                        "bindType": "parameter",
                        "binding": "{Machine_Code}"
                      },
                      "valueSource": "memory",
                      "name": "Machine_Code",
                      "tagType": "AtomicTag"
                    },
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "db",
                      "dataType": "String",
                      "query": "SELECT DISTINCT Machine_Name from M_OVERALL_MASTER where Machine_Code \u003d {[.]Machine_Code}",
                      "name": "Machine_Name",
                      "value": "0",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003d{Machine_Path}_Connection_Status"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Machine_Communication",
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "Machine_old",
                  "typeId": "",
                  "parameters": {
                    "Machine_ID": {
                      "dataType": "String"
                    },
                    "Machine_Path": {
                      "dataType": "String",
                      "value": ""
                    },
                    "DB": {
                      "dataType": "String"
                    },
                    "Gateway": {
                      "dataType": "String"
                    },
                    "Machine_Code": {
                      "dataType": "Integer"
                    }
                  },
                  "tagType": "UdtType",
                  "tags": [
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "db",
                      "dataType": "String",
                      "query": "SELECT DISTINCT Machine_Name from M_OVERALL_MASTER where Machine_Code \u003d {[.]Machine_Code}",
                      "name": "Machine_Name",
                      "value": "0",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003d{Machine_Path}_Connection_Status"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Machine_Communication",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "OPC",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "To",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/AVA_{Machine_ID}"
                              },
                              "valueSource": "memory",
                              "name": "Availability",
                              "tagType": "AtomicTag",
                              "opcServer": "Ignition OPC UA Server"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/OEE_{Machine_ID}"
                              },
                              "valueSource": "memory",
                              "name": "OEE",
                              "tagType": "AtomicTag",
                              "opcServer": "Ignition OPC UA Server"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/PER_{Machine_ID}"
                              },
                              "valueSource": "memory",
                              "name": "Performance",
                              "tagType": "AtomicTag",
                              "opcServer": "Ignition OPC UA Server"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/IWT_{Machine_ID}"
                              },
                              "valueSource": "memory",
                              "name": "IW_Time",
                              "tagType": "AtomicTag",
                              "opcServer": "Ignition OPC UA Server"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/RESET_{Machine_ID}"
                              },
                              "valueSource": "memory",
                              "name": "Shift_Reset",
                              "tagType": "AtomicTag",
                              "opcServer": "Ignition OPC UA Server"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/QUAL_{Machine_ID}"
                              },
                              "valueSource": "memory",
                              "name": "Quality",
                              "tagType": "AtomicTag",
                              "opcServer": "Ignition OPC UA Server"
                            }
                          ]
                        },
                        {
                          "name": "From",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003d{Machine_Path}_Line_RUN_Status"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "Machine_Status",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dReject_reason{Machine_ID}"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "memory",
                              "name": "Rejection_Reason",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003d{Machine_Path}_Line_BreakDown_Reason"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "BD_Reason",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003d{Machine_Path}_Connection_Status"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "GOC_Com",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003d{Machine_Path}_Line_Part_No"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "Part_Id",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003d{Machine_Path}_Line_OK_Count"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "Good_Count",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003d{Machine_Path}_Line_Stop_Time"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "LU_Time",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dOperator_ID{Machine_ID}"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "memory",
                              "name": "Operator_Id",
                              "value": 9999,
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003d{Machine_Path}_Cycle_Time"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "MT_Actual",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003d{Machine_Path}_Line_NG_Count"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "Bad_Count",
                              "tagType": "AtomicTag"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "value": {
                        "bindType": "parameter",
                        "binding": "{Machine_Code}"
                      },
                      "valueSource": "memory",
                      "name": "Machine_Code",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "Calculation",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "Count",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "valueSource": "memory",
                              "name": "OEE_On",
                              "value": 1,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "R_Count",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "CT_E",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "CT_L",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "G_Count",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Rejection_Act",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "CT_H",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Idel_Time",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "datasource": {
                                "bindType": "parameter",
                                "binding": "{DB}"
                              },
                              "valueSource": "db",
                              "query": "Select isnull((Select PartPerCount from OEE_ProductMaster where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Cell_ID \u003d {[.]../../../../Cell_Code} and Line_ID \u003d {[.]../../../Line_Code} and Machine_Code \u003d {[.]../../Machine_Code} and Product_ID \u003d {[.]../../OPC/From/Part_Id}),0)",
                              "name": "Part_Per_Cycle",
                              "tagType": "AtomicTag"
                            }
                          ]
                        },
                        {
                          "name": "Operating_Time",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "valueSource": "memory",
                              "dataType": "Int4",
                              "name": "Shift_Time",
                              "formatString": "#,##0.##",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "DT_Reason",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "dataType": "DateTime",
                              "name": "DT_Start_Act",
                              "formatString": "yyyy-MM-dd h:mm:ss aa",
                              "value": 1735670220000,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Reason_UD",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "dataType": "DateTime",
                              "name": "DT_Stop",
                              "formatString": "yyyy-MM-dd h:mm:ss aa",
                              "value": 1735670220000,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "DT_Type",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "MC_Time",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_ON \u003d system.tag.read(\"[.]../Count/OEE_On\").value\n\tMACHINE_Tracking \u003d system.tag.read(\"[.]../../Machine_Tracking\").value\n\tMachine_Status \u003d system.tag.read(\"[.]MC_Status_Act\").value\n\tT_Stamp \u003d system.tag.read(\"[.]../../../../DateTime_OEE\").value\n\tif OEE_ON \u003d\u003d 1 and MACHINE_Tracking \u003d\u003d 1 and Machine_Status \u003d\u003d 1:\n\t\tsystem.tag.write(\"[.]DT_Stop\",T_Stamp)\n\ttags_to_read \u003d [\n        \"[.]../Count/OEE_On\",\n        \"[.]../../Machine_Tracking\",\n        \"[.]MC_Status_Act\",\n        \"[.]../Triggers/Off_Tag\",\n        \"[.]../../../../../DateTime_OEE\",\n        \"[.]DT_Start\",\n        \"[.]DT_Start_Act\",\n        \"[.]../../../../../../Business_Code\",\n        \"[.]../../../../../../Business_Name\",\n        \"[.]../../../../../Plant_Code\",\n        \"[.]../../../../../Plant_Name\",\n        \"[.]../../../../Cell_Code\",\n        \"[.]../../../../Cell_Name\",\n        \"[.]../../../Line_Code\",\n        \"[.]../../../Line_Name\",\n        \"[.]../../Machine_Code\",\n        \"[.]../../Machine_Name\",\n        \"[.]../../OPC/From/Operator_Id\",\n        \"[.]../../../../../Shift\",\n        \"[.]../../../../../Shift_Hour\",\n        \"[.]../../../../../../../Hour\",\n        \"[.]../../../../../../../Date_hour\",\n        \"[.]Shift_Time\",\n        \"[.]../OEE/OEE_Start\",\n        \"[.]Idle_Timer\",\n        \"[.]Stop_Timer\",\n        \"[.]Run_Timer\",\n        \"[.]Off_Timer\",\n        \"[.]../Count/G_Count\",\n        \"[.]../Count/R_Count\",\n        \"[.]../../OPC/From/Part_Id\",\n        \"[.]DT_Stop\",\n        \"[.]../Triggers/Idel_Limit\",\n        \"[.]DT_Reason\",\n        \"[.]../OEE/CT\",\n        \"[.]../Count/CT_H\",\n        \"[.]../Count/CT_E\",\n        \"[.]../Count/CT_L\",\n        \"[.]HT_Time\",\n        \"[.]MC_Time\",\n        \"[.]../../../../../DateTime_OEE\"\n    ]\n    \n\tOEE.MC_Status_Act.MC_Status_Act(tags_to_read)\n    "
                                }
                              ],
                              "name": "MC_Status_Act",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Run_Timer",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "dataType": "DateTime",
                              "name": "DT_Start",
                              "formatString": "yyyy-MM-dd h:mm:ss aa",
                              "value": 1735670220000,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Down_Time",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Off_Timer",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Idle_Timer",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "HT_Time",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Minor_Loss",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Stop_Timer",
                              "value": 0,
                              "tagType": "AtomicTag"
                            }
                          ]
                        },
                        {
                          "name": "Triggers",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tM_Tracking\u003dsystem.tag.read(\"[.]../../Machine_Tracking\").value\n\tif OEE_On\u003d\u003d1 and M_Tracking\u003d\u003d1:\n\t\ttags_to_read \u003d [\n\t\t    \"[.]../Count/OEE_On\",\n\t\t    \"[.]MC_Status_Trigger\",\n\t\t    \"[.]../Count/R_Count\",\n\t\t    \"[.]../Count/Part_Per_Cycle\",\n\t\t    \"[.]../../OPC/From/MT_Actual\",\n\t\t    \"[.]../OEE/HT_Actual\",\n\t\t    \"[.]../Operating_Time/MC_Time\",\n\t\t    \"[.]../Operating_Time/HT_Time\",\n\t\t    \"[.]../OEE/Cum_CT\",\n\t\t    \"[.]../Count/CT_H\",\n\t\t    \"[.]../Count/CT_L\",\n\t\t    \"[.]../Count/CT_E\",\n\t\t    \"[.]../../../../../../Business_Code\",\n\t\t    \"[.]../../../../../../Business_Name\",\n\t\t    \"[.]../../../../../Plant_Code\",\n\t\t    \"[.]../../../../../Plant_Name\",\n\t\t    \"[.]../../../../Cell_Code\",\n\t\t    \"[.]../../../../Cell_Name\",\n\t\t    \"[.]../../../Line_Code\",\n\t\t    \"[.]../../../Line_Name\",\n\t\t    \"[.]../../Machine_Code\",\n\t\t    \"[.]../../Machine_Name\",\n\t\t    \"[.]../../../../../Shift\",\n\t\t    \"[.]../../../../../../../Hour\",\n\t\t    \"[.]../../OPC/From/Part_Id\",\n\t\t    \"[.]../../OPC/From/Operator_Id\",\n\t\t    \"[.]../../../../../DateTime_OEE\",\n\t\t    \"[.]../Count/Rejection_Act\",\n\t\t    \"[.]Idel_Limit\"\n\t\t\n\t\t]\n\t\t\n\t\t#OEE_On, MC_Status, Cycle_partcount, Good_Count, HT_Actual, MT_Actual, Handling_time, Maching_time, Cycle_time_act, CycleTime, CTH, CTL, CTE,\n\t\t#Enterprise_No, BG_No, Plant_No, Line_No, Machine_No, Shift, Hour, Operator, Part_ID, DateTime_OEE, Rejection\n\t\t\n\t\tresult \u003d OEE.P_Count.Rejection_Count(tags_to_read)\n\t\tif result:\n\t\t    rejection_count, ct_actual, ht_final, mt_final, cth, ctl, cte, R_id \u003d result\n\t\t\n\t\t    system.tag.writeBlocking([\n\t\t        \"[.]../Count/R_Count\",\n\t\t        \"[.]../OEE/CT_Actual\",\n\t\t        \"[.]../Operating_Time/HT_Time\",\n\t\t        \"[.]../Operating_Time/MC_Time\",\n\t\t        \"[.]../Count/CT_H\",\n\t\t        \"[.]../Count/CT_L\",\n\t\t        \"[.]../Count/CT_E\",\n\t\t        \"[.]../Count/Rejection_Act\"\n\t\t    ], [rejection_count, ct_actual, ht_final, mt_final, cth, ctl, cte, R_id])"
                                }
                              ],
                              "sourceTagPath": "[.]../../OPC/From/Bad_Count",
                              "name": "Rejection_Count",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\t# Tag paths\n\tTrigger \u003d system.tag.read(\"[.]../Operating_Time/MC_Status_Act\").value\n\tTrigger1 \u003d system.tag.read(\"[.]Off_Tag\").value\n\tOEE_On \u003d system.tag.read(\"[.]../Count/OEE_On\").value\n\tMC_Track \u003d system.tag.read(\"[.]../../Machine_Tracking\").value\n\tT_stamp \u003d system.tag.read(\"[.]../../../../../DateTime_OEE\").value\n\t\n\t# Write OEE_On \u003d 1 if the condition is met\n\tif (Trigger \u003d\u003d 2 or Trigger1 \u003d\u003d 1) and OEE_On \u003d\u003d 1 and MC_Track \u003d\u003d 1:\n\t    system.tag.write(\"[.]../Operating_Time/DT_Stop\", T_stamp)\n\t\n\t# Tags to read\n\ttags_to_read \u003d [\n\t    \"[.]../Count/OEE_On\",\n\t    \"[.]../../Machine_Tracking\",\n\t    \"[.]../Operating_Time/MC_Status_Act\",\n\t    \"[.]Off_Tag\",\n\t    \"[.]../../../../../../Business_Code\",\n\t    \"[.]../../../../../../Business_Name\",\n\t    \"[.]../../../../../Plant_Code\",\n\t    \"[.]../../../../../Plant_Name\",\n\t    \"[.]../../../../Cell_Code\",\n\t    \"[.]../../../../Cell_Name\",\n\t    \"[.]../../../Line_Code\",\n\t    \"[.]../../../Line_Name\",\n\t    \"[.]../../Machine_Code\",\n\t    \"[.]../../Machine_Name\",\n\t    \"[.]../../OPC/From/Operator_Id\",\n\t    \"[.]../../../../../Shift_dup\",\n\t    \"[.]../../../../../Shift_Hour_Dup\",\n\t    \"[.]../../../../../Shift_Id\",\n\t    \"[.]../../../../../../../Hour\",\n\t    \"[.]../../../../../../../Date_hour\",\n\t    \"[.]../../OPC/From/Part_Id\",\n\t    \"[.]../OEE/OEE_Start\",\n\t    \"[.]../../../../../DateTime_OEE\",\n\t    \"[.]../Operating_Time/Stop_Timer\",\n\t    \"[.]../Operating_Time/Run_Timer\",\n\t    \"[.]../Operating_Time/Off_Timer\",\n\t    \"[.]../Count/G_Count\",\n\t    \"[.]../Count/R_Count\",\n\t    \"[.]../Operating_Time/DT_Reason\",\n\t    \"[.]../Operating_Time/Idle_Timer\",\n\t    \"[.]../Operating_Time/Shift_Time\",\n\t    \"[.]../Operating_Time/DT_Type\",\n\t    \"[.]../OEE/CT\",\n\t    \"[.]../Count/CT_E\",\n\t    \"[.]../Count/CT_H\",\n\t    \"[.]../Count/CT_L\",\n\t    \"[.]HT_Timer\",\n\t    \"[.]../Operating_Time/MC_Time\",\n\t    \"[.]../Operating_Time/DT_Start\",\n\t    \"[.]../Operating_Time/DT_Start_Act\",\n\t    \"[.]../Operating_Time/DT_Stop\",\n\t    \"[.]Idel_Limit\",\n\t    \"[.]Breakdown_ID\",\n\t    \"[.]../../../../../DateTime_OEE\"  # currentTimestamp\n\t]\n\t\n\tReturn_values \u003d OEE.OEE_Triggers.log_oee_data_Shift(tags_to_read)\n\t\n\tif Return_values:\n\t    (\n\t        Trigger, Trigger1, OEE_On, MC_Stat,\n\t        actualDowntime, SP_DATE_TIME, Date_OEE,\n\t        Shift_Plan, end_Time, oeeTimestamp, currentTimestamp\n\t    ) \u003d Return_values\n\t    if (Trigger \u003d\u003d 2 or Trigger1 \u003d\u003d 1) and OEE_On \u003d\u003d 1 and MC_Stat \u003d\u003d 1:\n\t        tags_to_write \u003d [\n\t            \"[.]../OEE/OEE_Start\",\n\t            \"[.]../Count/G_Count\",\n\t            \"[.]../Count/R_Count\",\n\t            \"[.]../Operating_Time/Run_Timer\",\n\t            \"[.]../Operating_Time/Stop_Timer\",\n\t            \"[.]../Operating_Time/Idle_Timer\",\n\t            \"[.]../Count/CT_E\",\n\t            \"[.]../Count/CT_H\",\n\t            \"[.]../Count/CT_L\",\n\t            \"[.]HT_Timer\",\n\t            \"[.]../Operating_Time/MC_Time\",\n\t            \"[.]../Operating_Time/Off_Timer\",\n\t            \"[.]../Operating_Time/Down_Time\",\n\t            \"[.]../Operating_Time/DT_Start\",\n\t            \"[.]../Operating_Time/DT_Start_Act\"\n\t        ]\n\t        values_to_write \u003d [end_Time, 0, 0, 0, 0, 0,0, 0, 0,0, 0, 0,0, oeeTimestamp, currentTimestamp]\n\t        system.tag.writeBlocking(tags_to_write, values_to_write)\n\t    if SP_DATE_TIME \u003d\u003d Date_OEE and Shift_Plan \u003e 0:\n\t        system.tag.write(\"[.]../Count/OEE_On\", 0)\n\t        system.tag.write(\"[.]../Operating_Time/Shift_Time\", 0)\n\t    else:\n\t        system.tag.write(\"[.]../OEE/OEE_Start\", oeeTimestamp)\n\t        system.tag.write(\"[.]../Operating_Time/DT_Start\", oeeTimestamp)\n\t        system.tag.write(\"[.]../Operating_Time/DT_Start_Act\", currentTimestamp)\n\t        system.tag.write(\"[.]../Count/OEE_On\", 1)\n\t    system.tag.write(\"[.]../../OPC/To/Shift_Reset\",currentValue.value)"
                                }
                              ],
                              "sourceTagPath": "[.]../../../../../Shift_Trigger",
                              "name": "OEE_Shift",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "expr",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif OEE_On\u003d\u003d1:\n\t\ttags_to_read \u003d [\n\t\t\t\"[.]../../Machine_Tracking\",\n\t\t\t\"[.]Off_Tag\",\n\t\t\t\"[.]../Operating_Time/MC_Status_Act\",\n\t\t\t\"[.]DT_Timer\",\n\t\t\t\"[.]MC_Status_Trigger\",\n\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\"[.]HT_Timer\"\t\t\n\t\t]\n\t\ttags \u003d [tag.value for tag in system.tag.readBlocking(tags_to_read)]\n\t\tif tags[0] !\u003d 1:\n\t\t\treturn\n\t\tb \u003d tags[1]\n\t\ta \u003d int(tags[2])\n\t\tc \u003d tags[3]\n\t\te \u003d int(tags[4])\n\t\toff, run, ht \u003d tags[5], tags[6], tags[7]\n\t\tupdates \u003d []\n\t\tif b \u003d\u003d 1:\n\t\t\tsystem.tag.write(\"[.]../Operating_Time/Off_Timer\" , off + 1)\n\t\tif a \u003d\u003d 1 and b !\u003d 1:\n\t\t\tsystem.tag.write(\"[.]../Operating_Time/Run_Timer\", run + 1)\n\t\tif a \u003d\u003d 2 and b !\u003d 1:\n\t\t\tsystem.tag.write(\"[.]DT_Timer\", c + 1)\n\t\tif e \u003d\u003d 2 and b !\u003d 1:\n\t\t\tsystem.tag.write(\"[.]HT_Timer\", ht + 1)\n\t\t#if Write_Tag:\n\t\t\t#system.tag.writeBlocking([item[0] for item in Write_Tag], [item[1] for item in Write_Tag])\n\t\t\t\n\t\t\t\n\t\t"
                                }
                              ],
                              "expression": "getSecond(now())",
                              "name": "Seconds",
                              "executionMode": "FixedRate",
                              "executionRate": 500,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "expr",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tM_Tracking\u003dsystem.tag.read(\"[.]../../Machine_Tracking\").value\n\tif OEE_On\u003d\u003d1 and M_Tracking\u003d\u003d1:\n\t\ttags_to_read \u003d [\n\t\t\t\"[.]../Count/OEE_On\",                    # OEE_On\n\t\t\t\"[.]../../Machine_Tracking\",                 # MC_Stat\n\t\t\t\"[.]OEE_1hour\",               # Triger\n\t\t\t\"[.]MC_Status_Trigger\",   # Triger1\n\t\t\t\n\t\t\t\"[.]../../../../../../Business_Code\",  # BG_Id\n\t\t\t\"[.]../../../../../../Business_Name\",\n\t\t\t\"[.]../../../../../Plant_Code\",        # Plant\n\t\t\t\"[.]../../../../../Plant_Name\",\n\t\t\t\"[.]../../../../Cell_Code\",\n\t\t\t\"[.]../../../../Cell_Name\",\n\t\t\t\"[.]../../../Line_Code\",                # Line\n\t\t\t\"[.]../../../Line_Name\",\n\t\t\t\"[.]../../Machine_Code\",             # Machine\n\t\t\t\"[.]../../Machine_Name\",\n\t\t\t\n\t\t\t\"[.]../../OPC/From/Operator_Id\",                   # Operator\n\t\t\t\"[.]../../../../../Shift\",                                         # Shift\n\t\t\t\"[.]../../../../../Shift_Hour\",                                    # Shift_Hour\n\t\t\t\"[.]../../../../../../../Hour\",                                                                # Hour\n\t\t\t\"[.]../../../../../../../Date_hour\",                                                           # Datetime_Hour\n\t\t\t\n\t\t\t\"[.]../../OPC/From/Part_Id\",                    # Part_Id\n\t\t\t\"[.]../OEE/OEE_Start\",                  # Start_Time\n\t\t\t\"[.]../../../../../DateTime_OEE\",                                  # end_Time\n\t\t\t\n\t\t\t\"[.]../Operating_Time/Stop_Timer\",       # StopTime1\n\t\t\t\"[.]../Operating_Time/Run_Timer\",        # run_time\n\t\t\t\"[.]../Operating_Time/Off_Timer\",        # Off_time\n\t\t\t\n\t\t\t\"[.]../Count/G_Count\",               # Good_Count\n\t\t\t\"[.]../Count/R_Count\",                   # Rejection\n\t\t\t\"[.]Breakdown_ID\",    # Reason\n\t\t\t\"[.]../Operating_Time/Idle_Timer\",       # downTime1\n\t\t\t\n\t\t\t\"[.]../Operating_Time/Shift_Time\",             # Shifttime\n\t\t\t\"[.]../Operating_Time/DT_Type\",         # DT_type\n\t\t\t\"[.]../OEE/CT\",                 # idle_Cycle_time\n\t\t\t\n\t\t\t\"[.]../Count/CT_E\",                      # CTE\n\t\t\t\"[.]../Count/CT_H\",                      # CTH\n\t\t\t\"[.]../Count/CT_L\",                      # CTL\n\t\t\t\n\t\t\t\"[.]../Operating_Time/HT_Time\",   # Handling_time_tag\n\t\t\t\"[.]../Operating_Time/MC_Time\"     # Maching_time_tag\n\t\t]\n\t\t\n\t\tresult \u003d OEE.OEE_Triggers.log_oee_data_1Hou(tags_to_read)\n\t\n\t\tif result:\n\t\t\ttag_write_values \u003d result[:-1]         # First 13 values\n\t\t\tdt_type \u003d result[-1]                   # 14th value is DT_type\n\t\t\t\n\t\t\tresult_tags \u003d [\n\t\t\t\t\"[.]../OEE/OEE_Start\",\n\t\t\t\t\"[.]../Count/G_Count\",\n\t\t\t\t\"[.]../Count/R_Count\",\n\t\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Stop_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Idle_Timer\",\n\t\t\t\t\"[.]../Count/CT_E\",\n\t\t\t\t\"[.]../Count/CT_H\",\n\t\t\t\t\"[.]../Count/CT_L\",\n\t\t\t\t\"[.]../Operating_Time/HT_Time\",\n\t\t\t\t\"[.]../Operating_Time/MC_Time\",\n\t\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Shift_Time\"\n\t\t\t]\n\t\t\t\n\t\t\tsystem.tag.writeBlocking(result_tags, tag_write_values)\n\t\t\t\n\t\t\tif dt_type \u003d\u003d 2:\n\t\t\t\tsystem.tag.writeBlocking(\n\t\t\t\t\t[\"[.]../Operating_Time/Minor_Loss\"],\n\t\t\t\t\t[1]\n\t\t\t\t)"
                                }
                              ],
                              "expression": "getHour24(now())",
                              "name": "OEE_1hour",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif currentValue.quality.isGood() and currentValue.value !\u003d 0 and previousValue.quality.isGood() and OEE_On\u003d\u003d1:\n\t\tsystem.tag.write(\"[.]../Operating_Time/DT_Reason\",currentValue.value)"
                                }
                              ],
                              "sourceTagPath": "[.]../../OPC/From/BD_Reason",
                              "name": "Breakdown_ID",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "db",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_ProdOff \u003d system.tag.read(\"[.]PS_Planner\").value\t\t\t\n\t\n\tif OEE_ProdOff !\u003d 0:\n\t\t# If OEE_ProdOff is not 0, reset certain tags\n\t\tsystem.tag.write(\"[.]../Count/OEE_On\", 0)\n\t\t#system.tag.write(\"[default]Tags/OEE/Enterprise/BG4/Plant1/Line1/Machine1/Operating_time/TST\", 0)\n\telif OEE_ProdOff \u003d\u003d 0:\n\t\t# If OEE_ProdOff is 0, update certain tags\n\t\tsystem.tag.write(\"[.]../Count/OEE_On\", 1)\n\t\t\t"
                                }
                              ],
                              "datasource": "OEE_NEW",
                              "query": "select isnull ((\r\nSELECT \r\nCASE \r\nWHEN {[.]../../../../../Shift_Id} \u003d 1 THEN shift_1 \r\nWHEN {[.]../../../../../Shift_Id} \u003d 2 THEN shift_2 \r\nWHEN {[.]../../../../../Shift_Id} \u003d 3 THEN shift_3 \r\nEND AS Shift_Status FROM [OEE_NEW].[dbo].[PRODUCTION_OFF_SCHEDULE] \r\nWHERE business_id \u003d {[.]../../../../../../Business_Code} \r\nAND plant_id \u003d {[.]../../../../../Plant_Code} \r\nAND cell_id \u003d {[.]../../../../Cell_Code} \r\nAND line_id \u003d {[.]../../../Line_Code} \r\nAND machine_code \u003d {[.]../../Machine_Code} \r\nAND CAST(date_scheduled AS DATE) \u003d \u0027{[.]../../../../../DateTime_OEE}\u0027\r\n), 0)",
                              "name": "PS_Planner",
                              "executionMode": "FixedRate",
                              "executionRate": 15000,
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "db",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif OEE_On\u003d\u003d1:\n\t\ttags_to_read \u003d [\n\t\t    \"[.]../Count/OEE_On\",\n\t\t    \"[.]../../../../../DateTime_OEE\",\n\t\t    \"[.]../../../../../Shift_Id\",\n\t\t    \"[.]../../../../../../Business_Code\",\n\t\t    \"[.]../../../../../../Business_Name\",\n\t\t    \"[.]../../../../../Plant_Code\",\n\t\t    \"[.]../../../../../Plant_Name\",\n\t\t    \"[.]../../../../Cell_Code\",\n\t\t    \"[.]../../../../Cell_Name\",\n\t\t    \"[.]../../../Line_Code\",\n\t\t    \"[.]../../../Line_Name\",\n\t\t    \"[.]../../Machine_Code\",\n\t\t    \"[.]../../Machine_Name\",\n\t\t    \"[.]../../../../../Shift\",\n\t\t    \"[.]../../../../../Shift_Id\"\n\t\t]\n\t\tresult \u003d OEE.PS.PS(tags_to_read)\n\t\tDate,date_oee,Shift,T_stamp,Tstamp_act, SE, Shift_Time \u003d result\n\t\n\t\tif SE\u003d\u003d0:\n\t\t\tsystem.tag.writeBlocking([\"[.]../Operating_Time/Shift_Time\"], [Shift_Time])\n\t\tif Date \u003d\u003d date_oee and Shift \u003e 0:\n\t\t    system.tag.writeAll([\n\t\t        \"[.]../Count/OEE_On\",\n\t\t        \"[.]../Operating_Time/Shift_Time\"\n\t\t    ], [0, 0])\n\t\telse:\n\t\t    system.tag.writeAll([\n\t\t        \"[.]../OEE/OEE_Start\",\n\t\t        \"[.]../Operating_Time/DT_Start\",\n\t\t        \"[.]../Operating_Time/DT_Start_Act\",\n\t\t        \"[.]../Count/OEE_On\"\n\t\t    ], [T_stamp, T_stamp, Tstamp_act, 1])\n\t\t"
                                }
                              ],
                              "datasource": "Master",
                              "query": "Select isnull((Select distinct Shift_ID from Shift_Master where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Start_time \u003c \u0027{[.]../../../../../../../Time 2}\u0027 and End_time \u003e \u0027{[.]../../../../../../../Time 2}\u0027),\u00273\u0027)",
                              "name": "PS",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "expr",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003d system.tag.read(\"[.]../Count/OEE_On\").value\n\tM_Tracking\u003d system.tag.read(\"[.]../../Machine_Tracking\").value\n\tif currentValue.value \u003d\u003d 1 and OEE_On\u003d\u003d1 and M_Tracking\u003d\u003d1:\n\t\ttags_to_read \u003d [\n\t\t\t\"[.]../../../../../../Business_Code\",\n\t\t\t\"[.]../../../../../../Business_Name\",\n\t\t\t\"[.]../../../../../Plant_Code\",\n\t\t\t\"[.]../../../../../Plant_Name\",\n\t\t\t\"[.]../../../../Cell_Code\",\n\t\t\t\"[.]../../../../Cell_Name\",\n\t\t\t\"[.]../../../Line_Code\",\n\t\t\t\"[.]../../../Line_Name\",\n\t\t\t\"[.]../../Machine_Code\",\n\t\t\t\"[.]../../Machine_Name\",\n\t\t\t\"[.]../../../../../Shift\",\n\t\t\t\"[.]../../../../../Shift_Hour\",\n\t\t\t\"[.]../../../../../DateTime_OEE\",\n\t\t\t\"[.]../Count/OEE_On\",\n\t\t\t\"[.]../Operating_Time/MC_Status_Act\",\n\t\t\t\"[.]../../OPC/From/Operator_Id\",\n\t\t\t\"[.]../../../../../../../Hour\",\n\t\t\t\"[.]../../../../../../../Date_hour\",\n\t\t\t\"[.]../../OPC/From/Part_Id\",\n\t\t\t\"[.]../OEE/OEE_Start\",\n\t\t\t\"[.]../../../../../DateTime_OEE\",\n\t\t\t\"[.]../Operating_Time/Stop_Timer\",\n\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\"[.]../Count/G_Count\",\n\t\t\t\"[.]../Count/R_Count\",\n\t\t\t\"[.]Breakdown_ID\",\n\t\t\t\"[.]../Operating_Time/Idle_Timer\",\n\t\t\t\"[.]../Operating_Time/Shift_Time\",\n\t\t\t\"[.]../OEE/CT\",\n\t\t\t\"[.]../Count/CT_E\",\n\t\t\t\"[.]../Count/CT_H\",\n\t\t\t\"[.]../Count/CT_L\",\n\t\t\t\"[.]../Operating_Time/HT_Time\",\n\t\t\t\"[.]../Operating_Time/MC_Time\"\n\t\t]\n\t\t# Call the function\n\t\tresult_values \u003d OEE.OEE_Triggers.log_oee_data_15Min(tags_to_read)\n\t\t\n\t\t# If the function returned valid data, write to tags\n\t\tif result_values:\n\t\t\treset_tags \u003d [\n\t\t\t\t\"[.]../OEE/OEE_Start\",\n\t\t\t\t\"[.]../Count/G_Count\",\n\t\t\t\t\"[.]../Count/R_Count\",\n\t\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Stop_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Idle_Timer\",\n\t\t\t\t\"[.]../Count/CT_E\",\n\t\t\t\t\"[.]../Count/CT_H\",\n\t\t\t\t\"[.]../Count/CT_L\",\n\t\t\t\t\"[.]../Operating_Time/HT_Time\",\n\t\t\t\t\"[.]../Operating_Time/MC_Time\",\n\t\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Shift_Time\",\n\t\t\t\t\"[.]../../OPC/To/Availability\",\n\t\t\t\t\"[.]../../OPC/To/Quality\",\n\t\t\t\t\"[.]../../OPC/To/Performance\",\n\t\t\t\t\"[.]../../OPC/To/OEE\"           \n\t\t\t]\n\t\t\t\n\t\t\tsystem.tag.writeBlocking(reset_tags, result_values)"
                                }
                              ],
                              "expression": "getMinute(now()) % 15 \u003d 0 \u0026\u0026 getSecond(now()) \u003d 0",
                              "name": "OEE_15Mins",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tM_Tracking\u003dsystem.tag.read(\"[.]../../Machine_Tracking\").value\n\tif OEE_On \u003d\u003d 1 and M_Tracking \u003d\u003d 1:\n\t\ttags_to_read \u003d [\n\t\t    \"[.]../Count/OEE_On\",\n\t\t    \"[.]MC_Status_Trigger\",\n\t\t    \"[.]../Count/Part_Per_Cycle\",\n\t\t    \"[.]../Count/G_Count\",\n\t\t    \"[.]../../OPC/From/MT_Actual\",\n\t\t    \"[.]../OEE/HT_Actual\",\n\t\t    \"[.]../Operating_Time/MC_Time\",\n\t\t    \"[.]../Operating_Time/HT_Time\",\n\t\t    \"[.]../OEE/CT_Actual\",\n\t\t    \"[.]../OEE/CT\",\n\t\t    \"[.]../Count/CT_H\",\n\t\t    \"[.]../Count/CT_L\",\n\t\t    \"[.]../Count/CT_E\",\n\t\t    \"[.]../../../../../../Business_Code\",\n\t\t    \"[.]../../../../../../Business_Name\",\n\t\t    \"[.]../../../../../Plant_Code\",\n\t\t    \"[.]../../../../../Plant_Name\",\n\t\t    \"[.]../../../../Cell_Code\",\n\t\t    \"[.]../../../../Cell_Name\",\n\t\t    \"[.]../../../Line_Code\",\n\t\t    \"[.]../../../Line_Name\",\n\t\t    \"[.]../../Machine_Code\",\n\t\t    \"[.]../../Machine_Name\",\n\t\t    \"[.]../../../../../Shift\",\n\t\t    \"[.]../../../../../../../Hour\",\n\t\t    \"[.]../../OPC/From/Part_Id\",\n\t\t    \"[.]../../OPC/From/Operator_Id\",\n\t\t    \"[.]Shot_Count\",\n\t\t    \"[.]../OEE/Cum_CT\",\n\t\t    \"[.]../../../../../DateTime_OEE\",\n\t\t    \"[.]../../../../../../Rejection\",\n\t\t    \"[.]Idel_Limit\"\n\t\t   \n\t\t]\n\t\t\n\t\t#OEE_On, MC_Status, Cycle_partcount, Good_Count, HT_Actual, MT_Actual, Handling_time, Maching_time, Cycle_time_act, CycleTime, CTH, CTL, CTE,\n\t\t#Enterprise_No, BG_No, Plant_No, Line_No, Machine_No, Shift, Hour, Operator, Part_ID, DateTime_OEE, Rejection\n\t\t\n\t\tresult \u003d OEE.P_Count.Shot_Count(tags_to_read)\n\t\tif result:\n\t\t    good_count, ct_actual, ht_final, mt_final, cth, ctl, cte \u003d result\n\t\t\n\t\t    system.tag.writeBlocking([\n\t\t        \"[.]../Count/G_Count\",\n\t\t        \"[.]../OEE/CT_Actual\",\n\t\t        \"[.]../Operating_Time/HT_Time\",\n\t\t        \"[.]../Operating_Time/MC_Time\",\n\t\t        \"[.]../Count/CT_H\",\n\t\t        \"[.]../Count/CT_L\",\n\t\t        \"[.]../Count/CT_E\",\n\t\t    ], [good_count, ct_actual, ht_final, mt_final, cth, ctl, cte])"
                                }
                              ],
                              "sourceTagPath": "[.]../../OPC/From/Good_Count",
                              "name": "Shot_Count",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tI_Limit \u003d system.tag.read(\"[.]Idel_Limit\").value\n\tHT_Act \u003d currentValue.value\n\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif (I_Limit\u003cHT_Act) and OEE_On\u003d\u003d1:\n\t\tsystem.tag.write(\"[.]../OEE/HT_Actual\",I_Limit)\n\telse:\n\t\tsystem.tag.write(\"[.]../OEE/HT_Actual\",HT_Act)"
                                }
                              ],
                              "sourceTagPath": "[.]../../OPC/From/LU_Time",
                              "name": "HT_Actual",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003d system.tag.read(\"[.]../Count/OEE_On\").value\n\tif currentValue.quality.isGood() and currentValue.value !\u003d 0 and previousValue.quality.isGood() and OEE_On\u003d\u003d1:\n\t\tsystem.tag.write(\"[.]../Count/Rejection_Act\",currentValue.value)"
                                }
                              ],
                              "sourceTagPath": "[.]../../OPC/From/Rejection_Reason",
                              "name": "Rejection_Id",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "qualityChanged",
                                  "script": "\tMS_Qual \u003d currentValue.quality\n\tif currentValue.quality.isGood():\n\t\tsystem.tag.write(\"[.]Off_Tag\",0)\n\telse:\n\t\tsystem.tag.write(\"[.]Off_Tag\",1)"
                                },
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tMC_Status \u003d currentValue.value\n\t#system.tag.write(\"[default]Tags/OEE/Enterprise/BG4/Plant2/Line1/Machine1/Operating_time/Mc_status\",a)\n\tsystem.tag.write(\"[.]../Operating_Time/MC_Status_Act\",MC_Status)\n\tsystem.tag.write(\"[.]HT_Timer\",0)\n\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif MC_Status \u003d\u003d 1 and OEE_On\u003d\u003d1:\n\t\tsystem.tag.write(\"[.]../Operating_Time/MC_Status_Act\",1)\n\t\tsystem.tag.write(\"[.]HT_Timer\",0)\n\t\t#system.tag.write(\"[default]Tags/OEE/Enterprise/BG4/Plant2/Line1/Machine1/Operating_time/Mc_status_Act 1\",1)\n\t\t\t\n\t"
                                }
                              ],
                              "sourceTagPath": "[.]../../OPC/From/Machine_Status",
                              "name": "MC_Status_Trigger",
                              "tagType": "AtomicTag"
                            },
                            {
                              "datasource": {
                                "bindType": "parameter",
                                "binding": "{DB}"
                              },
                              "valueSource": "memory",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tsystem.tag.write(\"[.]../Count/Idel_Time\",currentValue.value)"
                                }
                              ],
                              "query": "Select Idle_Time from Idle_Time where Eg_ID \u003d 1 and Bg_ID \u003d 4 and Plant_Id \u003d 2 and Line_Id \u003d 1 and Machine_Id \u003d 1\r\n\r\n",
                              "name": "Idel_Limit",
                              "value": 300,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tMC_status \u003d system.tag.read(\"[.]../Operating_Time/MC_Status_Act\").value\n\tOFF_Tag \u003d system.tag.read(\"[.]Off_Tag\").value\n\tT_Stamp \u003d system.tag.read(\"[.]../../../../../DateTime_OEE\").value\n\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif MC_status \u003d\u003d 1 and OFF_Tag \u003d\u003d0 and OEE_On\u003d\u003d1:\n\t\tsystem.tag.write(\"[.]../Operating_Time/DT_Stop\",T_Stamp)\n\t\n\ttags_to_read \u003d [\n\t\t\"[.]../../../../../Shift\",\n\t\t\"[.]../Operating_Time/MC_Status_Act\",\n\t\t\"[.]Off_Tag\",\n\t\t\"[.]../../../../../DateTime_OEE\",\n\t\t\"[.]../../../../../../Business_Code\",\n\t\t\"[.]../../../../../../Business_Name\",\n\t\t\"[.]../../../../../Plant_Code\",\n\t\t\"[.]../../../../../Plant_Name\",\n\t\t\"[.]../../../../Cell_Code\",\n\t\t\"[.]../../../../Cell_Name\",\n\t\t\"[.]../../../Line_Code\",\n\t\t\"[.]../../../Line_Name\",\n\t\t\"[.]../../Machine_Code\",\n\t\t\"[.]../../Machine_Name\",\n\t\t\"[.]../../OPC/From/Operator_Id\",\n\t\t\"[.]../../../../../../../Hour\",\n\t\t\"[.]../../OPC/From/Part_Id\",\n\t\t\"[.]../Operating_Time/DT_Start\",\n\t\t\"[.]../Operating_Time/DT_Start_Act\",\n\t\t\"[.]Idel_Limit\",\n\t\t\"[.]../Operating_Time/DT_Stop\",\n\t\t\"[.]../../../../../DateTime_OEE\",\n\t\t\"[.]Breakdown_ID\"\n\t]\n\twrite_value \u003d OEE.Operating_Time.offtime(tags_to_read)\n\tif write_value and OEE_On\u003d\u003d1:\n\t\tsystem.tag.writeBlocking([item[0] for item in write_value], [item[1] for item in write_value])"
                                }
                              ],
                              "name": "Off_Tag",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif OEE_On\u003d\u003d1:\n\t\ttags_to_read \u003d [\n\t\t    \"[.]../Operating_Time/MC_Status_Act\",\n\t\t    \"[.]DT_Timer\",\n\t\t    \"[.]Idel_Limit\",\n\t\t    \"[.]../Operating_Time/Stop_Timer\",\n\t\t    \"[.]../Operating_Time/Idle_Timer\",\n\t\t    \"[.]../Operating_Time/Minor_Loss\",\n\t\t    \"[.]../../../../../../Business_Code\",\n\t\t    \"[.]../../../../../../Business_Name\",\n\t\t    \"[.]../../../../../Plant_Code\",\n\t\t    \"[.]../../../../../Plant_Name\",\n\t\t    \"[.]../../../../Cell_Code\",\n\t\t    \"[.]../../../../Cell_Name\",\n\t\t    \"[.]../../../Line_Code\",\n\t\t    \"[.]../../../Line_Name\",\n\t\t    \"[.]../../Machine_Code\",\n\t\t    \"[.]../../Machine_Name\",\n\t\t    \"[.]../../../../../Shift\",\n\t\t    \"[.]../../../../../../../Hour\"\n\t\t    \n\t\t]\n\t\t# Read tag values in one go\n\t\tvalues \u003d [tag.value for tag in system.tag.readBlocking(tags_to_read)]\n\t\t\n\t\t# Assign values with meaningful names\n\t\tmc_status, dt_timer, idle_limit, stop_time, idle_time, minor_loss, bg_id, bg_Name, plant, plant_Name, Cell, Cell_Name, line, Line_Name, machine, Machine_Name, shift, hour \u003d values\n\t\t\n\t\t# Ensure values are numeric (type safety)\n\t\tdt_timer \u003d int(dt_timer)\n\t\tidle_limit \u003d int(idle_limit)\n\t\tstop_time \u003d int(stop_time)\n\t\tidle_time \u003d int(idle_time)\n\t\tminor_loss \u003d int(minor_loss)\n\t\n\t\t\n\t\t# Prepare tag writes\n\t\twrite_tags \u003d []\n\t\t\n\t\t# Main logic for DT classification\n\t\tif mc_status \u003d\u003d 2 :\n\t\t\n\t\t    if dt_timer \u003c idle_limit:\n\t\t        stop_time +\u003d 1\n\t\t        write_tags +\u003d [\n\t\t            [\"[.]../Operating_Time/Stop_Timer\", stop_time],\n\t\t            [\"[.]../Operating_Time/DT_Type\", 2]  # 2 \u003d STOP\n\t\t        ]\n\t\t\n\t\t    elif dt_timer \u003e idle_limit:\n\t\t        idle_time +\u003d 1\n\t\t        write_tags +\u003d [\n\t\t            [\"[.]../Operating_Time/Idle_Timer\", idle_time],\n\t\t            [\"[.]../Operating_Time/DT_Type\", 3]  # 3 \u003d IDLE\n\t\t        ]\n\t\t\n\t\t    elif dt_timer \u003d\u003d idle_limit and dt_timer !\u003d 0:\n\t\t        # Calculate new stop time capped at 0\n\t\t        new_stop_time \u003d stop_time - idle_limit if stop_time \u003e\u003d idle_limit else 0\n\t\t        #2025-07-31 write_tags.append([\"[.]../Operating_Time/Stop_Timer\", new_stop_time])\n\t\t        system.tag.write(\"[.]../Operating_Time/Stop_Timer\", new_stop_time)\n\t\t        #2025-07-2025 write_tags.append([\"[.]../Operating_Time/Idle_Timer\", idle_time])\n\t\t        new_idle_time \u003d idle_time + idle_limit #2025-07-2025 if stop_time \u003e\u003d idle_limit else idle_time\n\t\t        #2025-07-2025 write_tags.append([\"[.]../Operating_Time/Idle_Timer\", new_idle_time])\n\t\t        system.tag.write(\"[.]../Operating_Time/Idle_Timer\", new_idle_time)\n\t\t\n\t\t        # Fetch latest DB record for this machine\n\t\t        row \u003d system.db.runPrepQuery(\n\t\t            \"SELECT TOP 1 ID, Shift, Hour, Stoptime, Downtime FROM OEE_OEEData \"\n\t\t            \"WHERE Business_ID \u003d ? AND Plant_ID \u003d ? AND Cell_ID \u003d ? AND Line_ID \u003d ? AND Machine_Code \u003d ? ORDER BY id DESC\",\n\t\t            [bg_id, plant, Cell, line, machine], \u0027OEE\u0027\n\t\t        )\n\t\t\n\t\t        if row:\n\t\t            record \u003d row[0]\n\t\t            id \u003d record[\"id\"]\n\t\t            shift_pre \u003d record[\"Shift\"]\n\t\t            hour_pre \u003d record[\"Hour\"]\n\t\t            stop_time_pre \u003d int(record[\"StopTime\"])\n\t\t            downtime_pre \u003d int(record[\"DownTime\"])\n\t\t\n\t\t            # Handle minor loss reversal if hour changed\n\t\t            if hour_pre !\u003d hour and shift \u003d\u003d shift_pre and downtime_pre \u003d\u003d 0 and minor_loss \u003d\u003d 1:\n\t\t                updated_stop_time \u003d stop_time_pre + new_stop_time + 1  # +1 for current cycle\n\t\t                downtime_new \u003d -new_stop_time\n\t\t\n\t\t                # Update OEE_data to reflect the corrected minor loss transition\n\t\t                system.db.runPrepUpdate(\n\t\t                    \"UPDATE OEE_OEEData SET Downtime \u003d ?, Stoptime \u003d ?,Trigger_Type \u003d ? WHERE ID \u003d ?\",\n\t\t                    [downtime_new, updated_stop_time, \"DT_Timer\", id],\n\t\t                    \u0027OEE\u0027\n\t\t                )\n\t\t\n\t\t                # Reset minor loss flag\n\t\t                write_tags.append([\"[.]../Operating_Time/Minor_Loss\", 0])\n\t\t\n\t\t# Write back tag values if any changes occurred\n\t\tif write_tags :\n\t\t    system.tag.writeBlocking(\n\t\t        [tag_path for tag_path, _ in write_tags],\n\t\t        [value for _, value in write_tags]\n\t\t    )"
                                }
                              ],
                              "name": "DT_Timer",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tHT_Actual \u003d system.tag.read(\"[.]HT_Timer\").value\n\tHT_Standard \u003d int(system.tag.read(\"[.]../OEE/HT_Std\").value)\n\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\t#if (HT_Actual \u003e\u003d HT_Standard) and OEE_On\u003d\u003d1:\n\t\t#system.tag.write(\"[.]../Operating_Time/MC_Status_Act\",2)\n\t\n"
                                }
                              ],
                              "name": "HT_Timer",
                              "value": 0,
                              "tagType": "AtomicTag"
                            }
                          ]
                        },
                        {
                          "name": "OEE",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "valueSource": "memory",
                              "dataType": "DateTime",
                              "name": "OEE_Stop",
                              "formatString": "yyyy-MM-dd h:mm:ss aa",
                              "value": 1735670220000,
                              "tagType": "AtomicTag"
                            },
                            {
                              "datasource": {
                                "bindType": "parameter",
                                "binding": "{DB}"
                              },
                              "valueSource": "db",
                              "query": "Select isnull((Select Handling_Time from OEE_ProductMaster where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Cell_ID \u003d {[.]../../../../Cell_Code} and Line_ID \u003d {[.]../../../Line_Code} and Machine_Code \u003d {[.]../../Machine_Code} and Product_ID \u003d {[.]../../OPC/From/Part_Id}),0)",
                              "name": "HT_Std",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "sourceTagPath": "0",
                              "name": "PS_Planner",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "dataType": "DateTime",
                              "name": "OEE_Start",
                              "formatString": "yyyy-MM-dd h:mm:ss aa",
                              "value": 1735670220000,
                              "tagType": "AtomicTag"
                            },
                            {
                              "datasource": {
                                "bindType": "parameter",
                                "binding": "{DB}"
                              },
                              "valueSource": "db",
                              "query": "select isnull((Select CycleTime_Cumulative from OEE_ProductMaster where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Cell_ID \u003d {[.]../../../../Cell_Code} and Line_ID \u003d {[.]../../../Line_Code} and Machine_Code \u003d {[.]../../Machine_Code} and Product_ID \u003d {[.]../../OPC/From/Part_Id}),0)",
                              "name": "Cum_CT",
                              "tagType": "AtomicTag"
                            },
                            {
                              "datasource": {
                                "bindType": "parameter",
                                "binding": "{DB}"
                              },
                              "valueSource": "db",
                              "query": "select isnull((Select CycleTime from OEE_ProductMaster where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Cell_ID \u003d {[.]../../../../Cell_Code} and Line_ID \u003d {[.]../../../Line_Code} and Machine_Code \u003d {[.]../../Machine_Code} and Product_ID \u003d {[.]../../OPC/From/Part_Id}),0)",
                              "name": "CT",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "CT_Actual",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "HT_Actual",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "datasource": {
                                "bindType": "parameter",
                                "binding": "{DB}"
                              },
                              "valueSource": "db",
                              "dataType": "String",
                              "query": "Select isnull((Select Product_Name from OEE_ProductMaster where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Cell_ID \u003d {[.]../../../../Cell_Code} and Line_ID \u003d {[.]../../../Line_Code} and Machine_Code \u003d {[.]../../Machine_Code} and Product_ID \u003d {[.]../../OPC/From/Part_Id}),\u0027No Part Model in Master\u0027)",
                              "name": "Part_Model",
                              "tagType": "AtomicTag"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "valueSource": "db",
                      "datasource": "OEE_NEW",
                      "query": "SELECT Data_Tracking\r\nFROM [OEE_NEW].[dbo].[M_OVERALL_MASTER] \r\nWHERE Business_ID \u003d {[.]../../../../Business_Code}\r\n  AND Plant_ID\u003d {[.]../../../Plant_Code}\r\n  AND Cell_ID \u003d {[.]../../Cell_Code}\r\n  AND Line_ID \u003d{[.]../Line_Code}\r\n  AND Machine_Code \u003d {[.]Machine_Code}",
                      "name": "Machine_Tracking",
                      "executionMode": "FixedRate",
                      "executionRate": 15000,
                      "value": 1,
                      "tagType": "AtomicTag"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "Machine RBL",
          "typeId": "",
          "parameters": {
            "Machine_DataBlock": {
              "dataType": "Integer"
            },
            "Machine_ID": {
              "dataType": "String"
            },
            "Machine_Name": {
              "dataType": "String"
            },
            "Machine_Path": {
              "dataType": "String",
              "value": ""
            },
            "DB": {
              "dataType": "String"
            },
            "Gateway": {
              "dataType": "String"
            },
            "Machine_Code": {
              "dataType": "Integer"
            }
          },
          "tagType": "UdtType",
          "tags": [
            {
              "valueSource": "memory",
              "name": "Machine_Tracking",
              "value": 1,
              "tagType": "AtomicTag"
            },
            {
              "name": "Calculation",
              "tagType": "Folder",
              "tags": [
                {
                  "name": "Count",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "memory",
                      "name": "CT_L",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "CT_H",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "CT_E",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Idel_Time",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "OEE_On",
                      "value": 1,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Rejection_Act",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "R_Count",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "G_Count",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "db",
                      "query": "Select isnull((Select PartPerCount from OEE_ProductMaster where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Cell_ID \u003d {[.]../../../../Cell_Code} and Line_ID \u003d {[.]../../../Line_Code} and Machine_Code \u003d {[.]../../Machine_Code} and Product_ID \u003d {[.]../../OPC/From/Part_Id}),0)",
                      "name": "Part_Per_Cycle",
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "Triggers",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "memory",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tHT_Actual \u003d system.tag.read(\"[.]HT_Timer\").value\n\tHT_Standard \u003d int(system.tag.read(\"[.]../OEE/HT_Std\").value)\n\tif HT_Actual \u003e\u003d HT_Standard:\n\t\tsystem.tag.write(\"[.]../Operating_Time/MC_Status_Act\",2)\n\t\n"
                        }
                      ],
                      "name": "HT_Timer",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\ttags_to_read \u003d [\n\t    \"[.]../Count/OEE_On\",\n\t    \"[.]MC_Status_Trigger\",\n\t    \"[.]../Count/R_Count\",\n\t    \"[.]../Count/Part_Per_Cycle\",\n\t    \"[.]../../OPC/From/MT_Actual\",\n\t    \"[.]../OEE/HT_Actual\",\n\t    \"[.]../Operating_Time/MC_Time\",\n\t    \"[.]../Operating_Time/HT_Time\",\n\t    \"[.]../OEE/Cum_CT\",\n\t    \"[.]../Count/CT_H\",\n\t    \"[.]../Count/CT_L\",\n\t    \"[.]../Count/CT_E\",\n\t    \"[.]../../../../../../Business_Code\",\n\t    \"[.]../../../../../../Business_Name\",\n\t    \"[.]../../../../../Plant_Code\",\n\t    \"[.]../../../../../Plant_Name\",\n\t    \"[.]../../../../Cell_Code\",\n\t    \"[.]../../../../Cell_Name\",\n\t    \"[.]../../../Line_Code\",\n\t    \"[.]../../../Line_Name\",\n\t    \"[.]../../Machine_Code\",\n\t    \"[.]../../Machine_Name\",\n\t    \"[.]../../../../../Shift\",\n\t    \"[.]../../../../../../../Hour\",\n\t    \"[.]../../OPC/From/Part_Id\",\n\t    \"[.]../../OPC/From/Operator_Id\",\n\t    \"[.]../../../../../DateTime_OEE\",\n\t    \"[.]../Count/Rejection_Act\",\n\t    \"[.]Idel_Limit\"\n\t]\n\t\n\t#OEE_On, MC_Status, Cycle_partcount, Good_Count, HT_Actual, MT_Actual, Handling_time, Maching_time, Cycle_time_act, CycleTime, CTH, CTL, CTE,\n\t#Enterprise_No, BG_No, Plant_No, Line_No, Machine_No, Shift, Hour, Operator, Part_ID, DateTime_OEE, Rejection\n\t\n\tresult \u003d OEE.P_Count.Rejection_Count(tags_to_read)\n\t\n\tif result:\n\t    rejection_count, ct_actual, ht_final, mt_final, cth, ctl, cte, R_id \u003d result\n\t\n\t    system.tag.writeBlocking([\n\t        \"[.]../Count/R_Count\",\n\t        \"[.]../OEE/CT_Actual\",\n\t        \"[.]../Operating_Time/HT_Time\",\n\t        \"[.]../Operating_Time/MC_Time\",\n\t        \"[.]../Count/CT_H\",\n\t        \"[.]../Count/CT_L\",\n\t        \"[.]../Count/CT_E\",\n\t        \"[.]../Count/Rejection_Act\"\n\t    ], [rejection_count, ct_actual, ht_final, mt_final, cth, ctl, cte, R_id])"
                        }
                      ],
                      "sourceTagPath": "[.]../../OPC/From/Bad_Count",
                      "name": "Rejection_Count",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "PS_Planner",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "db",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\ttags_to_read \u003d [\n\t    \"[.]../Count/OEE_On\",\n\t    \"[.]../../../../../DateTime_OEE\",\n\t    \"[.]../../../../../Shift_Id\",\n\t    \"[.]../../../../../../Business_Code\",\n\t    \"[.]../../../../../../Business_Name\",\n\t    \"[.]../../../../../Plant_Code\",\n\t    \"[.]../../../../../Plant_Name\",\n\t    \"[.]../../../../Cell_Code\",\n\t    \"[.]../../../../Cell_Name\",\n\t    \"[.]../../../Line_Code\",\n\t    \"[.]../../../Line_Name\",\n\t    \"[.]../../Machine_Code\",\n\t    \"[.]../../Machine_Name\",\n\t    \"[.]../../../../../Shift\",\n\t    \"[.]../../../../../Shift_Id\"\n\t]\n\tresult \u003d OEE.PS.PS(tags_to_read)\n\tDate,date_oee,Shift,T_stamp,Tstamp_act, SE, Shift_Time \u003d result\n\tif SE\u003d\u003d0:\n\t\tsystem.tag.writeBlocking([\"[.]../Operating_Time/Shift_Time\"], [Shift_Time])\n\tif Date \u003d\u003d date_oee and Shift \u003e 0:\n\t    system.tag.writeAll([\n\t        \"[.]../Count/OEE_On\",\n\t        \"[.]../Operating_Time/Shift_Time\"\n\t    ], [0, 0])\n\telse:\n\t    system.tag.writeAll([\n\t        \"[.]../OEE/OEE_Start\",\n\t        \"[.]../Operating_Time/DT_Start\",\n\t        \"[.]../Operating_Time/DT_Start_Act\",\n\t        \"[.]../Count/OEE_On\"\n\t    ], [T_stamp, T_stamp, Tstamp_act, 1])\n\t"
                        }
                      ],
                      "datasource": "Master",
                      "query": "Select isnull((Select distinct Shift_ID from Shift_Master where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Start_time \u003c \u0027{[.]../../../../../../../Time 2}\u0027 and End_time \u003e \u0027{[.]../../../../../../../Time 2}\u0027),\u00273\u0027)",
                      "name": "PS",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\ttags_to_read \u003d [\n\t    \"[.]../Operating_Time/MC_Status_Act\",\n\t    \"[.]DT_Timer\",\n\t    \"[.]Idel_Limit\",\n\t    \"[.]../Operating_Time/Stop_Timer\",\n\t    \"[.]../Operating_Time/Idle_Timer\",\n\t    \"[.]../Operating_Time/Minor_Loss\",\n\t    \"[.]../../../../../../Business_Code\",\n\t    \"[.]../../../../../../Business_Name\",\n\t    \"[.]../../../../../Plant_Code\",\n\t    \"[.]../../../../../Plant_Name\",\n\t    \"[.]../../../../Cell_Code\",\n\t    \"[.]../../../../Cell_Name\",\n\t    \"[.]../../../Line_Code\",\n\t    \"[.]../../../Line_Name\",\n\t    \"[.]../../Machine_Code\",\n\t    \"[.]../../Machine_Name\",\n\t    \"[.]../../../../../Shift\",\n\t    \"[.]../../../../../../../Hour\"\n\t]\n\t# Read tag values in one go\n\tvalues \u003d [tag.value for tag in system.tag.readBlocking(tags_to_read)]\n\t\n\t# Assign values with meaningful names\n\tmc_status, dt_timer, idle_limit, stop_time, idle_time, minor_loss, bg_id, bg_Name, plant, plant_Name, Cell, Cell_Name, line, Line_Name, machine, Machine_Name, shift, hour \u003d values\n\t\n\t# Ensure values are numeric (type safety)\n\tdt_timer \u003d int(dt_timer)\n\tidle_limit \u003d int(idle_limit)\n\tstop_time \u003d int(stop_time)\n\tidle_time \u003d int(idle_time)\n\tminor_loss \u003d int(minor_loss)\n\t\n\t# Prepare tag writes\n\twrite_tags \u003d []\n\t\n\t# Main logic for DT classification\n\tif mc_status \u003d\u003d 2:\n\t\n\t    if dt_timer \u003c idle_limit:\n\t        stop_time +\u003d 1\n\t        write_tags +\u003d [\n\t            [\"[.]../Operating_Time/Stop_Timer\", stop_time],\n\t            [\"[.]../Operating_Time/DT_Type\", 2]  # 2 \u003d STOP\n\t        ]\n\t\n\t    elif dt_timer \u003e idle_limit:\n\t        idle_time +\u003d 1\n\t        write_tags +\u003d [\n\t            [\"[.]../Operating_Time/Idle_Timer\", idle_time],\n\t            [\"[.]../Operating_Time/DT_Type\", 3]  # 3 \u003d IDLE\n\t        ]\n\t\n\t    elif dt_timer \u003d\u003d idle_limit and dt_timer !\u003d 0:\n\t        # Calculate new stop time capped at 0\n\t        new_stop_time \u003d stop_time - idle_limit if stop_time \u003e\u003d idle_limit else 0\n\t        #2025-07-31 write_tags.append([\"[.]../Operating_Time/Stop_Timer\", new_stop_time])\n\t        system.tag.write(\"[.]../Operating_Time/Stop_Timer\", new_stop_time)\n\t        #2025-07-2025 write_tags.append([\"[.]../Operating_Time/Idle_Timer\", idle_time])\n\t        new_idle_time \u003d idle_time + idle_limit #2025-07-2025 if stop_time \u003e\u003d idle_limit else idle_time\n\t        #2025-07-2025 write_tags.append([\"[.]../Operating_Time/Idle_Timer\", new_idle_time])\n\t        system.tag.write(\"[.]../Operating_Time/Idle_Timer\", new_idle_time)\n\t\n\t        # Fetch latest DB record for this machine\n\t        row \u003d system.db.runPrepQuery(\n\t            \"SELECT TOP 1 ID, Shift, Hour, Stoptime, Downtime FROM OEE_OEEData \"\n\t            \"WHERE Business_ID \u003d ? AND Plant_ID \u003d ? AND Cell_ID \u003d ? AND Line_ID \u003d ? AND Machine_Code \u003d ? ORDER BY id DESC\",\n\t            [bg_id, plant, Cell, line, machine], \u0027OEE\u0027\n\t        )\n\t\n\t        if row:\n\t            record \u003d row[0]\n\t            id \u003d record[\"id\"]\n\t            shift_pre \u003d record[\"Shift\"]\n\t            hour_pre \u003d record[\"Hour\"]\n\t            stop_time_pre \u003d int(record[\"StopTime\"])\n\t            downtime_pre \u003d int(record[\"DownTime\"])\n\t\n\t            # Handle minor loss reversal if hour changed\n\t            if hour_pre !\u003d hour and shift \u003d\u003d shift_pre and downtime_pre \u003d\u003d 0 and minor_loss \u003d\u003d 1:\n\t                updated_stop_time \u003d stop_time_pre + new_stop_time + 1  # +1 for current cycle\n\t                downtime_new \u003d -new_stop_time\n\t\n\t                # Update OEE_data to reflect the corrected minor loss transition\n\t                system.db.runPrepUpdate(\n\t                    \"UPDATE OEE_OEEData SET Downtime \u003d ?, Stoptime \u003d ?,Trigger_Type \u003d ? WHERE ID \u003d ?\",\n\t                    [downtime_new, updated_stop_time, \"DT_Timer\", id],\n\t                    \u0027OEE\u0027\n\t                )\n\t\n\t                # Reset minor loss flag\n\t                write_tags.append([\"[.]../Operating_Time/Minor_Loss\", 0])\n\t\n\t# Write back tag values if any changes occurred\n\tif write_tags:\n\t    system.tag.writeBlocking(\n\t        [tag_path for tag_path, _ in write_tags],\n\t        [value for _, value in write_tags]\n\t    )"
                        }
                      ],
                      "name": "DT_Timer",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "expr",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\ttags_to_read \u003d [\n\t\t\"[.]../../Machine_Tracking\",\n\t\t\"[.]Off_Tag\",\n\t\t\"[.]../Operating_Time/MC_Status_Act\",\n\t\t\"[.]DT_Timer\",\n\t\t\"[.]MC_Status_Trigger\",\n\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\"[.]HT_Timer\"\n\t]\n\ttags \u003d [tag.value for tag in system.tag.readBlocking(tags_to_read)]\n\tif tags[0] !\u003d 1:\n\t\treturn\n\tb \u003d tags[1]\n\ta \u003d int(tags[2])\n\tc \u003d tags[3]\n\te \u003d int(tags[4])\n\toff, run, ht \u003d tags[5], tags[6], tags[7]\n\tupdates \u003d []\n\tif b \u003d\u003d 1:\n\t\tsystem.tag.write(\"[.]../Operating_Time/Off_Timer\" , off + 1)\n\tif a \u003d\u003d 1 and b !\u003d 1:\n\t\tsystem.tag.write(\"[.]../Operating_Time/Run_Timer\", run + 1)\n\tif a \u003d\u003d 2 and b !\u003d 1:\n\t\tsystem.tag.write(\"[.]DT_Timer\", c + 1)\n\tif e \u003d\u003d 2 and b !\u003d 1:\n\t\tsystem.tag.write(\"[.]HT_Timer\", ht + 1)\n\t#if Write_Tag:\n\t\t#system.tag.writeBlocking([item[0] for item in Write_Tag], [item[1] for item in Write_Tag])\n\t\t\n\t\t\n\t"
                        }
                      ],
                      "expression": "getSecond(now())",
                      "name": "Seconds",
                      "executionMode": "FixedRate",
                      "executionRate": 500,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tI_Limit \u003d system.tag.read(\"[.]Idel_Limit\").value\n\tHT_Act \u003d currentValue.value\n\tif I_Limit\u003cHT_Act:\n\t\tsystem.tag.write(\"[.]../OEE/HT_Actual\",I_Limit)\n\telse:\n\t\tsystem.tag.write(\"[.]../OEE/HT_Actual\",HT_Act)"
                        }
                      ],
                      "sourceTagPath": "[.]../../OPC/From/LU_Time",
                      "name": "HT_Actual",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tif currentValue.quality.isGood() and currentValue.value !\u003d 0 and previousValue.quality.isGood():\n\t\tsystem.tag.write(\"[.]../Operating_Time/DT_Reason\",currentValue.value)"
                        }
                      ],
                      "sourceTagPath": "[.]../../OPC/From/BD_Reason",
                      "name": "Breakdown_ID",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "expr",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\ttags_to_read \u003d [\n\t\t\"[.]../Count/OEE_On\",                    # OEE_On\n\t\t\"[.]../../Machine_Tracking\",                 # MC_Stat\n\t\t\"[.]OEE_1hour\",               # Triger\n\t\t\"[.]MC_Status_Trigger\",   # Triger1\n\t\t\n\t\t\"[.]../../../../../../Business_Code\",  # BG_Id\n\t\t\"[.]../../../../../../Business_Name\",\n\t\t\"[.]../../../../../Plant_Code\",        # Plant\n\t\t\"[.]../../../../../Plant_Name\",\n\t\t\"[.]../../../../Cell_Code\",\n\t\t\"[.]../../../../Cell_Name\",\n\t\t\"[.]../../../Line_Code\",                # Line\n\t\t\"[.]../../../Line_Name\",\n\t\t\"[.]../../Machine_Code\",             # Machine\n\t\t\"[.]../../Machine_Name\",\n\t\t\n\t\t\"[.]../../OPC/From/Operator_Id\",                   # Operator\n\t\t\"[.]../../../../../Shift\",                                         # Shift\n\t\t\"[.]../../../../../Shift_Hour\",                                    # Shift_Hour\n\t\t\"[.]../../../../../../../Hour\",                                                                # Hour\n\t\t\"[.]../../../../../../../Date_hour\",                                                           # Datetime_Hour\n\t\t\n\t\t\"[.]../../OPC/From/Part_Id\",                    # Part_Id\n\t\t\"[.]../OEE/OEE_Start\",                  # Start_Time\n\t\t\"[.]../../../../../DateTime_OEE\",                                  # end_Time\n\t\t\n\t\t\"[.]../Operating_Time/Stop_Timer\",       # StopTime1\n\t\t\"[.]../Operating_Time/Run_Timer\",        # run_time\n\t\t\"[.]../Operating_Time/Off_Timer\",        # Off_time\n\t\t\n\t\t\"[.]../Count/G_Count\",               # Good_Count\n\t\t\"[.]../Count/R_Count\",                   # Rejection\n\t\t\"[.]Breakdown_ID\",    # Reason\n\t\t\"[.]../Operating_Time/Idle_Timer\",       # downTime1\n\t\t\n\t\t\"[.]../Operating_Time/Shift_Time\",             # Shifttime\n\t\t\"[.]../Operating_Time/DT_Type\",         # DT_type\n\t\t\"[.]../OEE/CT\",                 # idle_Cycle_time\n\t\t\n\t\t\"[.]../Count/CT_E\",                      # CTE\n\t\t\"[.]../Count/CT_H\",                      # CTH\n\t\t\"[.]../Count/CT_L\",                      # CTL\n\t\t\n\t\t\"[.]../Operating_Time/HT_Time\",   # Handling_time_tag\n\t\t\"[.]../Operating_Time/MC_Time\"     # Maching_time_tag\n\t]\n\t\n\tresult \u003d OEE.OEE_Triggers.log_oee_data_1Hou(tags_to_read)\n\t\n\tif result:\n\t\ttag_write_values \u003d result[:-1]         # First 13 values\n\t\tdt_type \u003d result[-1]                   # 14th value is DT_type\n\t\t\n\t\tresult_tags \u003d [\n\t\t\t\"[.]../OEE/OEE_Start\",\n\t\t\t\"[.]../Count/G_Count\",\n\t\t\t\"[.]../Count/R_Count\",\n\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\"[.]../Operating_Time/Stop_Timer\",\n\t\t\t\"[.]../Operating_Time/Idle_Timer\",\n\t\t\t\"[.]../Count/CT_E\",\n\t\t\t\"[.]../Count/CT_H\",\n\t\t\t\"[.]../Count/CT_L\",\n\t\t\t\"[.]../Operating_Time/HT_Time\",\n\t\t\t\"[.]../Operating_Time/MC_Time\",\n\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\"[.]../Operating_Time/Shift_Time\"\n\t\t]\n\t\t\n\t\tsystem.tag.writeBlocking(result_tags, tag_write_values)\n\t\t\n\t\tif dt_type \u003d\u003d 2:\n\t\t\tsystem.tag.writeBlocking(\n\t\t\t\t[\"[.]../Operating_Time/Minor_Loss\"],\n\t\t\t\t[1]\n\t\t\t)"
                        }
                      ],
                      "expression": "getHour24(now())",
                      "name": "OEE_1hour",
                      "tagType": "AtomicTag"
                    },
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "memory",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tsystem.tag.write(\"[.]../Count/Idel_Time\",currentValue.value)"
                        }
                      ],
                      "query": "Select Idle_Time from Idle_Time where Eg_ID \u003d 1 and Bg_ID \u003d 4 and Plant_Id \u003d 2 and Line_Id \u003d 1 and Machine_Id \u003d 1\r\n\r\n",
                      "name": "Idel_Limit",
                      "value": 300,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tMC_status \u003d system.tag.read(\"[.]../Operating_Time/MC_Status_Act\").value\n\tOFF_Tag \u003d system.tag.read(\"[.]Off_Tag\").value\n\tT_Stamp \u003d system.tag.read(\"[.]../../../../../DateTime_OEE\").value\n\tif MC_status \u003d\u003d 1 and OFF_Tag \u003d\u003d0:\n\t\tsystem.tag.write(\"[.]../Operating_Time/DT_Stop\",T_Stamp)\n\t\n\ttags_to_read \u003d [\n\t\t\"[.]../../../../../Shift\",\n\t\t\"[.]../Operating_Time/MC_Status_Act\",\n\t\t\"[.]Off_Tag\",\n\t\t\"[.]../../../../../DateTime_OEE\",\n\t\t\"[.]../../../../../../Business_Code\",\n\t\t\"[.]../../../../../../Business_Name\",\n\t\t\"[.]../../../../../Plant_Code\",\n\t\t\"[.]../../../../../Plant_Name\",\n\t\t\"[.]../../../../Cell_Code\",\n\t\t\"[.]../../../../Cell_Name\",\n\t\t\"[.]../../../Line_Code\",\n\t\t\"[.]../../../Line_Name\",\n\t\t\"[.]../../Machine_Code\",\n\t\t\"[.]../../Machine_Name\",\n\t\t\"[.]../../OPC/From/Operator_Id\",\n\t\t\"[.]../../../../../../../Hour\",\n\t\t\"[.]../../OPC/From/Part_Id\",\n\t\t\"[.]../Operating_Time/DT_Start\",\n\t\t\"[.]../Operating_Time/DT_Start_Act\",\n\t\t\"[.]Idel_Limit\",\n\t\t\"[.]../Operating_Time/DT_Stop\",\n\t\t\"[.]../../../../../../../Day\",\n\t\t\"[.]Breakdown_ID\"\n\t]\n\twrite_value \u003d OEE.Operating_Time.offtime(tags_to_read)\n\tif write_value:\n\t\tsystem.tag.writeBlocking([item[0] for item in write_value], [item[1] for item in write_value])"
                        }
                      ],
                      "name": "Off_Tag",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\t# Tag paths\n\tTrigger \u003d system.tag.read(\"[.]../Operating_Time/MC_Status_Act\").value\n\tTrigger1 \u003d system.tag.read(\"[.]Off_Tag\").value\n\tOEE_On \u003d system.tag.read(\"[.]../Count/OEE_On\").value\n\tMC_Track \u003d system.tag.read(\"[.]../../Machine_Tracking\").value\n\tT_stamp \u003d system.tag.read(\"[.]../../../../../DateTime_OEE\").value\n\t\n\t# Write OEE_On \u003d 1 if the condition is met\n\tif (Trigger \u003d\u003d 2 or Trigger1 \u003d\u003d 1) and OEE_On \u003d\u003d 1 and MC_Track \u003d\u003d 1:\n\t    system.tag.write(\"[.]../Operating_Time/DT_Stop\", T_stamp)\n\t\n\t# Tags to read\n\ttags_to_read \u003d [\n\t    \"[.]../Count/OEE_On\",\n\t    \"[.]../../Machine_Tracking\",\n\t    \"[.]../Operating_Time/MC_Status_Act\",\n\t    \"[.]Off_Tag\",\n\t    \"[.]../../../../../../Business_Code\",\n\t    \"[.]../../../../../../Business_Name\",\n\t    \"[.]../../../../../Plant_Code\",\n\t    \"[.]../../../../../Plant_Name\",\n\t    \"[.]../../../../Cell_Code\",\n\t    \"[.]../../../../Cell_Name\",\n\t    \"[.]../../../Line_Code\",\n\t    \"[.]../../../Line_Name\",\n\t    \"[.]../../Machine_Code\",\n\t    \"[.]../../Machine_Name\",\n\t    \"[.]../../OPC/From/Operator_Id\",\n\t    \"[.]../../../../../Shift_dup\",\n\t    \"[.]../../../../../Shift_Hour_Dup\",\n\t    \"[.]../../../../../Shift_Id\",\n\t    \"[.]../../../../../../../Hour\",\n\t    \"[.]../../../../../../../Date_hour\",\n\t    \"[.]../../OPC/From/Part_Id\",\n\t    \"[.]../OEE/OEE_Start\",\n\t    \"[.]../../../../../DateTime_OEE\",\n\t    \"[.]../Operating_Time/Stop_Timer\",\n\t    \"[.]../Operating_Time/Run_Timer\",\n\t    \"[.]../Operating_Time/Off_Timer\",\n\t    \"[.]../Count/G_Count\",\n\t    \"[.]../Count/R_Count\",\n\t    \"[.]../Operating_Time/DT_Reason\",\n\t    \"[.]../Operating_Time/Idle_Timer\",\n\t    \"[.]../Operating_Time/Shift_Time\",\n\t    \"[.]../Operating_Time/DT_Type\",\n\t    \"[.]../OEE/CT\",\n\t    \"[.]../Count/CT_E\",\n\t    \"[.]../Count/CT_H\",\n\t    \"[.]../Count/CT_L\",\n\t    \"[.]HT_Timer\",\n\t    \"[.]../Operating_Time/MC_Time\",\n\t    \"[.]../Operating_Time/DT_Start\",\n\t    \"[.]../Operating_Time/DT_Start_Act\",\n\t    \"[.]../Operating_Time/DT_Stop\",\n\t    \"[.]Idel_Limit\",\n\t    \"[.]Breakdown_ID\",\n\t    \"[.]../../../../../DateTime_OEE\"  # currentTimestamp\n\t]\n\t\n\tReturn_values \u003d OEE.OEE_Triggers.log_oee_data_Shift(tags_to_read)\n\t\n\tsystem.tag.write(\"[.]../../OPC/To/Shift_Reset\",currentValue.value)\n\tif Return_values:\n\t    (\n\t        Trigger, Trigger1, OEE_On, MC_Stat,\n\t        actualDowntime, SP_DATE_TIME, Date_OEE,\n\t        Shift_Plan, end_Time, oeeTimestamp, currentTimestamp\n\t    ) \u003d Return_values\n\t    if (Trigger \u003d\u003d 2 or Trigger1 \u003d\u003d 1) and OEE_On \u003d\u003d 1 and MC_Stat \u003d\u003d 1:\n\t        tags_to_write \u003d [\n\t            \"[.]../OEE/OEE_Start\",\n\t            \"[.]../Count/G_Count\",\n\t            \"[.]../Count/R_Count\",\n\t            \"[.]../Operating_Time/Run_Timer\",\n\t            \"[.]../Operating_Time/Stop_Timer\",\n\t            \"[.]../Operating_Time/Idle_Timer\",\n\t            \"[.]../Count/CT_E\",\n\t            \"[.]../Count/CT_H\",\n\t            \"[.]../Count/CT_L\",\n\t            \"[.]HT_Timer\",\n\t            \"[.]../Operating_Time/MC_Time\",\n\t            \"[.]../Operating_Time/Off_Timer\",\n\t            \"[.]../Operating_Time/Down_Time\",\n\t            \"[.]../Operating_Time/DT_Start\",\n\t            \"[.]../Operating_Time/DT_Start_Act\"\n\t        ]\n\t        values_to_write \u003d [end_Time, 0, 0, 0, 0, 0,0, 0, 0,0, 0, 0,0, oeeTimestamp, currentTimestamp]\n\t        system.tag.writeBlocking(tags_to_write, values_to_write)\n\t    if SP_DATE_TIME \u003d\u003d Date_OEE and Shift_Plan \u003e 0:\n\t        system.tag.write(\"[.]../Count/OEE_On\", 0)\n\t        system.tag.write(\"[.]../Operating_Time/Shift_Time\", 0)\n\t    else:\n\t        system.tag.write(\"[.]../OEE/OEE_Start\", oeeTimestamp)\n\t        system.tag.write(\"[.]../Operating_Time/DT_Start\", oeeTimestamp)\n\t        system.tag.write(\"[.]../Operating_Time/DT_Start_Act\", currentTimestamp)\n\t        system.tag.write(\"[.]../Count/OEE_On\", 1)"
                        }
                      ],
                      "sourceTagPath": "[.]../../../../../Shift_Trigger",
                      "name": "OEE_Shift",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "expr",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tif currentValue.value \u003d\u003d 1:\n\t\ttags_to_read \u003d [\n\t\t\t\"[.]../../../../../../Business_Code\",\n\t\t\t\"[.]../../../../../../Business_Name\",\n\t\t\t\"[.]../../../../../Plant_Code\",\n\t\t\t\"[.]../../../../../Plant_Name\",\n\t\t\t\"[.]../../../../Cell_Code\",\n\t\t\t\"[.]../../../../Cell_Name\",\n\t\t\t\"[.]../../../Line_Code\",\n\t\t\t\"[.]../../../Line_Name\",\n\t\t\t\"[.]../../Machine_Code\",\n\t\t\t\"[.]../../Machine_Name\",\n\t\t\t\"[.]../../../../../Shift\",\n\t\t\t\"[.]../../../../../Shift_Hour\",\n\t\t\t\"[.]../../../../../DateTime_OEE\",\n\t\t\t\"[.]../Count/OEE_On\",\n\t\t\t\"[.]../Operating_Time/MC_Status_Act\",\n\t\t\t\"[.]../../OPC/From/Operator_Id\",\n\t\t\t\"[.]../../../../../../../Hour\",\n\t\t\t\"[.]../../../../../../../Date_hour\",\n\t\t\t\"[.]../../OPC/From/Part_Id\",\n\t\t\t\"[.]../OEE/OEE_Start\",\n\t\t\t\"[.]../../../../../DateTime_OEE\",\n\t\t\t\"[.]../Operating_Time/Stop_Timer\",\n\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\"[.]../Count/G_Count\",\n\t\t\t\"[.]../Count/R_Count\",\n\t\t\t\"[.]Breakdown_ID\",\n\t\t\t\"[.]../Operating_Time/Idle_Timer\",\n\t\t\t\"[.]../Operating_Time/Shift_Time\",\n\t\t\t\"[.]../OEE/CT\",\n\t\t\t\"[.]../Count/CT_E\",\n\t\t\t\"[.]../Count/CT_H\",\n\t\t\t\"[.]../Count/CT_L\",\n\t\t\t\"[.]../Operating_Time/HT_Time\",\n\t\t\t\"[.]../Operating_Time/MC_Time\"\n\t\t]\n\t\t# Call the function\n\t\tresult_values \u003d OEE.OEE_Triggers.log_oee_data_15Min(tags_to_read)\n\t\t\n\t\t# If the function returned valid data, write to tags\n\t\tif result_values:\n\t\t\treset_tags \u003d [\n\t\t\t\t\"[.]../OEE/OEE_Start\",\n\t\t\t\t\"[.]../Count/G_Count\",\n\t\t\t\t\"[.]../Count/R_Count\",\n\t\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Stop_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Idle_Timer\",\n\t\t\t\t\"[.]../Count/CT_E\",\n\t\t\t\t\"[.]../Count/CT_H\",\n\t\t\t\t\"[.]../Count/CT_L\",\n\t\t\t\t\"[.]../Operating_Time/HT_Time\",\n\t\t\t\t\"[.]../Operating_Time/MC_Time\",\n\t\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Shift_Time\",\n\t\t\t\t\"[.]../../OPC/To/Availability\",\n\t\t\t\t\"[.]../../OPC/To/Quality\",\n\t\t\t\t\"[.]../../OPC/To/Performance\",\n\t\t\t\t\"[.]../../OPC/To/OEE\"           \n\t\t\t]\n\t\t\t\n\t\t\tsystem.tag.writeBlocking(reset_tags, result_values)"
                        }
                      ],
                      "expression": "getMinute(now()) % 15 \u003d 0 \u0026\u0026 getSecond(now()) \u003d 0",
                      "name": "OEE_15Mins",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\ttags_to_read \u003d [\n\t    \"[.]../Count/OEE_On\",\n\t    \"[.]MC_Status_Trigger\",\n\t    \"[.]../Count/Part_Per_Cycle\",\n\t    \"[.]../Count/G_Count\",\n\t    \"[.]../../OPC/From/MT_Actual\",\n\t    \"[.]../OEE/HT_Actual\",\n\t    \"[.]../Operating_Time/MC_Time\",\n\t    \"[.]../Operating_Time/HT_Time\",\n\t    \"[.]../OEE/CT_Actual\",\n\t    \"[.]../OEE/CT\",\n\t    \"[.]../Count/CT_H\",\n\t    \"[.]../Count/CT_L\",\n\t    \"[.]../Count/CT_E\",\n\t    \"[.]../../../../../../Business_Code\",\n\t    \"[.]../../../../../../Business_Name\",\n\t    \"[.]../../../../../Plant_Code\",\n\t    \"[.]../../../../../Plant_Name\",\n\t    \"[.]../../../../Cell_Code\",\n\t    \"[.]../../../../Cell_Name\",\n\t    \"[.]../../../Line_Code\",\n\t    \"[.]../../../Line_Name\",\n\t    \"[.]../../Machine_Code\",\n\t    \"[.]../../Machine_Name\",\n\t    \"[.]../../../../../Shift\",\n\t    \"[.]../../../../../../../Hour\",\n\t    \"[.]../../OPC/From/Part_Id\",\n\t    \"[.]../../OPC/From/Operator_Id\",\n\t    \"[.]Shot_Count\",\n\t    \"[.]../OEE/Cum_CT\",\n\t    \"[.]../../../../../DateTime_OEE\",\n\t    \"[.]../../../../../../Rejection\",\n\t    \"[.]Idel_Limit\"\n\t]\n\t\n\t#OEE_On, MC_Status, Cycle_partcount, Good_Count, HT_Actual, MT_Actual, Handling_time, Maching_time, Cycle_time_act, CycleTime, CTH, CTL, CTE,\n\t#Enterprise_No, BG_No, Plant_No, Line_No, Machine_No, Shift, Hour, Operator, Part_ID, DateTime_OEE, Rejection\n\t\n\tresult \u003d OEE.P_Count.Shot_Count(tags_to_read)\n\t\n\tif result:\n\t    good_count, ct_actual, ht_final, mt_final, cth, ctl, cte \u003d result\n\t\n\t    system.tag.writeBlocking([\n\t        \"[.]../Count/G_Count\",\n\t        \"[.]../OEE/CT_Actual\",\n\t        \"[.]../Operating_Time/HT_Time\",\n\t        \"[.]../Operating_Time/MC_Time\",\n\t        \"[.]../Count/CT_H\",\n\t        \"[.]../Count/CT_L\",\n\t        \"[.]../Count/CT_E\",\n\t    ], [good_count, ct_actual, ht_final, mt_final, cth, ctl, cte])"
                        }
                      ],
                      "sourceTagPath": "[.]../../OPC/From/Good_Count",
                      "name": "Shot_Count",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tif currentValue.quality.isGood() and currentValue.value !\u003d 0 and previousValue.quality.isGood():\n\t\tsystem.tag.write(\"[.]../Count/Rejection_Act\",currentValue.value)"
                        }
                      ],
                      "sourceTagPath": "[.]../../OPC/From/Rejection_Reason",
                      "name": "Rejection_Id",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "qualityChanged",
                          "script": "\tMS_Qual \u003d currentValue.quality\n\tif currentValue.quality.isGood():\n\t\tsystem.tag.write(\"[.]Off_Tag\",0)\n\telse:\n\t\tsystem.tag.write(\"[.]Off_Tag\",1)"
                        },
                        {
                          "eventid": "valueChanged",
                          "script": "\tMC_Status \u003d currentValue.value\n\t#system.tag.write(\"[default]Tags/OEE/Enterprise/BG4/Plant2/Line1/Machine1/Operating_time/Mc_status\",a)\n\tsystem.tag.write(\"[.]../Operating_Time/MC_Status_Act\",MC_Status)\n\tsystem.tag.write(\"[.]HT_Timer\",0)\n\tif MC_Status \u003d\u003d 1:\n\t\tsystem.tag.write(\"[.]../Operating_Time/MC_Status_Act\",1)\n\t\tsystem.tag.write(\"[.]HT_Timer\",0)\n\t\t#system.tag.write(\"[default]Tags/OEE/Enterprise/BG4/Plant2/Line1/Machine1/Operating_time/Mc_status_Act 1\",1)\n\t\t\t\n\t"
                        }
                      ],
                      "sourceTagPath": "[.]../../OPC/From/Machine_Status",
                      "name": "MC_Status_Trigger",
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "Operating_Time",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "memory",
                      "name": "DT_Type",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tOEE_ON \u003d system.tag.read(\"[.]../Count/OEE_On\").value\n\tMACHINE_Tracking \u003d system.tag.read(\"[.]../../Machine_Tracking\").value\n\tMachine_Status \u003d system.tag.read(\"[.]MC_Status_Act\").value\n\tT_Stamp \u003d system.tag.read(\"[.]../../../../DateTime_OEE\").value\n\tif OEE_ON \u003d\u003d 1 and MACHINE_Tracking \u003d\u003d 1 and Machine_Status \u003d\u003d 1:\n\t\tsystem.tag.write(\"[.]DT_Stop\",T_Stamp)\n\ttags_to_read \u003d [\n        \"[.]../Count/OEE_On\",\n        \"[.]../../Machine_Tracking\",\n        \"[.]MC_Status_Act\",\n        \"[.]../Triggers/Off_Tag\",\n        \"[.]../../../../../DateTime_OEE\",\n        \"[.]DT_Start\",\n        \"[.]DT_Start_Act\",\n        \"[.]../../../../../../Business_Code\",\n        \"[.]../../../../../../Business_Name\",\n        \"[.]../../../../../Plant_Code\",\n        \"[.]../../../../../Plant_Name\",\n        \"[.]../../../../Cell_Code\",\n        \"[.]../../../../Cell_Name\",\n        \"[.]../../../Line_Code\",\n        \"[.]../../../Line_Name\",\n        \"[.]../../Machine_Code\",\n        \"[.]../../Machine_Name\",\n        \"[.]../../OPC/From/Operator_Id\",\n        \"[.]../../../../../Shift\",\n        \"[.]../../../../../Shift_Hour\",\n        \"[.]../../../../../../../Hour\",\n        \"[.]../../../../../../../Date_hour\",\n        \"[.]Shift_Time\",\n        \"[.]../OEE/OEE_Start\",\n        \"[.]Idle_Timer\",\n        \"[.]Stop_Timer\",\n        \"[.]Run_Timer\",\n        \"[.]Off_Timer\",\n        \"[.]../Count/G_Count\",\n        \"[.]../Count/R_Count\",\n        \"[.]../../OPC/From/Part_Id\",\n        \"[.]DT_Stop\",\n        \"[.]../Triggers/Idel_Limit\",\n        \"[.]DT_Reason\",\n        \"[.]../OEE/CT\",\n        \"[.]../Count/CT_H\",\n        \"[.]../Count/CT_E\",\n        \"[.]../Count/CT_L\",\n        \"[.]HT_Time\",\n        \"[.]MC_Time\",\n        \"[.]../../../../../DateTime_OEE\"\n    ]\n    \n\tOEE.MC_Status_Act.MC_Status_Act(tags_to_read)\n    "
                        }
                      ],
                      "sourceTagPath": "[.]../../OPC/From/Machine_Status",
                      "name": "MC_Status_Act",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "DT_Reason",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Down_Time",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "DateTime",
                      "name": "DT_Start",
                      "formatString": "yyyy-MM-dd h:mm:ss aa",
                      "value": 1735670220000,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "DateTime",
                      "name": "DT_Start_Act",
                      "formatString": "yyyy-MM-dd h:mm:ss aa",
                      "value": 1735670220000,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Idle_Timer",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Reason_UD",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Run_Timer",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Minor_Loss",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "MC_Time",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "DateTime",
                      "name": "DT_Stop",
                      "formatString": "yyyy-MM-dd h:mm:ss aa",
                      "value": 1735670220000,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Stop_Timer",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Off_Timer",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "Int4",
                      "name": "Shift_Time",
                      "formatString": "#,##0.##",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "HT_Time",
                      "value": 0,
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "OEE",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "memory",
                      "name": "HT_Actual",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "db",
                      "query": "select isnull((Select CycleTime from OEE_ProductMaster where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Cell_ID \u003d {[.]../../../../Cell_Code} and Line_ID \u003d {[.]../../../Line_Code} and Machine_Code \u003d {[.]../../Machine_Code} and Product_ID \u003d {[.]../../OPC/From/Part_Id}),0)",
                      "name": "CT",
                      "tagType": "AtomicTag"
                    },
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "db",
                      "dataType": "String",
                      "query": "Select isnull((Select Product_Name from OEE_ProductMaster where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Cell_ID \u003d {[.]../../../../Cell_Code} and Line_ID \u003d {[.]../../../Line_Code} and Machine_Code \u003d {[.]../../Machine_Code} and Product_ID \u003d {[.]../../OPC/From/Part_Id}),\u0027No Part Model in Master\u0027)",
                      "name": "Part_Model",
                      "tagType": "AtomicTag"
                    },
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "db",
                      "query": "Select isnull((Select Handling_Time from OEE_ProductMaster where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Cell_ID \u003d {[.]../../../../Cell_Code} and Line_ID \u003d {[.]../../../Line_Code} and Machine_Code \u003d {[.]../../Machine_Code} and Product_ID \u003d {[.]../../OPC/From/Part_Id}),0)",
                      "name": "HT_Std",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "sourceTagPath": "0",
                      "name": "PS_Planner",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "DateTime",
                      "name": "OEE_Stop",
                      "formatString": "yyyy-MM-dd h:mm:ss aa",
                      "value": 1735670220000,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "DateTime",
                      "name": "OEE_Start",
                      "formatString": "yyyy-MM-dd h:mm:ss aa",
                      "value": 1735670220000,
                      "tagType": "AtomicTag"
                    },
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "db",
                      "query": "select isnull((Select CycleTime_Cumulative from OEE_ProductMaster where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Cell_ID \u003d {[.]../../../../Cell_Code} and Line_ID \u003d {[.]../../../Line_Code} and Machine_Code \u003d {[.]../../Machine_Code} and Product_ID \u003d {[.]../../OPC/From/Part_Id}),0)",
                      "name": "Cum_CT",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "CT_Actual",
                      "value": 0,
                      "tagType": "AtomicTag"
                    }
                  ]
                }
              ]
            },
            {
              "valueSource": "db",
              "dataType": "String",
              "datasource": "Master",
              "query": "Select distinct Machine_name from STD_Master where Business_ID \u003d {[.]../../../../Business_Code} and Plant_ID \u003d {[.]../../../Plant_Code} and Cell_ID \u003d {[.]../../Cell_Code} and Line_ID \u003d {[.]../Line_Code} and Machine_Code \u003d {[.]Machine_Code} and Status \u003d \u0027Live\u0027",
              "name": "Machine_Name",
              "value": "0",
              "tagType": "AtomicTag"
            },
            {
              "name": "OPC",
              "tagType": "Folder",
              "tags": [
                {
                  "name": "From",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "ns\u003d1;s\u003d[{Machine_Name}][Diagnostics]/Connected"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "GOC_Com",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I12.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Operator_Id",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I10.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "LU_Time",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I2.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Good_Count",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I26.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Rejection_Reason",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I8.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "MT_Actual",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I4.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Bad_Count",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I6.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "BD_Reason",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I0.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Machine_Status",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I14.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Part_Id",
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "To",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I22.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Quality",
                      "tagType": "AtomicTag",
                      "enabled": false
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I20.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Performance",
                      "tagType": "AtomicTag",
                      "enabled": false
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I28.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "IW_Time",
                      "tagType": "AtomicTag",
                      "enabled": false
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I16.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "OEE",
                      "tagType": "AtomicTag",
                      "enabled": false
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I24.0"
                      },
                      "valueSource": "opc",
                      "name": "Shift_Reset",
                      "tagType": "AtomicTag",
                      "enabled": false,
                      "opcServer": "Ignition OPC UA Server"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I18.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Availability",
                      "tagType": "AtomicTag",
                      "enabled": false
                    }
                  ]
                }
              ]
            },
            {
              "value": {
                "bindType": "parameter",
                "binding": "{Machine_Code}"
              },
              "valueSource": "memory",
              "name": "Machine_Code",
              "tagType": "AtomicTag"
            },
            {
              "opcItemPath": {
                "bindType": "parameter",
                "binding": "ns\u003d1;s\u003d[{Machine_Name}][Diagnostics]/Connected"
              },
              "opcServer": {
                "bindType": "parameter",
                "binding": "{Gateway}"
              },
              "valueSource": "opc",
              "name": "Machine_Communication",
              "tagType": "AtomicTag"
            }
          ]
        },
        {
          "name": "RSSL",
          "tagType": "Folder",
          "tags": [
            {
              "name": "P1",
              "tagType": "Folder",
              "tags": [
                {
                  "name": "Machine_old",
                  "typeId": "",
                  "parameters": {
                    "Machine_ID": {
                      "dataType": "String"
                    },
                    "Machine_Path": {
                      "dataType": "String",
                      "value": ""
                    },
                    "DB": {
                      "dataType": "String"
                    },
                    "Gateway": {
                      "dataType": "String"
                    },
                    "Machine_Code": {
                      "dataType": "Integer"
                    }
                  },
                  "tagType": "UdtType",
                  "tags": [
                    {
                      "value": {
                        "bindType": "parameter",
                        "binding": "{Machine_Code}"
                      },
                      "valueSource": "memory",
                      "name": "Machine_Code",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003d{Machine_Path}_Connection_Status"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Machine_Communication",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "OPC",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "From",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003d{Machine_Path}_Connection_Status"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "memory",
                              "name": "GOC_Com",
                              "value": 1,
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dMachine_Breakdown_Reason_{Machine_ID}"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "BD_Reason",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dL_and_U_{Machine_ID}"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "LU_Time",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dRejection_Count_{Machine_ID}"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "Bad_Count",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dRejection_Reason_{Machine_ID}"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "Rejection_Reason",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dOperator_ID_{Machine_ID}"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "Operator_Id",
                              "value": 9999,
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dMachine_Cycle_Time_{Machine_ID}"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "MT_Actual",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dMachine_Status_{Machine_ID}"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "Machine_Status",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dPart_Model_{Machine_ID}"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "Part_Id",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dProduct_Count_{Machine_ID}"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "Good_Count",
                              "tagType": "AtomicTag"
                            }
                          ]
                        },
                        {
                          "name": "To",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/AVA_{Machine_ID}"
                              },
                              "valueSource": "memory",
                              "name": "Availability",
                              "tagType": "AtomicTag",
                              "opcServer": "Ignition OPC UA Server"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dCURRENT_SHIFT_{Machine_ID}"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "Shift_Reset",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/QUAL_{Machine_ID}"
                              },
                              "valueSource": "memory",
                              "name": "Quality",
                              "tagType": "AtomicTag",
                              "opcServer": "Ignition OPC UA Server"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/OEE_{Machine_ID}"
                              },
                              "valueSource": "memory",
                              "name": "OEE",
                              "tagType": "AtomicTag",
                              "opcServer": "Ignition OPC UA Server"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/PER_{Machine_ID}"
                              },
                              "valueSource": "memory",
                              "name": "Performance",
                              "tagType": "AtomicTag",
                              "opcServer": "Ignition OPC UA Server"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/IWT_{Machine_ID}"
                              },
                              "valueSource": "memory",
                              "name": "IW_Time",
                              "tagType": "AtomicTag",
                              "opcServer": "Ignition OPC UA Server"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "valueSource": "db",
                      "datasource": "OEE_NEW",
                      "query": "SELECT Data_Tracking\r\nFROM [OEE_NEW].[dbo].[M_OVERALL_MASTER] \r\nWHERE Business_ID \u003d {[.]../../../../Business_Code}\r\n  AND Plant_ID\u003d {[.]../../../Plant_Code}\r\n  AND Cell_ID \u003d {[.]../../Cell_Code}\r\n  AND Line_ID \u003d {[.]../Line_Code}\r\n  AND Machine_Code \u003d {[.]Machine_Code}",
                      "name": "Machine_Tracking",
                      "executionMode": "FixedRate",
                      "executionRate": 15000,
                      "value": 1,
                      "tagType": "AtomicTag"
                    },
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "db",
                      "dataType": "String",
                      "query": "SELECT DISTINCT Machine_Name from M_OVERALL_MASTER where Machine_Code \u003d {[.]Machine_Code}",
                      "name": "Machine_Name",
                      "value": "0",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "Calculation",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "Count",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "valueSource": "memory",
                              "name": "Rejection_Act",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "R_Count",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "CT_H",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "CT_L",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "CT_E",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "datasource": {
                                "bindType": "parameter",
                                "binding": "{DB}"
                              },
                              "valueSource": "db",
                              "query": "Select isnull((Select PartPerCount from OEE_ProductMaster where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Cell_ID \u003d {[.]../../../../Cell_Code} and Line_ID \u003d {[.]../../../Line_Code} and Machine_Code \u003d {[.]../../Machine_Code} and Product_ID \u003d {[.]../../OPC/From/Part_Id}),0)",
                              "name": "Part_Per_Cycle",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "G_Count",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Idel_Time",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "OEE_On",
                              "value": 1,
                              "tagType": "AtomicTag"
                            }
                          ]
                        },
                        {
                          "name": "Triggers",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "valueSource": "memory",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tHT_Actual \u003d system.tag.read(\"[.]HT_Timer\").value\n\tHT_Standard \u003d int(system.tag.read(\"[.]../OEE/HT_Std\").value)\n\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif HT_Standard !\u003d 0:\n\t\tif (HT_Actual \u003e\u003d HT_Standard) and OEE_On\u003d\u003d1:\n\t\t\tsystem.tag.write(\"[.]../Operating_Time/MC_Status_Act\",2)\n\t\n"
                                }
                              ],
                              "name": "HT_Timer",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "db",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_ProdOff \u003d system.tag.read(\"[.]PS_Planner\").value\t\t\t\n\t\n\tif OEE_ProdOff !\u003d 0:\n\t\t# If OEE_ProdOff is not 0, reset certain tags\n\t\tsystem.tag.write(\"[.]../Count/OEE_On\", 0)\n\t\t#system.tag.write(\"[default]Tags/OEE/Enterprise/BG4/Plant1/Line1/Machine1/Operating_time/TST\", 0)\n\telif OEE_ProdOff \u003d\u003d 0:\n\t\t# If OEE_ProdOff is 0, update certain tags\n\t\tsystem.tag.write(\"[.]../Count/OEE_On\", 1)\n\t\t\t"
                                }
                              ],
                              "datasource": "OEE_NEW",
                              "query": "select isnull ((\r\nSELECT \r\nCASE \r\nWHEN {[.]../../../../../Shift_Id} \u003d 1 THEN shift_1 \r\nWHEN {[.]../../../../../Shift_Id} \u003d 2 THEN shift_2 \r\nWHEN {[.]../../../../../Shift_Id} \u003d 3 THEN shift_3 \r\nEND AS Shift_Status FROM [OEE_NEW].[dbo].[PRODUCTION_OFF_SCHEDULE] \r\nWHERE business_id \u003d {[.]../../../../../../Business_Code} \r\nAND plant_id \u003d {[.]../../../../../Plant_Code} \r\nAND cell_id \u003d {[.]../../../../Cell_Code} \r\nAND line_id \u003d {[.]../../../Line_Code} \r\nAND machine_code \u003d {[.]../../Machine_Code} \r\nAND CAST(date_scheduled AS DATE) \u003d \u0027{[.]../../../../../DateTime_OEE}\u0027\r\n), 0)",
                              "name": "PS_Planner",
                              "executionMode": "FixedRate",
                              "executionRate": 15000,
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tM_Tracking\u003d system.tag.read(\"[.]../../Machine_Tracking\").value\n\tif OEE_On\u003d\u003d1 and M_Tracking\u003d\u003d1:\n\t\ttags_to_read \u003d [\n\t\t    \"[.]../Count/OEE_On\",\n\t\t    \"[.]MC_Status_Trigger\",\n\t\t    \"[.]../Count/Part_Per_Cycle\",\n\t\t    \"[.]../Count/G_Count\",\n\t\t    \"[.]../../OPC/From/MT_Actual\",\n\t\t    \"[.]../OEE/HT_Actual\",\n\t\t    \"[.]../Operating_Time/MC_Time\",\n\t\t    \"[.]../Operating_Time/HT_Time\",\n\t\t    \"[.]../OEE/CT_Actual\",\n\t\t    \"[.]../OEE/CT\",\n\t\t    \"[.]../Count/CT_H\",\n\t\t    \"[.]../Count/CT_L\",\n\t\t    \"[.]../Count/CT_E\",\n\t\t    \"[.]../../../../../../Business_Code\",\n\t\t    \"[.]../../../../../../Business_Name\",\n\t\t    \"[.]../../../../../Plant_Code\",\n\t\t    \"[.]../../../../../Plant_Name\",\n\t\t    \"[.]../../../../Cell_Code\",\n\t\t    \"[.]../../../../Cell_Name\",\n\t\t    \"[.]../../../Line_Code\",\n\t\t    \"[.]../../../Line_Name\",\n\t\t    \"[.]../../Machine_Code\",\n\t\t    \"[.]../../Machine_Name\",\n\t\t    \"[.]../../../../../Shift\",\n\t\t    \"[.]../../../../../../../Hour\",\n\t\t    \"[.]../../OPC/From/Part_Id\",\n\t\t    \"[.]../../OPC/From/Operator_Id\",\n\t\t    \"[.]Shot_Count\",\n\t\t    \"[.]../OEE/Cum_CT\",\n\t\t    \"[.]../../../../../DateTime_OEE\",\n\t\t    \"[.]../../../../../../Rejection\",\n\t\t    \"[.]Idel_Limit\"\n\t\t \n\t\t]\n\t\t\n\t\t#OEE_On, MC_Status, Cycle_partcount, Good_Count, HT_Actual, MT_Actual, Handling_time, Maching_time, Cycle_time_act, CycleTime, CTH, CTL, CTE,\n\t\t#Enterprise_No, BG_No, Plant_No, Line_No, Machine_No, Shift, Hour, Operator, Part_ID, DateTime_OEE, Rejection\n\t\t\n\t\tresult \u003d OEE.P_Count.Shot_Count(tags_to_read)\n\t\tif result:\n\t\t    good_count, ct_actual, ht_final, mt_final, cth, ctl, cte \u003d result\n\t\t\n\t\t    system.tag.writeBlocking([\n\t\t        \"[.]../Count/G_Count\",\n\t\t        \"[.]../OEE/CT_Actual\",\n\t\t        \"[.]../Operating_Time/HT_Time\",\n\t\t        \"[.]../Operating_Time/MC_Time\",\n\t\t        \"[.]../Count/CT_H\",\n\t\t        \"[.]../Count/CT_L\",\n\t\t        \"[.]../Count/CT_E\",\n\t\t    ], [good_count, ct_actual, ht_final, mt_final, cth, ctl, cte])"
                                }
                              ],
                              "sourceTagPath": "[.]../../OPC/From/Good_Count",
                              "name": "Shot_Count",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tM_Tracking\u003d system.tag.read(\"[.]../../Machine_Tracking\").value\n\tif OEE_On\u003d\u003d1 and M_Tracking\u003d\u003d1:\n\t\ttags_to_read \u003d [\n\t\t    \"[.]../Count/OEE_On\",\n\t\t    \"[.]MC_Status_Trigger\",\n\t\t    \"[.]../Count/R_Count\",\n\t\t    \"[.]../Count/Part_Per_Cycle\",\n\t\t    \"[.]../../OPC/From/MT_Actual\",\n\t\t    \"[.]../OEE/HT_Actual\",\n\t\t    \"[.]../Operating_Time/MC_Time\",\n\t\t    \"[.]../Operating_Time/HT_Time\",\n\t\t    \"[.]../OEE/Cum_CT\",\n\t\t    \"[.]../Count/CT_H\",\n\t\t    \"[.]../Count/CT_L\",\n\t\t    \"[.]../Count/CT_E\",\n\t\t    \"[.]../../../../../../Business_Code\",\n\t\t    \"[.]../../../../../../Business_Name\",\n\t\t    \"[.]../../../../../Plant_Code\",\n\t\t    \"[.]../../../../../Plant_Name\",\n\t\t    \"[.]../../../../Cell_Code\",\n\t\t    \"[.]../../../../Cell_Name\",\n\t\t    \"[.]../../../Line_Code\",\n\t\t    \"[.]../../../Line_Name\",\n\t\t    \"[.]../../Machine_Code\",\n\t\t    \"[.]../../Machine_Name\",\n\t\t    \"[.]../../../../../Shift\",\n\t\t    \"[.]../../../../../../../Hour\",\n\t\t    \"[.]../../OPC/From/Part_Id\",\n\t\t    \"[.]../../OPC/From/Operator_Id\",\n\t\t    \"[.]../../../../../DateTime_OEE\",\n\t\t    \"[.]../Count/Rejection_Act\",\n\t\t    \"[.]Idel_Limit\"\n\t\t \n\t\t]\n\t\t\n\t\t#OEE_On, MC_Status, Cycle_partcount, Good_Count, HT_Actual, MT_Actual, Handling_time, Maching_time, Cycle_time_act, CycleTime, CTH, CTL, CTE,\n\t\t#Enterprise_No, BG_No, Plant_No, Line_No, Machine_No, Shift, Hour, Operator, Part_ID, DateTime_OEE, Rejection\n\t\t\n\t\tresult \u003d OEE.P_Count.Rejection_Count(tags_to_read)\n\t\tif result:\n\t\t    rejection_count, ct_actual, ht_final, mt_final, cth, ctl, cte, R_id \u003d result\n\t\t\n\t\t    system.tag.writeBlocking([\n\t\t        \"[.]../Count/R_Count\",\n\t\t        \"[.]../OEE/CT_Actual\",\n\t\t        \"[.]../Operating_Time/HT_Time\",\n\t\t        \"[.]../Operating_Time/MC_Time\",\n\t\t        \"[.]../Count/CT_H\",\n\t\t        \"[.]../Count/CT_L\",\n\t\t        \"[.]../Count/CT_E\",\n\t\t        \"[.]../Count/Rejection_Act\"\n\t\t    ], [rejection_count, ct_actual, ht_final, mt_final, cth, ctl, cte, R_id])"
                                }
                              ],
                              "sourceTagPath": "[.]../../OPC/From/Bad_Count",
                              "name": "Rejection_Count",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "expr",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tM_Tracking\u003d system.tag.read(\"[.]../../Machine_Tracking\").value\n\tif OEE_On\u003d\u003d1 and M_Tracking\u003d\u003d1:\n\t\ttags_to_read \u003d [\n\t\t\t\"[.]../Count/OEE_On\",                    # OEE_On\n\t\t\t\"[.]../../Machine_Tracking\",                 # MC_Stat\n\t\t\t\"[.]OEE_1hour\",               # Triger\n\t\t\t\"[.]MC_Status_Trigger\",   # Triger1\n\t\t\t\n\t\t\t\"[.]../../../../../../Business_Code\",  # BG_Id\n\t\t\t\"[.]../../../../../../Business_Name\",\n\t\t\t\"[.]../../../../../Plant_Code\",        # Plant\n\t\t\t\"[.]../../../../../Plant_Name\",\n\t\t\t\"[.]../../../../Cell_Code\",\n\t\t\t\"[.]../../../../Cell_Name\",\n\t\t\t\"[.]../../../Line_Code\",                # Line\n\t\t\t\"[.]../../../Line_Name\",\n\t\t\t\"[.]../../Machine_Code\",             # Machine\n\t\t\t\"[.]../../Machine_Name\",\n\t\t\t\n\t\t\t\"[.]../../OPC/From/Operator_Id\",                   # Operator\n\t\t\t\"[.]../../../../../Shift\",                                         # Shift\n\t\t\t\"[.]../../../../../Shift_Hour\",                                    # Shift_Hour\n\t\t\t\"[.]../../../../../../../Hour\",                                                                # Hour\n\t\t\t\"[.]../../../../../../../Date_hour\",                                                           # Datetime_Hour\n\t\t\t\n\t\t\t\"[.]../../OPC/From/Part_Id\",                    # Part_Id\n\t\t\t\"[.]../OEE/OEE_Start\",                  # Start_Time\n\t\t\t\"[.]../../../../../DateTime_OEE\",                                  # end_Time\n\t\t\t\n\t\t\t\"[.]../Operating_Time/Stop_Timer\",       # StopTime1\n\t\t\t\"[.]../Operating_Time/Run_Timer\",        # run_time\n\t\t\t\"[.]../Operating_Time/Off_Timer\",        # Off_time\n\t\t\t\n\t\t\t\"[.]../Count/G_Count\",               # Good_Count\n\t\t\t\"[.]../Count/R_Count\",                   # Rejection\n\t\t\t\"[.]Breakdown_ID\",    # Reason\n\t\t\t\"[.]../Operating_Time/Idle_Timer\",       # downTime1\n\t\t\t\n\t\t\t\"[.]../Operating_Time/Shift_Time\",             # Shifttime\n\t\t\t\"[.]../Operating_Time/DT_Type\",         # DT_type\n\t\t\t\"[.]../OEE/CT\",                 # idle_Cycle_time\n\t\t\t\n\t\t\t\"[.]../Count/CT_E\",                      # CTE\n\t\t\t\"[.]../Count/CT_H\",                      # CTH\n\t\t\t\"[.]../Count/CT_L\",                      # CTL\n\t\t\t\n\t\t\t\"[.]../Operating_Time/HT_Time\",   # Handling_time_tag\n\t\t\t\"[.]../Operating_Time/MC_Time\"     # Maching_time_tag\n\t\t]\n\t\t\n\t\tresult \u003d OEE.OEE_Triggers.log_oee_data_1Hou(tags_to_read)\n\t\n\t\tif result:\n\t\t\ttag_write_values \u003d result[:-1]         # First 13 values\n\t\t\tdt_type \u003d result[-1]                   # 14th value is DT_type\n\t\t\t\n\t\t\tresult_tags \u003d [\n\t\t\t\t\"[.]../OEE/OEE_Start\",\n\t\t\t\t\"[.]../Count/G_Count\",\n\t\t\t\t\"[.]../Count/R_Count\",\n\t\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Stop_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Idle_Timer\",\n\t\t\t\t\"[.]../Count/CT_E\",\n\t\t\t\t\"[.]../Count/CT_H\",\n\t\t\t\t\"[.]../Count/CT_L\",\n\t\t\t\t\"[.]../Operating_Time/HT_Time\",\n\t\t\t\t\"[.]../Operating_Time/MC_Time\",\n\t\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Shift_Time\"\n\t\t\t]\n\t\t\t\n\t\t\tsystem.tag.writeBlocking(result_tags, tag_write_values)\n\t\t\t\n\t\t\tif dt_type \u003d\u003d 2:\n\t\t\t\tsystem.tag.writeBlocking(\n\t\t\t\t\t[\"[.]../Operating_Time/Minor_Loss\"],\n\t\t\t\t\t[1]\n\t\t\t\t)"
                                }
                              ],
                              "expression": "getHour24(now())",
                              "name": "OEE_1hour",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\t# Tag paths\n\tTrigger \u003d system.tag.read(\"[.]../Operating_Time/MC_Status_Act\").value\n\tTrigger1 \u003d system.tag.read(\"[.]Off_Tag\").value\n\tOEE_On \u003d system.tag.read(\"[.]../Count/OEE_On\").value\n\tMC_Track \u003d system.tag.read(\"[.]../../Machine_Tracking\").value\n\tT_stamp \u003d system.tag.read(\"[.]../../../../../DateTime_OEE\").value\n\t\n\t# Write OEE_On \u003d 1 if the condition is met\n\tif (Trigger \u003d\u003d 2 or Trigger1 \u003d\u003d 1) and OEE_On \u003d\u003d 1 and MC_Track \u003d\u003d 1:\n\t    system.tag.write(\"[.]../Operating_Time/DT_Stop\", T_stamp)\n\t\n\t# Tags to read\n\ttags_to_read \u003d [\n\t    \"[.]../Count/OEE_On\",\n\t    \"[.]../../Machine_Tracking\",\n\t    \"[.]../Operating_Time/MC_Status_Act\",\n\t    \"[.]Off_Tag\",\n\t    \"[.]../../../../../../Business_Code\",\n\t    \"[.]../../../../../../Business_Name\",\n\t    \"[.]../../../../../Plant_Code\",\n\t    \"[.]../../../../../Plant_Name\",\n\t    \"[.]../../../../Cell_Code\",\n\t    \"[.]../../../../Cell_Name\",\n\t    \"[.]../../../Line_Code\",\n\t    \"[.]../../../Line_Name\",\n\t    \"[.]../../Machine_Code\",\n\t    \"[.]../../Machine_Name\",\n\t    \"[.]../../OPC/From/Operator_Id\",\n\t    \"[.]../../../../../Shift_dup\",\n\t    \"[.]../../../../../Shift_Hour_Dup\",\n\t    \"[.]../../../../../Shift_Id\",\n\t    \"[.]../../../../../../../Hour\",\n\t    \"[.]../../../../../../../Date_hour\",\n\t    \"[.]../../OPC/From/Part_Id\",\n\t    \"[.]../OEE/OEE_Start\",\n\t    \"[.]../../../../../DateTime_OEE\",\n\t    \"[.]../Operating_Time/Stop_Timer\",\n\t    \"[.]../Operating_Time/Run_Timer\",\n\t    \"[.]../Operating_Time/Off_Timer\",\n\t    \"[.]../Count/G_Count\",\n\t    \"[.]../Count/R_Count\",\n\t    \"[.]../Operating_Time/DT_Reason\",\n\t    \"[.]../Operating_Time/Idle_Timer\",\n\t    \"[.]../Operating_Time/Shift_Time\",\n\t    \"[.]../Operating_Time/DT_Type\",\n\t    \"[.]../OEE/CT\",\n\t    \"[.]../Count/CT_E\",\n\t    \"[.]../Count/CT_H\",\n\t    \"[.]../Count/CT_L\",\n\t    \"[.]HT_Timer\",\n\t    \"[.]../Operating_Time/MC_Time\",\n\t    \"[.]../Operating_Time/DT_Start\",\n\t    \"[.]../Operating_Time/DT_Start_Act\",\n\t    \"[.]../Operating_Time/DT_Stop\",\n\t    \"[.]Idel_Limit\",\n\t    \"[.]Breakdown_ID\",\n\t    \"[.]../../../../../DateTime_OEE\"  # currentTimestamp\n\t]\n\t\n\tReturn_values \u003d OEE.OEE_Triggers.log_oee_data_Shift(tags_to_read)\n\t\n\tif Return_values:\n\t    (\n\t        Trigger, Trigger1, OEE_On, MC_Stat,\n\t        actualDowntime, SP_DATE_TIME, Date_OEE,\n\t        Shift_Plan, end_Time, oeeTimestamp, currentTimestamp\n\t    ) \u003d Return_values\n\t    \n\t    if (Trigger \u003d\u003d 2 or Trigger1 \u003d\u003d 1) and OEE_On \u003d\u003d 1 and MC_Stat \u003d\u003d 1:\n\t        tags_to_write \u003d [\n\t            \"[.]../OEE/OEE_Start\",\n\t            \"[.]../Count/G_Count\",\n\t            \"[.]../Count/R_Count\",\n\t            \"[.]../Operating_Time/Run_Timer\",\n\t            \"[.]../Operating_Time/Stop_Timer\",\n\t            \"[.]../Operating_Time/Idle_Timer\",\n\t            \"[.]../Count/CT_E\",\n\t            \"[.]../Count/CT_H\",\n\t            \"[.]../Count/CT_L\",\n\t            \"[.]HT_Timer\",\n\t            \"[.]../Operating_Time/MC_Time\",\n\t            \"[.]../Operating_Time/Off_Timer\",\n\t            \"[.]../Operating_Time/Down_Time\",\n\t            \"[.]../Operating_Time/DT_Start\",\n\t            \"[.]../Operating_Time/DT_Start_Act\"\n\t        ]\n\t        values_to_write \u003d [end_Time, 0, 0, 0, 0, 0,0, 0, 0,0, 0, 0,0, oeeTimestamp, currentTimestamp]\n\t        system.tag.writeBlocking(tags_to_write, values_to_write)\n\n\t    if SP_DATE_TIME \u003d\u003d Date_OEE and Shift_Plan \u003e 0:\n\t        system.tag.write(\"[.]../Count/OEE_On\", 0)\n\t        system.tag.write(\"[.]../Operating_Time/Shift_Time\", 0)\n\t    else:\n\t        system.tag.write(\"[.]../OEE/OEE_Start\", oeeTimestamp)\n\t        system.tag.write(\"[.]../Operating_Time/DT_Start\", oeeTimestamp)\n\t        system.tag.write(\"[.]../Operating_Time/DT_Start_Act\", currentTimestamp)\n\t        system.tag.write(\"[.]../Count/OEE_On\", 1)\n\t    \n\t    system.tag.write(\"[.]../../OPC/To/Shift_Reset\",currentValue.value)"
                                }
                              ],
                              "sourceTagPath": "[.]../../../../../Shift_Trigger",
                              "name": "OEE_Shift",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "db",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif OEE_On\u003d\u003d1:\n\t\ttags_to_read \u003d [\n\t\t    \"[.]../Count/OEE_On\",\n\t\t    \"[.]../../../../../DateTime_OEE\",\n\t\t    \"[.]../../../../../Shift_Id\",\n\t\t    \"[.]../../../../../../Business_Code\",\n\t\t    \"[.]../../../../../../Business_Name\",\n\t\t    \"[.]../../../../../Plant_Code\",\n\t\t    \"[.]../../../../../Plant_Name\",\n\t\t    \"[.]../../../../Cell_Code\",\n\t\t    \"[.]../../../../Cell_Name\",\n\t\t    \"[.]../../../Line_Code\",\n\t\t    \"[.]../../../Line_Name\",\n\t\t    \"[.]../../Machine_Code\",\n\t\t    \"[.]../../Machine_Name\",\n\t\t    \"[.]../../../../../Shift\",\n\t\t    \"[.]../../../../../Shift_Id\"\n\t\t]\n\t\tresult \u003d OEE.PS.PS(tags_to_read)\n\t\tDate,date_oee,Shift,T_stamp,Tstamp_act, SE, Shift_Time \u003d result\n\t\tif SE\u003d\u003d0:\n\t\t\tsystem.tag.writeBlocking([\"[.]../Operating_Time/Shift_Time\"], [Shift_Time])\n\t\tif Date \u003d\u003d date_oee and Shift \u003e 0:\n\t\t    system.tag.writeAll([\n\t\t        \"[.]../Count/OEE_On\",\n\t\t        \"[.]../Operating_Time/Shift_Time\"\n\t\t    ], [0, 0])\n\t\telse:\n\t\t    system.tag.writeAll([\n\t\t        \"[.]../OEE/OEE_Start\",\n\t\t        \"[.]../Operating_Time/DT_Start\",\n\t\t        \"[.]../Operating_Time/DT_Start_Act\",\n\t\t        \"[.]../Count/OEE_On\"\n\t\t    ], [T_stamp, T_stamp, Tstamp_act, 1])\n\t\t"
                                }
                              ],
                              "datasource": "Master",
                              "query": "Select isnull((Select distinct Shift_ID from Shift_Master where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Start_time \u003c \u0027{[.]../../../../../../../Time 2}\u0027 and End_time \u003e \u0027{[.]../../../../../../../Time 2}\u0027),\u00273\u0027)",
                              "name": "PS",
                              "value": 2,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tI_Limit \u003d system.tag.read(\"[.]Idel_Limit\").value\n\tHT_Act \u003d currentValue.value\n\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif (I_Limit\u003cHT_Act) and OEE_On\u003d\u003d1:\n\t\tsystem.tag.write(\"[.]../OEE/HT_Actual\",I_Limit)\n\telse:\n\t\tsystem.tag.write(\"[.]../OEE/HT_Actual\",HT_Act)"
                                }
                              ],
                              "sourceTagPath": "[.]../../OPC/From/LU_Time",
                              "name": "HT_Actual",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif OEE_On\u003d\u003d1:\n\t\ttags_to_read \u003d [\n\t\t    \"[.]../Operating_Time/MC_Status_Act\",\n\t\t    \"[.]DT_Timer\",\n\t\t    \"[.]Idel_Limit\",\n\t\t    \"[.]../Operating_Time/Stop_Timer\",\n\t\t    \"[.]../Operating_Time/Idle_Timer\",\n\t\t    \"[.]../Operating_Time/Minor_Loss\",\n\t\t    \"[.]../../../../../../Business_Code\",\n\t\t    \"[.]../../../../../../Business_Name\",\n\t\t    \"[.]../../../../../Plant_Code\",\n\t\t    \"[.]../../../../../Plant_Name\",\n\t\t    \"[.]../../../../Cell_Code\",\n\t\t    \"[.]../../../../Cell_Name\",\n\t\t    \"[.]../../../Line_Code\",\n\t\t    \"[.]../../../Line_Name\",\n\t\t    \"[.]../../Machine_Code\",\n\t\t    \"[.]../../Machine_Name\",\n\t\t    \"[.]../../../../../Shift\",\n\t\t    \"[.]../../../../../../../Hour\"\n\t\t  \n\t\t]\n\t\t# Read tag values in one go\n\t\tvalues \u003d [tag.value for tag in system.tag.readBlocking(tags_to_read)]\n\t\t\n\t\t# Assign values with meaningful names\n\t\tmc_status, dt_timer, idle_limit, stop_time, idle_time, minor_loss, bg_id, bg_Name, plant, plant_Name, Cell, Cell_Name, line, Line_Name, machine, Machine_Name, shift, hour \u003d values\n\t\t\n\t\t# Ensure values are numeric (type safety)\n\t\tdt_timer \u003d int(dt_timer)\n\t\tidle_limit \u003d int(idle_limit)\n\t\tstop_time \u003d int(stop_time)\n\t\tidle_time \u003d int(idle_time)\n\t\tminor_loss \u003d int(minor_loss)\n\t\t\n\t\t\n\t\t# Prepare tag writes\n\t\twrite_tags \u003d []\n\t\t\n\t\t# Main logic for DT classification\n\t\tif mc_status \u003d\u003d 2 :\n\t\t\n\t\t    if dt_timer \u003c idle_limit:\n\t\t        stop_time +\u003d 1\n\t\t        write_tags +\u003d [\n\t\t            [\"[.]../Operating_Time/Stop_Timer\", stop_time],\n\t\t            [\"[.]../Operating_Time/DT_Type\", 2]  # 2 \u003d STOP\n\t\t        ]\n\t\t\n\t\t    elif dt_timer \u003e idle_limit:\n\t\t        idle_time +\u003d 1\n\t\t        write_tags +\u003d [\n\t\t            [\"[.]../Operating_Time/Idle_Timer\", idle_time],\n\t\t            [\"[.]../Operating_Time/DT_Type\", 3]  # 3 \u003d IDLE\n\t\t        ]\n\t\t\n\t\t    elif dt_timer \u003d\u003d idle_limit and dt_timer !\u003d 0:\n\t\t        # Calculate new stop time capped at 0\n\t\t        new_stop_time \u003d stop_time - idle_limit if stop_time \u003e\u003d idle_limit else 0\n\t\t        #2025-07-31 write_tags.append([\"[.]../Operating_Time/Stop_Timer\", new_stop_time])\n\t\t        system.tag.write(\"[.]../Operating_Time/Stop_Timer\", new_stop_time)\n\t\t        #2025-07-2025 write_tags.append([\"[.]../Operating_Time/Idle_Timer\", idle_time])\n\t\t        new_idle_time \u003d idle_time + idle_limit #2025-07-2025 if stop_time \u003e\u003d idle_limit else idle_time\n\t\t        #2025-07-2025 write_tags.append([\"[.]../Operating_Time/Idle_Timer\", new_idle_time])\n\t\t        system.tag.write(\"[.]../Operating_Time/Idle_Timer\", new_idle_time)\n\t\t\n\t\t        # Fetch latest DB record for this machine\n\t\t        row \u003d system.db.runPrepQuery(\n\t\t            \"SELECT TOP 1 ID, Shift, Hour, Stoptime, Downtime FROM OEE_OEEData \"\n\t\t            \"WHERE Business_ID \u003d ? AND Plant_ID \u003d ? AND Cell_ID \u003d ? AND Line_ID \u003d ? AND Machine_Code \u003d ? ORDER BY id DESC\",\n\t\t            [bg_id, plant, Cell, line, machine], \u0027OEE\u0027\n\t\t        )\n\t\t\n\t\t        if row:\n\t\t            record \u003d row[0]\n\t\t            id \u003d record[\"id\"]\n\t\t            shift_pre \u003d record[\"Shift\"]\n\t\t            hour_pre \u003d record[\"Hour\"]\n\t\t            stop_time_pre \u003d int(record[\"StopTime\"])\n\t\t            downtime_pre \u003d int(record[\"DownTime\"])\n\t\t\n\t\t            # Handle minor loss reversal if hour changed\n\t\t            if hour_pre !\u003d hour and shift \u003d\u003d shift_pre and downtime_pre \u003d\u003d 0 and minor_loss \u003d\u003d 1:\n\t\t                updated_stop_time \u003d stop_time_pre + new_stop_time + 1  # +1 for current cycle\n\t\t                downtime_new \u003d -new_stop_time\n\t\t\n\t\t                # Update OEE_data to reflect the corrected minor loss transition\n\t\t                system.db.runPrepUpdate(\n\t\t                    \"UPDATE OEE_OEEData SET Downtime \u003d ?, Stoptime \u003d ?,Trigger_Type \u003d ? WHERE ID \u003d ?\",\n\t\t                    [downtime_new, updated_stop_time, \"DT_Timer\", id],\n\t\t                    \u0027OEE\u0027\n\t\t                )\n\t\t\n\t\t                # Reset minor loss flag\n\t\t                write_tags.append([\"[.]../Operating_Time/Minor_Loss\", 0])\n\t\t\n\t\t# Write back tag values if any changes occurred\n\t\tif write_tags :\n\t\t    system.tag.writeBlocking(\n\t\t        [tag_path for tag_path, _ in write_tags],\n\t\t        [value for _, value in write_tags]\n\t\t    )"
                                }
                              ],
                              "name": "DT_Timer",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "qualityChanged",
                                  "script": "\tMS_Qual \u003d currentValue.quality\n\tif currentValue.quality.isGood():\n\t\tsystem.tag.write(\"[.]Off_Tag\",0)\n\telse:\n\t\tsystem.tag.write(\"[.]Off_Tag\",1)"
                                },
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tMC_Status \u003d currentValue.value\n\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\t#system.tag.write(\"[default]Tags/OEE/Enterprise/BG4/Plant2/Line1/Machine1/Operating_time/Mc_status\",a)\n\tsystem.tag.write(\"[.]../Operating_Time/MC_Status_Act\",MC_Status)\n\tsystem.tag.write(\"[.]HT_Timer\",0)\n\tif MC_Status \u003d\u003d 1 and OEE_On\u003d\u003d1:\n\t\tsystem.tag.write(\"[.]../Operating_Time/MC_Status_Act\",1)\n\t\tsystem.tag.write(\"[.]HT_Timer\",0)\n\tif MC_Status \u003d\u003d 2 and OEE_On\u003d\u003d1:\n\t\tsystem.tag.write(\"[.]../Operating_Time/MC_Status_Act\",2)\n\t"
                                }
                              ],
                              "sourceTagPath": "[.]../../OPC/From/Machine_Status",
                              "name": "MC_Status_Trigger",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "expr",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif OEE_On\u003d\u003d1:\n\t\ttags_to_read \u003d [\n\t\t\t\"[.]../../Machine_Tracking\",\n\t\t\t\"[.]Off_Tag\",\n\t\t\t\"[.]../Operating_Time/MC_Status_Act\",\n\t\t\t\"[.]DT_Timer\",\n\t\t\t\"[.]MC_Status_Trigger\",\n\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\"[.]HT_Timer\"\n\t\t\t\n\t\t]\n\t\ttags \u003d [tag.value for tag in system.tag.readBlocking(tags_to_read)]\n\t\n\t\tif tags[0] !\u003d 1:\n\t\t\treturn\n\t\tb \u003d tags[1]\n\t\ta \u003d int(tags[2])\n\t\tc \u003d tags[3]\n\t\te \u003d int(tags[4])\n\t\toff, run, ht \u003d tags[5], tags[6], tags[7]\n\t\tupdates \u003d []\n\t\tif b \u003d\u003d 1:\n\t\t\tsystem.tag.write(\"[.]../Operating_Time/Off_Timer\" , off + 1)\n\t\tif a \u003d\u003d 1 and b !\u003d 1:\n\t\t\tsystem.tag.write(\"[.]../Operating_Time/Run_Timer\", run + 1)\n\t\tif a \u003d\u003d 2 and b !\u003d 1:\n\t\t\tsystem.tag.write(\"[.]DT_Timer\", c + 1)\n\t\tif e \u003d\u003d 2 and b !\u003d 1:\n\t\t\tsystem.tag.write(\"[.]HT_Timer\", ht + 1)\n\t\t#if Write_Tag:\n\t\t\t#system.tag.writeBlocking([item[0] for item in Write_Tag], [item[1] for item in Write_Tag])\n\t\t\t\n\t\t\t\n\t\t"
                                }
                              ],
                              "expression": "getSecond(now())",
                              "name": "Seconds",
                              "executionMode": "FixedRate",
                              "executionRate": 500,
                              "tagType": "AtomicTag"
                            },
                            {
                              "datasource": {
                                "bindType": "parameter",
                                "binding": "{DB}"
                              },
                              "valueSource": "memory",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tsystem.tag.write(\"[.]../Count/Idel_Time\",currentValue.value)"
                                }
                              ],
                              "query": "Select Idle_Time from Idle_Time where Eg_ID \u003d 1 and Bg_ID \u003d 4 and Plant_Id \u003d 2 and Line_Id \u003d 1 and Machine_Id \u003d 1\r\n\r\n",
                              "name": "Idel_Limit",
                              "value": 300,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif currentValue.quality.isGood() and currentValue.value !\u003d 0 and previousValue.quality.isGood() and OEE_On\u003d\u003d1:\n\t\tsystem.tag.write(\"[.]../Count/Rejection_Act\",currentValue.value)"
                                }
                              ],
                              "sourceTagPath": "[.]../../OPC/From/Rejection_Reason",
                              "name": "Rejection_Id",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tMC_status \u003d system.tag.read(\"[.]../Operating_Time/MC_Status_Act\").value\n\tOFF_Tag \u003d system.tag.read(\"[.]Off_Tag\").value\n\tT_Stamp \u003d system.tag.read(\"[.]../../../../../DateTime_OEE\").value\n\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif MC_status \u003d\u003d 1 and OFF_Tag \u003d\u003d0 and OEE_On\u003d\u003d1:\n\t\tsystem.tag.write(\"[.]../Operating_Time/DT_Stop\",T_Stamp)\n\t\n\ttags_to_read \u003d [\n\t\t\"[.]../../../../../Shift\",\n\t\t\"[.]../Operating_Time/MC_Status_Act\",\n\t\t\"[.]Off_Tag\",\n\t\t\"[.]../../../../../DateTime_OEE\",\n\t\t\"[.]../../../../../../Business_Code\",\n\t\t\"[.]../../../../../../Business_Name\",\n\t\t\"[.]../../../../../Plant_Code\",\n\t\t\"[.]../../../../../Plant_Name\",\n\t\t\"[.]../../../../Cell_Code\",\n\t\t\"[.]../../../../Cell_Name\",\n\t\t\"[.]../../../Line_Code\",\n\t\t\"[.]../../../Line_Name\",\n\t\t\"[.]../../Machine_Code\",\n\t\t\"[.]../../Machine_Name\",\n\t\t\"[.]../../OPC/From/Operator_Id\",\n\t\t\"[.]../../../../../../../Hour\",\n\t\t\"[.]../../OPC/From/Part_Id\",\n\t\t\"[.]../Operating_Time/DT_Start\",\n\t\t\"[.]../Operating_Time/DT_Start_Act\",\n\t\t\"[.]Idel_Limit\",\n\t\t\"[.]../Operating_Time/DT_Stop\",\n\t\t\"[.]../../../../../DateTime_OEE\",\n\t\t\"[.]Breakdown_ID\"\n\t]\n\twrite_value \u003d OEE.Operating_Time.offtime(tags_to_read)\n\tif write_value and OEE_On\u003d\u003d1:\n\t\tsystem.tag.writeBlocking([item[0] for item in write_value], [item[1] for item in write_value])"
                                }
                              ],
                              "name": "Off_Tag",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif currentValue.quality.isGood() and currentValue.value !\u003d 0 and previousValue.quality.isGood() and OEE_On\u003d\u003d1:\n\t\tsystem.tag.write(\"[.]../Operating_Time/DT_Reason\",currentValue.value)"
                                }
                              ],
                              "sourceTagPath": "[.]../../OPC/From/BD_Reason",
                              "name": "Breakdown_ID",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "expr",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tM_Tracking\u003d system.tag.read(\"[.]../../Machine_Tracking\").value\n\tif currentValue.value \u003d\u003d 1 and OEE_On\u003d\u003d1 and M_Tracking\u003d\u003d1:\n\t\ttags_to_read \u003d [\n\t\t\t\"[.]../../../../../../Business_Code\",\n\t\t\t\"[.]../../../../../../Business_Name\",\n\t\t\t\"[.]../../../../../Plant_Code\",\n\t\t\t\"[.]../../../../../Plant_Name\",\n\t\t\t\"[.]../../../../Cell_Code\",\n\t\t\t\"[.]../../../../Cell_Name\",\n\t\t\t\"[.]../../../Line_Code\",\n\t\t\t\"[.]../../../Line_Name\",\n\t\t\t\"[.]../../Machine_Code\",\n\t\t\t\"[.]../../Machine_Name\",\n\t\t\t\"[.]../../../../../Shift\",\n\t\t\t\"[.]../../../../../Shift_Hour\",\n\t\t\t\"[.]../../../../../DateTime_OEE\",\n\t\t\t\"[.]../Count/OEE_On\",\n\t\t\t\"[.]../Operating_Time/MC_Status_Act\",\n\t\t\t\"[.]../../OPC/From/Operator_Id\",\n\t\t\t\"[.]../../../../../../../Hour\",\n\t\t\t\"[.]../../../../../../../Date_hour\",\n\t\t\t\"[.]../../OPC/From/Part_Id\",\n\t\t\t\"[.]../OEE/OEE_Start\",\n\t\t\t\"[.]../../../../../DateTime_OEE\",\n\t\t\t\"[.]../Operating_Time/Stop_Timer\",\n\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\"[.]../Count/G_Count\",\n\t\t\t\"[.]../Count/R_Count\",\n\t\t\t\"[.]Breakdown_ID\",\n\t\t\t\"[.]../Operating_Time/Idle_Timer\",\n\t\t\t\"[.]../Operating_Time/Shift_Time\",\n\t\t\t\"[.]../OEE/CT\",\n\t\t\t\"[.]../Count/CT_E\",\n\t\t\t\"[.]../Count/CT_H\",\n\t\t\t\"[.]../Count/CT_L\",\n\t\t\t\"[.]../Operating_Time/HT_Time\",\n\t\t\t\"[.]../Operating_Time/MC_Time\"\n\t\t]\n\t\t# Call the function\n\t\tresult_values \u003d OEE.OEE_Triggers.log_oee_data_15Min(tags_to_read)\n\t\t\n\t\t# If the function returned valid data, write to tags\n\t\tif result_values:\n\t\t\treset_tags \u003d [\n\t\t\t\t\"[.]../OEE/OEE_Start\",\n\t\t\t\t\"[.]../Count/G_Count\",\n\t\t\t\t\"[.]../Count/R_Count\",\n\t\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Stop_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Idle_Timer\",\n\t\t\t\t\"[.]../Count/CT_E\",\n\t\t\t\t\"[.]../Count/CT_H\",\n\t\t\t\t\"[.]../Count/CT_L\",\n\t\t\t\t\"[.]../Operating_Time/HT_Time\",\n\t\t\t\t\"[.]../Operating_Time/MC_Time\",\n\t\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Shift_Time\",\n\t\t\t\t\"[.]../../OPC/To/Availability\",\n\t\t\t\t\"[.]../../OPC/To/Quality\",\n\t\t\t\t\"[.]../../OPC/To/Performance\",\n\t\t\t\t\"[.]../../OPC/To/OEE\"           \n\t\t\t]\n\t\t\t\n\t\t\tsystem.tag.writeBlocking(reset_tags, result_values)"
                                }
                              ],
                              "expression": "getMinute(now()) % 15 \u003d 0 \u0026\u0026 getSecond(now()) \u003d 0",
                              "name": "OEE_15Mins",
                              "tagType": "AtomicTag"
                            }
                          ]
                        },
                        {
                          "name": "Operating_Time",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "valueSource": "memory",
                              "name": "Run_Timer",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "dataType": "DateTime",
                              "name": "DT_Start",
                              "formatString": "yyyy-MM-dd h:mm:ss aa",
                              "value": 1735670220000,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "DT_Type",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "DT_Reason",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Minor_Loss",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Off_Timer",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "dataType": "DateTime",
                              "name": "DT_Stop",
                              "formatString": "yyyy-MM-dd h:mm:ss aa",
                              "value": 1735670220000,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Stop_Timer",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "HT_Time",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_ON \u003d system.tag.read(\"[.]../Count/OEE_On\").value\n\tMACHINE_Tracking \u003d system.tag.read(\"[.]../../Machine_Tracking\").value\n\tMachine_Status \u003d system.tag.read(\"[.]MC_Status_Act\").value\n\tT_Stamp \u003d system.tag.read(\"[.]../../../../DateTime_OEE\").value\n\tif OEE_ON \u003d\u003d 1 and MACHINE_Tracking \u003d\u003d 1 and Machine_Status \u003d\u003d 1:\n\t\tsystem.tag.write(\"[.]DT_Stop\",T_Stamp)\n\ttags_to_read \u003d [\n        \"[.]../Count/OEE_On\",\n        \"[.]../../Machine_Tracking\",\n        \"[.]MC_Status_Act\",\n        \"[.]../Triggers/Off_Tag\",\n        \"[.]../../../../../DateTime_OEE\",\n        \"[.]DT_Start\",\n        \"[.]DT_Start_Act\",\n        \"[.]../../../../../../Business_Code\",\n        \"[.]../../../../../../Business_Name\",\n        \"[.]../../../../../Plant_Code\",\n        \"[.]../../../../../Plant_Name\",\n        \"[.]../../../../Cell_Code\",\n        \"[.]../../../../Cell_Name\",\n        \"[.]../../../Line_Code\",\n        \"[.]../../../Line_Name\",\n        \"[.]../../Machine_Code\",\n        \"[.]../../Machine_Name\",\n        \"[.]../../OPC/From/Operator_Id\",\n        \"[.]../../../../../Shift\",\n        \"[.]../../../../../Shift_Hour\",\n        \"[.]../../../../../../../Hour\",\n        \"[.]../../../../../../../Date_hour\",\n        \"[.]Shift_Time\",\n        \"[.]../OEE/OEE_Start\",\n        \"[.]Idle_Timer\",\n        \"[.]Stop_Timer\",\n        \"[.]Run_Timer\",\n        \"[.]Off_Timer\",\n        \"[.]../Count/G_Count\",\n        \"[.]../Count/R_Count\",\n        \"[.]../../OPC/From/Part_Id\",\n        \"[.]DT_Stop\",\n        \"[.]../Triggers/Idel_Limit\",\n        \"[.]DT_Reason\",\n        \"[.]../OEE/CT\",\n        \"[.]../Count/CT_H\",\n        \"[.]../Count/CT_E\",\n        \"[.]../Count/CT_L\",\n        \"[.]HT_Time\",\n        \"[.]MC_Time\",\n        \"[.]../../../../../DateTime_OEE\"\n    ]\n    \n\tOEE.MC_Status_Act.MC_Status_Act(tags_to_read)\n    "
                                }
                              ],
                              "name": "MC_Status_Act",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "dataType": "DateTime",
                              "name": "DT_Start_Act",
                              "formatString": "yyyy-MM-dd h:mm:ss aa",
                              "value": 1735670220000,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Idle_Timer",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Reason_UD",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Down_Time",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "dataType": "Int4",
                              "name": "Shift_Time",
                              "formatString": "#,##0.##",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "MC_Time",
                              "value": 0,
                              "tagType": "AtomicTag"
                            }
                          ]
                        },
                        {
                          "name": "OEE",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "valueSource": "memory",
                              "dataType": "DateTime",
                              "name": "OEE_Start",
                              "formatString": "yyyy-MM-dd h:mm:ss aa",
                              "value": 1735670220000,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "sourceTagPath": "0",
                              "query": "Select count(*) from  [OEE_NEW].[dbo].[PRODUCTION_OFF_SCHEDULE] where business_id\u003d \u0027{[.]../../../../BG_No.value}\u0027 and plant_id\u003d \u0027{[.]../../../Plant_No.value}\u0027 and cell_id \u003d \u0027{[.]../../Line_No.value}\u0027 and line_id\u003d \u0027{[.]../../Line_No.value}\u0027 and machine_code \u003d \u0027{[.]../Machine_No.value}\u0027 and Shift_Id \u003d \u0027{[.]../../../Shift_Id.value}\u0027 and CAST ((Date_Scheduled) AS DATE) \u003d\u0027 {[.]../../../DateTime_OEE}\u0027 ",
                              "name": "PS_Planner",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "datasource": {
                                "bindType": "parameter",
                                "binding": "{DB}"
                              },
                              "valueSource": "db",
                              "query": "select isnull((Select CycleTime from OEE_ProductMaster where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Cell_ID \u003d {[.]../../../../Cell_Code} and Line_ID \u003d {[.]../../../Line_Code} and Machine_Code \u003d {[.]../../Machine_Code} and Product_ID \u003d {[.]../../OPC/From/Part_Id}),0)",
                              "name": "CT",
                              "tagType": "AtomicTag"
                            },
                            {
                              "datasource": {
                                "bindType": "parameter",
                                "binding": "{DB}"
                              },
                              "valueSource": "db",
                              "query": "select isnull((Select CycleTime_Cumulative from OEE_ProductMaster where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Cell_ID \u003d {[.]../../../../Cell_Code} and Line_ID \u003d {[.]../../../Line_Code} and Machine_Code \u003d {[.]../../Machine_Code} and Product_ID \u003d {[.]../../OPC/From/Part_Id}),0)",
                              "name": "Cum_CT",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "HT_Actual",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "dataType": "DateTime",
                              "name": "OEE_Stop",
                              "formatString": "yyyy-MM-dd h:mm:ss aa",
                              "value": 1735670220000,
                              "tagType": "AtomicTag"
                            },
                            {
                              "datasource": {
                                "bindType": "parameter",
                                "binding": "{DB}"
                              },
                              "valueSource": "db",
                              "dataType": "String",
                              "query": "Select isnull((Select Product_Name from OEE_ProductMaster where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Cell_ID \u003d {[.]../../../../Cell_Code} and Line_ID \u003d {[.]../../../Line_Code} and Machine_Code \u003d {[.]../../Machine_Code} and Product_ID \u003d {[.]../../OPC/From/Part_Id}),\u0027No Part Model in Master\u0027)",
                              "name": "Part_Model",
                              "tagType": "AtomicTag"
                            },
                            {
                              "datasource": {
                                "bindType": "parameter",
                                "binding": "{DB}"
                              },
                              "valueSource": "db",
                              "query": "Select isnull((Select Handling_Time from OEE_ProductMaster where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Cell_ID \u003d {[.]../../../../Cell_Code} and Line_ID \u003d {[.]../../../Line_Code} and Machine_Code \u003d {[.]../../Machine_Code} and Product_ID \u003d {[.]../../OPC/From/Part_Id}),0)",
                              "name": "HT_Std",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "CT_Actual",
                              "value": 0,
                              "tagType": "AtomicTag"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Machine_New",
                  "typeId": "",
                  "parameters": {
                    "Machine_ID": {
                      "dataType": "String"
                    },
                    "Machine_Path": {
                      "dataType": "String",
                      "value": ""
                    },
                    "DB": {
                      "dataType": "String"
                    },
                    "Gateway": {
                      "dataType": "String"
                    },
                    "Machine_Code": {
                      "dataType": "Integer"
                    }
                  },
                  "tagType": "UdtType",
                  "tags": [
                    {
                      "value": {
                        "bindType": "parameter",
                        "binding": "{Machine_Code}"
                      },
                      "valueSource": "memory",
                      "name": "Machine_Code",
                      "tagType": "AtomicTag"
                    },
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "db",
                      "dataType": "String",
                      "query": "SELECT DISTINCT Machine_Name from M_OVERALL_MASTER where Machine_Code \u003d {[.]Machine_Code}",
                      "name": "Machine_Name",
                      "value": "0",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "Calculation",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "Triggers",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "valueSource": "memory",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif OEE_On\u003d\u003d1:\n\t\tDB \u003d \"OEE_NEW\"\n\t\ttags_to_read \u003d [\n\t\t    \"[.]../Operating_Time/MC_Status_Act\",\n\t\t    \"[.]DT_Timer\",\n\t\t    \"[.]Idel_Limit\",\n\t\t    \"[.]../Operating_Time/Stop_Timer\",\n\t\t    \"[.]../Operating_Time/Idle_Timer\",\n\t\t    \"[.]../Operating_Time/Minor_Loss\",\n\t\t    \"[.]../../../../../../Business_Code\",\n\t\t    \"[.]../../../../../Plant_Code\",\n\t\t    \"[.]../../../../Cell_Code\",\n\t\t    \"[.]../../../Line_Code\",\n\t\t    \"[.]../../Machine_Code\",\n\t\t    \"[.]../../../../../Shift_Id\",\n\t\t    \"[.]../../../../../../../Hour\"\n\t\t  \n\t\t]\n\t\t# Read tag values in one go\n\t\tvalues \u003d [tag.value for tag in system.tag.readBlocking(tags_to_read)]\n\t\t\n\t\t# Assign values with meaningful names\n\t\tmc_status, dt_timer, idle_limit, stop_time, idle_time, minor_loss, bg_id, plant, Cell, line, machine, shift, hour \u003d values\n\t\t\n\t\t# Ensure values are numeric (type safety)\n\t\tdt_timer \u003d int(dt_timer)\n\t\tidle_limit \u003d int(idle_limit)\n\t\tstop_time \u003d int(stop_time)\n\t\tidle_time \u003d int(idle_time)\n\t\tminor_loss \u003d int(minor_loss)\n\t\t# Prepare tag writes\n\t\twrite_tags \u003d []\n\t\t\n\t\t# Main logic for DT classification\n\t\tif mc_status \u003d\u003d 2 :\n\t\t\n\t\t    if dt_timer \u003c idle_limit:\n\t\t        stop_time +\u003d 1\n\t\t        write_tags +\u003d [\n\t\t            [\"[.]../Operating_Time/Stop_Timer\", stop_time],\n\t\t            [\"[.]../Operating_Time/DT_Type\", 2]  # 2 \u003d STOP\n\t\t        ]\n\t\t\n\t\t    elif dt_timer \u003e idle_limit:\n\t\t        idle_time +\u003d 1\n\t\t        write_tags +\u003d [\n\t\t            [\"[.]../Operating_Time/Idle_Timer\", idle_time],\n\t\t            [\"[.]../Operating_Time/DT_Type\", 3]  # 3 \u003d IDLE\n\t\t        ]\n\t\t\n\t\t    elif dt_timer \u003d\u003d idle_limit and dt_timer !\u003d 0:\n\t\t        # Calculate new stop time capped at 0\n\t\t        new_stop_time \u003d stop_time - idle_limit if stop_time \u003e\u003d idle_limit else 0\n\t\t        #2025-07-31 write_tags.append([\"[.]../Operating_Time/Stop_Timer\", new_stop_time])\n\t\t        system.tag.write(\"[.]../Operating_Time/Stop_Timer\", new_stop_time)\n\t\t        #2025-07-2025 write_tags.append([\"[.]../Operating_Time/Idle_Timer\", idle_time])\n\t\t        new_idle_time \u003d idle_time + idle_limit #2025-07-2025 if stop_time \u003e\u003d idle_limit else idle_time\n\t\t        #2025-07-2025 write_tags.append([\"[.]../Operating_Time/Idle_Timer\", new_idle_time])\n\t\t        system.tag.write(\"[.]../Operating_Time/Idle_Timer\", new_idle_time)\n\t\t\n\t\t        # Fetch latest DB record for this machine\n\t\t        row \u003d system.db.runPrepQuery(\n\t\t            \"SELECT TOP 1 id, shift_id, hour, stop_time, down_time FROM [OEE_NEW].[dbo].[OEE_DATA] \"\n\t\t            \"WHERE business_id \u003d ? and plant_id \u003d ? and cell_id \u003d ? and line_id \u003d ? and machine_code \u003d ? order by id desc\",\n\t\t            [bg_id, plant, Cell, line, machine], DB\n\t\t        )\n\t\t\n\t\t        if row:\n\t\t            record \u003d row[0]\n\t\t            id \u003d record[\"id\"]\n\t\t            shift_pre \u003d record[\"shift_id\"]\n\t\t            hour_pre \u003d record[\"hour\"]\n\t\t            stop_time_pre \u003d int(record[\"stop_time\"])\n\t\t            downtime_pre \u003d int(record[\"down_time\"])\n\t\t\n\t\t            # Handle minor loss reversal if hour changed\n\t\t            if hour_pre !\u003d hour and shift \u003d\u003d shift_pre and downtime_pre \u003d\u003d 0 and minor_loss \u003d\u003d 1:\n\t\t                updated_stop_time \u003d stop_time_pre + new_stop_time + 1  # +1 for current cycle\n\t\t                downtime_new \u003d -new_stop_time\n\t\t\n\t\t                # Update OEE_data to reflect the corrected minor loss transition\n\t\t                system.db.runPrepUpdate(\n\t\t                    \"UPDATE [OEE_NEW].[dbo].[OEE_DATA] SET down_time \u003d ?, stop_time \u003d ?, trigger_type \u003d ? WHERE ID \u003d ?\",\n\t\t                    [downtime_new, updated_stop_time, \"DT_Timer\", id],\n\t\t                    DB\n\t\t                )\n\t\t\n\t\t                # Reset minor loss flag\n\t\t                write_tags.append([\"[.]../Operating_Time/Minor_Loss\", 0])\n\t\t\n\t\t# Write back tag values if any changes occurred\n\t\tif write_tags :\n\t\t    system.tag.writeBlocking(\n\t\t        [tag_path for tag_path, _ in write_tags],\n\t\t        [value for _, value in write_tags]\n\t\t    )"
                                }
                              ],
                              "name": "DT_Timer",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif currentValue.quality.isGood() and currentValue.value !\u003d 0 and previousValue.quality.isGood() and OEE_On\u003d\u003d1:\n\t\tsystem.tag.write(\"[.]../Count/Rejection_Act\",currentValue.value)"
                                }
                              ],
                              "sourceTagPath": "[.]../../OPC/From/Rejection_Reason",
                              "name": "Rejection_Id",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\t# Tag paths\n\tTrigger \u003d system.tag.read(\"[.]../Operating_Time/MC_Status_Act\").value\n\tTrigger1 \u003d system.tag.read(\"[.]Off_Tag\").value\n\tOEE_On \u003d system.tag.read(\"[.]../Count/OEE_On\").value\n\tMC_Track \u003d system.tag.read(\"[.]../../Machine_Tracking\").value\n\tT_stamp \u003d system.tag.read(\"[.]../../../../../DateTime_OEE\").value\n\t\n\t# Write OEE_On \u003d 1 if the condition is met\n\tif (Trigger \u003d\u003d 2 or Trigger1 \u003d\u003d 1) and OEE_On \u003d\u003d 1 and MC_Track \u003d\u003d 1:\n\t    system.tag.write(\"[.]../Operating_Time/DT_Stop\", T_stamp)\n\t\n\t# Tags to read\n\ttags_to_read \u003d [\n\t    \"[.]../Count/OEE_On\",\n\t    \"[.]../../Machine_Tracking\",\n\t    \"[.]../Operating_Time/MC_Status_Act\",\n\t    \"[.]Off_Tag\",\n\t    \"[.]../../../../../../Business_Code\",\n\t    \"[.]../../../../../Plant_Code\",\n\t    \"[.]../../../../Cell_Code\",\n\t    \"[.]../../../Line_Code\",\n\t    \"[.]../../Machine_Code\",\n\t    \"[.]../../OPC/From/Operator_Id\",\n\t    \"[.]../../../../../Shift_dup\",\n\t    \"[.]../../../../../Shift_Hour_Dup\",\n\t    \"[.]../../../../../Shift_Id_Dup\",\n\t    \"[.]../../../../../../../Hour\",\n\t    \"[.]../../../../../../../Date_hour\",\n\t    \"[.]../../OPC/From/Part_Id\",\n\t    \"[.]../OEE/OEE_Start\",\n\t    \"[.]../../../../../DateTime_OEE\",\n\t    \"[.]../Operating_Time/Stop_Timer\",\n\t    \"[.]../Operating_Time/Run_Timer\",\n\t    \"[.]../Operating_Time/Off_Timer\",\n\t    \"[.]../Count/G_Count\",\n\t    \"[.]../Count/R_Count\",\n\t    \"[.]../Operating_Time/DT_Reason\",\n\t    \"[.]../Operating_Time/Idle_Timer\",\n\t    \"[.]../Operating_Time/Shift_Time\",\n\t    \"[.]../Operating_Time/DT_Type\",\n\t    \"[.]../OEE/CT\",\n\t    \"[.]../Count/CT_E\",\n\t    \"[.]../Count/CT_H\",\n\t    \"[.]../Count/CT_L\",\n\t    \"[.]HT_Timer\",\n\t    \"[.]../Operating_Time/MC_Time\",\n\t    \"[.]../Operating_Time/DT_Start\",\n\t    \"[.]../Operating_Time/DT_Start_Act\",\n\t    \"[.]../Operating_Time/DT_Stop\",\n\t    \"[.]Idel_Limit\",\n\t    \"[.]Breakdown_ID\",\n\t    \"[.]../../../../../DateTime_OEE\",  # currentTimestamp\n\t    \"[.]../../../../../Shift_Id\"\n\t]\n\t\n\t#Return_values \u003d OEE.OEE_Triggers.log_oee_data_Shift(tags_to_read)\n\tReturn_values \u003d OEE_NEW.OEE_Triggers.log_oee_data_Shift(tags_to_read)\n\t\n\tif Return_values:\n\t    (\n\t        Trigger, Trigger1, OEE_On, MC_Stat,\n\t        actualDowntime, SP_DATE_TIME, Date_OEE,\n\t        Shift_Plan, end_Time, oeeTimestamp, currentTimestamp\n\t    ) \u003d Return_values\n\t    if (Trigger \u003d\u003d 2 or Trigger1 \u003d\u003d 1) and OEE_On \u003d\u003d 1 and MC_Stat \u003d\u003d 1:\n\t        tags_to_write \u003d [\n\t            \"[.]../OEE/OEE_Start\",\n\t            \"[.]../Count/G_Count\",\n\t            \"[.]../Count/R_Count\",\n\t            \"[.]../Operating_Time/Run_Timer\",\n\t            \"[.]../Operating_Time/Stop_Timer\",\n\t            \"[.]../Operating_Time/Idle_Timer\",\n\t            \"[.]../Count/CT_E\",\n\t            \"[.]../Count/CT_H\",\n\t            \"[.]../Count/CT_L\",\n\t            \"[.]HT_Timer\",\n\t            \"[.]../Operating_Time/MC_Time\",\n\t            \"[.]../Operating_Time/Off_Timer\",\n\t            \"[.]../Operating_Time/Down_Time\",\n\t            \"[.]../Operating_Time/DT_Start\",\n\t            \"[.]../Operating_Time/DT_Start_Act\"\n\t        ]\n\t        values_to_write \u003d [end_Time, 0, 0, 0, 0, 0,0, 0, 0,0, 0, 0,0, oeeTimestamp, currentTimestamp]\n\t        system.tag.writeBlocking(tags_to_write, values_to_write)\n\t    if SP_DATE_TIME \u003d\u003d Date_OEE and Shift_Plan \u003e 0:\n\t        system.tag.write(\"[.]../Count/OEE_On\", 0)\n\t        system.tag.write(\"[.]../Operating_Time/Shift_Time\", 0)\n\t    else:\n\t        system.tag.write(\"[.]../OEE/OEE_Start\", oeeTimestamp)\n\t        system.tag.write(\"[.]../Operating_Time/DT_Start\", oeeTimestamp)\n\t        system.tag.write(\"[.]../Operating_Time/DT_Start_Act\", currentTimestamp)\n\t        system.tag.write(\"[.]../Count/OEE_On\", 1)\n\t    system.tag.write(\"[.]../../OPC/To/Shift_Reset\",currentValue.value)"
                                }
                              ],
                              "sourceTagPath": "[.]../../../../../Shift_Trigger",
                              "name": "OEE_Shift",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif currentValue.quality.isGood() and currentValue.value !\u003d 0 and previousValue.quality.isGood() and OEE_On\u003d\u003d1:\n\t\tsystem.tag.write(\"[.]../Operating_Time/DT_Reason\",currentValue.value)"
                                }
                              ],
                              "sourceTagPath": "[.]../../OPC/From/BD_Reason",
                              "name": "Breakdown_ID",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "db",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dOEE_on\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif OEE_On\u003d\u003d1:\n\t\ttags_to_read \u003d [\n\t\t    \"[.]../Count/OEE_On\",\n\t\t    \"[.]../../../../../DateTime_OEE\",\n\t\t    \"[.]../../../../../Shift_Id\",\n\t\t    \"[.]../../../../../../Business_Code\",\n\t\t    \"[.]../../../../../Plant_Code\",\n\t\t    \"[.]../../../../Cell_Code\",\n\t\t    \"[.]../../../Line_Code\",\n\t\t    \"[.]../../Machine_Code\",\n\t\t    \"[.]../../../../../Shift\"\n\t\t]\n\t\t#result \u003d OEE.PS.PS(tags_to_read)\n\t\tresult \u003d OEE_NEW.PS.PS(tags_to_read)\n\t\tDate,date_oee,Shift,T_stamp,Tstamp_act, SE, Shift_Time \u003d result\n\t\tif SE\u003d\u003d0:\n\t\t\tsystem.tag.writeBlocking([\"[.]../Operating_Time/Shift_Time\"], [Shift_Time])\n\t\tif Date \u003d\u003d date_oee and Shift \u003e 0:\n\t\t    system.tag.writeAll([\n\t\t        \"[.]../Count/OEE_On\",\n\t\t        \"[.]../Operating_Time/Shift_Time\"\n\t\t    ], [0, 0])\n\t\telse:\n\t\t    system.tag.writeAll([\n\t\t        \"[.]../OEE/OEE_Start\",\n\t\t        \"[.]../Operating_Time/DT_Start\",\n\t\t        \"[.]../Operating_Time/DT_Start_Act\",\n\t\t        \"[.]../Count/OEE_On\"\n\t\t    ], [T_stamp, T_stamp, Tstamp_act, 1])\n\t\t"
                                }
                              ],
                              "datasource": "CM_MASTER",
                              "query": "Select isnull((Select distinct shift_id from [MASTER_DATA].[dbo].[M_SHIFT] where business_id \u003d {[.]../../../../../../Business_Code} and plant_id \u003d 5000 and shift_start_time \u003c \u0027{[.]../../../../../../../Time 2}\u0027 and shift_end_time \u003e \u0027{[.]../../../../../../../Time 2}\u0027),\u00273\u0027)",
                              "name": "PS",
                              "tagType": "AtomicTag"
                            },
                            {
                              "datasource": {
                                "bindType": "parameter",
                                "binding": "{DB}"
                              },
                              "valueSource": "memory",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tsystem.tag.write(\"[.]../Count/Idel_Time\",currentValue.value)"
                                }
                              ],
                              "query": "Select Idle_Time from Idle_Time where Eg_ID \u003d 1 and Bg_ID \u003d 4 and Plant_Id \u003d 2 and Line_Id \u003d 1 and Machine_Id \u003d 1\r\n\r\n",
                              "name": "Idel_Limit",
                              "value": 300,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "expr",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tM_Tracking\u003d system.tag.read(\"[.]../../Machine_Tracking\").value\n\tif OEE_On\u003d\u003d1 and M_Tracking\u003d\u003d1:\n\t\ttags_to_read \u003d [\n\t\t\t\"[.]../Count/OEE_On\",                    # OEE_On\n\t\t\t\"[.]../../Machine_Tracking\",                 # MC_Stat\n\t\t\t\"[.]OEE_1hour\",               # Triger\n\t\t\t\"[.]MC_Status_Trigger\",   # Triger1\n\t\t\t\n\t\t\t\"[.]../../../../../../Business_Code\",  # BG_Id\n\t\t\t\"[.]../../../../../Plant_Code\",        # Plant\n\t\t\t\"[.]../../../../Cell_Code\",\n\t\t\t\"[.]../../../Line_Code\",                # Line\n\t\t\t\"[.]../../Machine_Code\",             # Machine\n\t\t\t\n\t\t\t\"[.]../../OPC/From/Operator_Id\",                   # Operator\n\t\t\t\"[.]../../../../../Shift_Id\",                                         # Shift\n\t\t\t\"[.]../../../../../Shift_Hour\",                                    # Shift_Hour\n\t\t\t\"[.]../../../../../../../Hour\",                                                                # Hour\n\t\t\t\"[.]../../../../../../../Date_hour\",                                                           # Datetime_Hour\n\t\t\t\n\t\t\t\"[.]../../OPC/From/Part_Id\",                    # Part_Id\n\t\t\t\"[.]../OEE/OEE_Start\",                  # Start_Time\n\t\t\t\"[.]../../../../../DateTime_OEE\",                                  # end_Time\n\t\t\t\n\t\t\t\"[.]../Operating_Time/Stop_Timer\",       # StopTime1\n\t\t\t\"[.]../Operating_Time/Run_Timer\",        # run_time\n\t\t\t\"[.]../Operating_Time/Off_Timer\",        # Off_time\n\t\t\t\n\t\t\t\"[.]../Count/G_Count\",               # Good_Count\n\t\t\t\"[.]../Count/R_Count\",                   # Rejection\n\t\t\t\"[.]Breakdown_ID\",    # Reason\n\t\t\t\"[.]../Operating_Time/Idle_Timer\",       # downTime1\n\t\t\t\n\t\t\t\"[.]../Operating_Time/Shift_Time\",             # Shifttime\n\t\t\t\"[.]../Operating_Time/DT_Type\",         # DT_type\n\t\t\t\"[.]../OEE/CT\",                 # idle_Cycle_time\n\t\t\t\n\t\t\t\"[.]../Count/CT_E\",                      # CTE\n\t\t\t\"[.]../Count/CT_H\",                      # CTH\n\t\t\t\"[.]../Count/CT_L\",                      # CTL\n\t\t\t\n\t\t\t\"[.]../Operating_Time/HT_Time\",   # Handling_time_tag\n\t\t\t\"[.]../Operating_Time/MC_Time\"     # Maching_time_tag\n\t\t]\n\t\t\n\t\t#result \u003d OEE.OEE_Triggers.log_oee_data_1Hou(tags_to_read)\n\t\tresult \u003d OEE_NEW.OEE_Triggers.log_oee_data_1Hou(tags_to_read)\t\n\t\tif result:\n\t\t\ttag_write_values \u003d result[:-1]         # First 13 values\n\t\t\tdt_type \u003d result[-1]                   # 14th value is DT_type\n\t\t\t\n\t\t\tresult_tags \u003d [\n\t\t\t\t\"[.]../OEE/OEE_Start\",\n\t\t\t\t\"[.]../Count/G_Count\",\n\t\t\t\t\"[.]../Count/R_Count\",\n\t\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Stop_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Idle_Timer\",\n\t\t\t\t\"[.]../Count/CT_E\",\n\t\t\t\t\"[.]../Count/CT_H\",\n\t\t\t\t\"[.]../Count/CT_L\",\n\t\t\t\t\"[.]../Operating_Time/HT_Time\",\n\t\t\t\t\"[.]../Operating_Time/MC_Time\",\n\t\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Shift_Time\"\n\t\t\t]\n\t\t\t\n\t\t\tsystem.tag.writeBlocking(result_tags, tag_write_values)\n\t\t\t\n\t\t\tif dt_type \u003d\u003d 2:\n\t\t\t\tsystem.tag.writeBlocking(\n\t\t\t\t\t[\"[.]../Operating_Time/Minor_Loss\"],\n\t\t\t\t\t[1]\n\t\t\t\t)"
                                }
                              ],
                              "expression": "getHour24(now())",
                              "name": "OEE_1hour",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tI_Limit \u003d system.tag.read(\"[.]Idel_Limit\").value\n\tHT_Act \u003d currentValue.value\n\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif (I_Limit\u003cHT_Act) and OEE_On\u003d\u003d1:\n\t\tsystem.tag.write(\"[.]../OEE/HT_Actual\",I_Limit)\n\telse:\n\t\tsystem.tag.write(\"[.]../OEE/HT_Actual\",HT_Act)"
                                }
                              ],
                              "sourceTagPath": "[.]../../OPC/From/LU_Time",
                              "name": "HT_Actual",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tM_Tracking\u003dsystem.tag.read(\"[.]../../Machine_Tracking\").value\n\tif OEE_On\u003d\u003d1 and M_Tracking\u003d\u003d1:\n\t\ttags_to_read \u003d [\n\t\t    \"[.]../Count/OEE_On\",\n\t\t    \"[.]MC_Status_Trigger\",\n\t\t    \"[.]../Count/Part_Per_Cycle\",\n\t\t    \"[.]../Count/G_Count\",\n\t\t    \"[.]../../OPC/From/MT_Actual\",\n\t\t    \"[.]../OEE/HT_Actual\",\n\t\t    \"[.]../Operating_Time/MC_Time\",\n\t\t    \"[.]../Operating_Time/HT_Time\",\n\t\t    \"[.]../OEE/CT_Actual\",\n\t\t    \"[.]../OEE/CT\",\n\t\t    \"[.]../Count/CT_H\",\n\t\t    \"[.]../Count/CT_L\",\n\t\t    \"[.]../Count/CT_E\",\n\t\t    \"[.]../../../../../../Business_Code\",\n\t\t    \"[.]../../../../../Plant_Code\",\n\t\t    \"[.]../../../../Cell_Code\",\n\t\t    \"[.]../../../Line_Code\",\n\t\t    \"[.]../../Machine_Code\",\n\t\t    \"[.]../../../../../Shift_Id\",\n\t\t    \"[.]../../../../../../../Hour\",\n\t\t    \"[.]../../OPC/From/Part_Id\",\n\t\t    \"[.]../../OPC/From/Operator_Id\",\n\t\t    \"[.]Shot_Count\",\n\t\t    \"[.]../OEE/Cum_CT\",\n\t\t    \"[.]../../../../../DateTime_OEE\",\n\t\t    \"[.]../../../../../../Rejection\",\n\t\t    \"[.]Idel_Limit\"\n\t\t   \n\t\t]\n\t\t\n\t\t#OEE_On, MC_Status, Cycle_partcount, Good_Count, HT_Actual, MT_Actual, Handling_time, Maching_time, Cycle_time_act, CycleTime, CTH, CTL, CTE,\n\t\t#Enterprise_No, BG_No, Plant_No, Line_No, Machine_No, Shift, Hour, Operator, Part_ID, DateTime_OEE, Rejection\n\t\t\n\t\t#result \u003d OEE.P_Count.Shot_Count(tags_to_read)\n\t\tresult \u003d OEE_NEW.P_Count.Shot_Count(tags_to_read)\n\t\n\t\tif result:\n\t\t    good_count, ct_actual, ht_final, mt_final, cth, ctl, cte \u003d result\n\t\t\n\t\t    system.tag.writeBlocking([\n\t\t        \"[.]../Count/G_Count\",\n\t\t        \"[.]../OEE/CT_Actual\",\n\t\t        \"[.]../Operating_Time/HT_Time\",\n\t\t        \"[.]../Operating_Time/MC_Time\",\n\t\t        \"[.]../Count/CT_H\",\n\t\t        \"[.]../Count/CT_L\",\n\t\t        \"[.]../Count/CT_E\",\n\t\t    ], [good_count, ct_actual, ht_final, mt_final, cth, ctl, cte])"
                                }
                              ],
                              "sourceTagPath": "[.]../../OPC/From/Good_Count",
                              "name": "Shot_Count",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "expr",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dOEE_on\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tM_Tracking\u003d system.tag.read(\"[.]../../Machine_Tracking\").value\n\tif currentValue.value \u003d\u003d 1 and OEE_On\u003d\u003d1 and M_Tracking\u003d\u003d1:\n\t\ttags_to_read \u003d [\n\t\t\t\"[.]../../../../../../Business_Code\",\n\t\t\t\"[.]../../../../../Plant_Code\",\n\t\t\t\"[.]../../../../Cell_Code\",\n\t\t\t\"[.]../../../Line_Code\",\n\t\t\t\"[.]../../Machine_Code\",\n\t\t\t\"[.]../../../../../Shift_Id\",\n\t\t\t\"[.]../../../../../Shift_Hour\",\n\t\t\t\"[.]../../../../../DateTime_OEE\",\n\t\t\t\"[.]../Count/OEE_On\",\n\t\t\t\"[.]../Operating_Time/MC_Status_Act\",\n\t\t\t\"[.]../../OPC/From/Operator_Id\",\n\t\t\t\"[.]../../../../../../../Hour\",\n\t\t\t\"[.]../../../../../../../Date_hour\",\n\t\t\t\"[.]../../OPC/From/Part_Id\",\n\t\t\t\"[.]../OEE/OEE_Start\",\n\t\t\t\"[.]../../../../../DateTime_OEE\",\n\t\t\t\"[.]../Operating_Time/Stop_Timer\",\n\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\"[.]../Count/G_Count\",\n\t\t\t\"[.]../Count/R_Count\",\n\t\t\t\"[.]Breakdown_ID\",\n\t\t\t\"[.]../Operating_Time/Idle_Timer\",\n\t\t\t\"[.]../Operating_Time/Shift_Time\",\n\t\t\t\"[.]../OEE/CT\",\n\t\t\t\"[.]../Count/CT_E\",\n\t\t\t\"[.]../Count/CT_H\",\n\t\t\t\"[.]../Count/CT_L\",\n\t\t\t\"[.]../Operating_Time/HT_Time\",\n\t\t\t\"[.]../Operating_Time/MC_Time\"\n\t\t]\n\t\t# Call the function\n\t\t#result_values \u003d OEE.OEE_Triggers.log_oee_data_15Min(tags_to_read)\n\t\tresult_values \u003d OEE_NEW.OEE_Triggers.log_oee_data_15Min(tags_to_read)\n\t\t\n\t\t# If the function returned valid data, write to tags\n\t\tif result_values:\n\t\t\treset_tags \u003d [\n\t\t\t\t\"[.]../OEE/OEE_Start\",\n\t\t\t\t\"[.]../Count/G_Count\",\n\t\t\t\t\"[.]../Count/R_Count\",\n\t\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Stop_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Idle_Timer\",\n\t\t\t\t\"[.]../Count/CT_E\",\n\t\t\t\t\"[.]../Count/CT_H\",\n\t\t\t\t\"[.]../Count/CT_L\",\n\t\t\t\t\"[.]../Operating_Time/HT_Time\",\n\t\t\t\t\"[.]../Operating_Time/MC_Time\",\n\t\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Shift_Time\",\n\t\t\t\t\"[.]../../OPC/To/Availability\",\n\t\t\t\t\"[.]../../OPC/To/Quality\",\n\t\t\t\t\"[.]../../OPC/To/Performance\",\n\t\t\t\t\"[.]../../OPC/To/OEE\"           \n\t\t\t]\n\t\t\t\n\t\t\tsystem.tag.writeBlocking(reset_tags, result_values)"
                                }
                              ],
                              "expression": "getMinute(now()) % 15 \u003d 0 \u0026\u0026 getSecond(now()) \u003d 0",
                              "name": "OEE_15Mins",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tHT_Actual \u003d system.tag.read(\"[.]HT_Timer\").value\n\tHT_Standard \u003d int(system.tag.read(\"[.]../OEE/HT_Std\").value)\n\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\t#if (HT_Actual \u003e\u003d HT_Standard) and OEE_On\u003d\u003d1:\n\t\t#system.tag.write(\"[.]../Operating_Time/MC_Status_Act\",2)\n\t\n"
                                }
                              ],
                              "name": "HT_Timer",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tM_Tracking\u003dsystem.tag.read(\"[.]../../Machine_Tracking\").value\n\tif OEE_On\u003d\u003d1 and M_Tracking\u003d\u003d1:\n\t\ttags_to_read \u003d [\n\t\t    \"[.]../Count/OEE_On\",\n\t\t    \"[.]MC_Status_Trigger\",\n\t\t    \"[.]../Count/R_Count\",\n\t\t    \"[.]../Count/Part_Per_Cycle\",\n\t\t    \"[.]../../OPC/From/MT_Actual\",\n\t\t    \"[.]../OEE/HT_Actual\",\n\t\t    \"[.]../Operating_Time/MC_Time\",\n\t\t    \"[.]../Operating_Time/HT_Time\",\n\t\t    \"[.]../OEE/Cum_CT\",\n\t\t    \"[.]../Count/CT_H\",\n\t\t    \"[.]../Count/CT_L\",\n\t\t    \"[.]../Count/CT_E\",\n\t\t    \"[.]../../../../../../Business_Code\",\n\t\t    \"[.]../../../../../Plant_Code\",\n\t\t    \"[.]../../../../Cell_Code\",\n\t\t    \"[.]../../../Line_Code\",\n\t\t    \"[.]../../Machine_Code\",\n\t\t    \"[.]../../../../../Shift_Id\",\n\t\t    \"[.]../../../../../../../Hour\",\n\t\t    \"[.]../../OPC/From/Part_Id\",\n\t\t    \"[.]../../OPC/From/Operator_Id\",\n\t\t    \"[.]../../../../../DateTime_OEE\",\n\t\t    \"[.]../Count/Rejection_Act\",\n\t\t    \"[.]Idel_Limit\"\n\t\t    \n\t\t]\n\t\t\n\t\t#OEE_On, MC_Status, Cycle_partcount, Good_Count, HT_Actual, MT_Actual, Handling_time, Maching_time, Cycle_time_act, CycleTime, CTH, CTL, CTE,\n\t\t#Enterprise_No, BG_No, Plant_No, Line_No, Machine_No, Shift, Hour, Operator, Part_ID, DateTime_OEE, Rejection\n\t\t\n\t\t#result \u003d OEE.P_Count.Rejection_Count(tags_to_read)\n\t\tresult \u003d OEE_NEW.P_Count.Rejection_Count(tags_to_read)\n\t\t\n\t\tif result:\n\t\t    rejection_count, ct_actual, ht_final, mt_final, cth, ctl, cte, R_id \u003d result\n\t\t\n\t\t    system.tag.writeBlocking([\n\t\t        \"[.]../Count/R_Count\",\n\t\t        \"[.]../OEE/CT_Actual\",\n\t\t        \"[.]../Operating_Time/HT_Time\",\n\t\t        \"[.]../Operating_Time/MC_Time\",\n\t\t        \"[.]../Count/CT_H\",\n\t\t        \"[.]../Count/CT_L\",\n\t\t        \"[.]../Count/CT_E\",\n\t\t        \"[.]../Count/Rejection_Act\"\n\t\t    ], [rejection_count, ct_actual, ht_final, mt_final, cth, ctl, cte, R_id])"
                                }
                              ],
                              "sourceTagPath": "[.]../../OPC/From/Bad_Count",
                              "name": "Rejection_Count",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "db",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_ProdOff \u003d system.tag.read(\"[.]PS_Planner\").value\t\t\t\n\t\n\tif OEE_ProdOff !\u003d 0:\n\t\t# If OEE_ProdOff is not 0, reset certain tags\n\t\tsystem.tag.write(\"[.]../Count/OEE_On\", 0)\n\t\t#system.tag.write(\"[default]Tags/OEE/Enterprise/BG4/Plant1/Line1/Machine1/Operating_time/TST\", 0)\n\telif OEE_ProdOff \u003d\u003d 0:\n\t\t# If OEE_ProdOff is 0, update certain tags\n\t\tsystem.tag.write(\"[.]../Count/OEE_On\", 1)\n\t\t\t"
                                }
                              ],
                              "datasource": "OEE_NEW",
                              "query": "select isnull ((\r\nSELECT \r\nCASE \r\nWHEN {[.]../../../../../Shift_Id} \u003d 1 THEN shift_1 \r\nWHEN {[.]../../../../../Shift_Id} \u003d 2 THEN shift_2 \r\nWHEN {[.]../../../../../Shift_Id} \u003d 3 THEN shift_3 \r\nEND AS Shift_Status FROM [OEE_NEW].[dbo].[PRODUCTION_OFF_SCHEDULE] \r\nWHERE business_id \u003d {[.]../../../../../../Business_Code} \r\nAND plant_id \u003d {[.]../../../../../Plant_Code} \r\nAND cell_id \u003d {[.]../../../../Cell_Code} \r\nAND line_id \u003d {[.]../../../Line_Code} \r\nAND machine_code \u003d {[.]../../Machine_Code} \r\nAND CAST(date_scheduled AS DATE) \u003d \u0027{[.]../../../../../DateTime_OEE}\u0027\r\n), 0)",
                              "name": "PS_Planner",
                              "executionMode": "FixedRate",
                              "executionRate": 15000,
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "reference",
                              "eventScripts": [
                                {
                                  "eventid": "qualityChanged",
                                  "script": "\tMS_Qual \u003d currentValue.quality\n\tif currentValue.quality.isGood():\n\t\tsystem.tag.write(\"[.]Off_Tag\",0)\n\telse:\n\t\tsystem.tag.write(\"[.]Off_Tag\",1)"
                                },
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tMC_Status \u003d currentValue.value\n\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\t#system.tag.write(\"[default]Tags/OEE/Enterprise/BG4/Plant2/Line1/Machine1/Operating_time/Mc_status\",a)\n\tsystem.tag.write(\"[.]../Operating_Time/MC_Status_Act\",MC_Status)\n\tsystem.tag.write(\"[.]HT_Timer\",0)\n\tif MC_Status \u003d\u003d 1 and OEE_On\u003d\u003d1:\n\t\tsystem.tag.write(\"[.]../Operating_Time/MC_Status_Act\",1)\n\t\tsystem.tag.write(\"[.]HT_Timer\",0)\n\t\t#system.tag.write(\"[default]Tags/OEE/Enterprise/BG4/Plant2/Line1/Machine1/Operating_time/Mc_status_Act 1\",1)\n\t\t\t\n\t"
                                }
                              ],
                              "sourceTagPath": "[.]../../OPC/From/Machine_Status",
                              "name": "MC_Status_Trigger",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "expr",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_On\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif OEE_On\u003d\u003d1:\n\t\ttags_to_read \u003d [\n\t\t\t\"[.]../../Machine_Tracking\",\n\t\t\t\"[.]Off_Tag\",\n\t\t\t\"[.]../Operating_Time/MC_Status_Act\",\n\t\t\t\"[.]DT_Timer\",\n\t\t\t\"[.]MC_Status_Trigger\",\n\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\"[.]HT_Timer\"\n\t\t\t\n\t\t]\n\t\ttags \u003d [tag.value for tag in system.tag.readBlocking(tags_to_read)]\n\t\t\n\t\tif tags[0] !\u003d 1:\n\t\t\treturn\n\t\tb \u003d tags[1]\n\t\ta \u003d int(tags[2])\n\t\tc \u003d tags[3]\n\t\te \u003d int(tags[4])\n\t\toff, run, ht \u003d tags[5], tags[6], tags[7]\n\t\tupdates \u003d []\n\t\tif b \u003d\u003d 1:\n\t\t\tsystem.tag.write(\"[.]../Operating_Time/Off_Timer\" , off + 1)\n\t\telif a \u003d\u003d 1 and b !\u003d 1:\n\t\t\tsystem.tag.write(\"[.]../Operating_Time/Run_Timer\", run + 1)\n\t\telif a \u003d\u003d 2 and b !\u003d 1:\n\t\t\tsystem.tag.write(\"[.]DT_Timer\", c + 1)\n\t\telif e \u003d\u003d 2 and b !\u003d 1:\n\t\t\tsystem.tag.write(\"[.]HT_Timer\", ht + 1)\n\t\t#if Write_Tag:\n\t\t\t#system.tag.writeBlocking([item[0] for item in Write_Tag], [item[1] for item in Write_Tag])\n\t\t\t\n\t\t\t\n\t\t"
                                }
                              ],
                              "expression": "getSecond(now())",
                              "name": "Seconds",
                              "executionMode": "FixedRate",
                              "executionRate": 500,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tMC_status \u003d system.tag.read(\"[.]../Operating_Time/MC_Status_Act\").value\n\tOFF_Tag \u003d system.tag.read(\"[.]Off_Tag\").value\n\tT_Stamp \u003d system.tag.read(\"[.]../../../../../DateTime_OEE\").value\n\tOEE_On\u003dOEE_on\u003dsystem.tag.read(\"[.]../Count/OEE_On\").value\n\tif MC_status \u003d\u003d 1 and OFF_Tag \u003d\u003d0 and OEE_On\u003d\u003d1:\n\t\tsystem.tag.write(\"[.]../Operating_Time/DT_Stop\",T_Stamp)\n\t\n\ttags_to_read \u003d [\n\t\t\"[.]../../../../../Shift_Id\",\n\t\t\"[.]../Operating_Time/MC_Status_Act\",\n\t\t\"[.]Off_Tag\",\n\t\t\"[.]../../../../../DateTime_OEE\",\n\t\t\"[.]../../../../../../Business_Code\",\n\t\t\"[.]../../../../../Plant_Code\",\n\t\t\"[.]../../../../Cell_Code\",\n\t\t\"[.]../../../Line_Code\",\n\t\t\"[.]../../Machine_Code\",\n\t\t\"[.]../../OPC/From/Operator_Id\",\n\t\t\"[.]../../../../../../../Hour\",\n\t\t\"[.]../../../../../Shift_Hour\",\n\t\t\"[.]../../OPC/From/Part_Id\",\n\t\t\"[.]../Operating_Time/DT_Start\",\n\t\t\"[.]../Operating_Time/DT_Start_Act\",\n\t\t\"[.]Idel_Limit\",\n\t\t\"[.]../Operating_Time/DT_Stop\",\n\t\t\"[.]../../../../../../../Day\",\n\t\t\"[.]Breakdown_ID\"\n\t]\n\t#write_value \u003d OEE.Operating_Time.offtime(tags_to_read)\n\twrite_value \u003d OEE_NEW.Operating_Time.offtime(tags_to_read)\n\tif write_value and OEE_on\u003d\u003d1:\n\t\tsystem.tag.writeBlocking([item[0] for item in write_value], [item[1] for item in write_value])"
                                }
                              ],
                              "name": "Off_Tag",
                              "value": 0,
                              "tagType": "AtomicTag"
                            }
                          ]
                        },
                        {
                          "name": "OEE",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "valueSource": "memory",
                              "dataType": "DateTime",
                              "name": "OEE_Start",
                              "formatString": "yyyy-MM-dd h:mm:ss aa",
                              "value": 1735670220000,
                              "tagType": "AtomicTag"
                            },
                            {
                              "datasource": {
                                "bindType": "parameter",
                                "binding": "{DB}"
                              },
                              "valueSource": "db",
                              "query": "Select isnull((Select handling_time from [OEE_NEW].[dbo].[M_PRODUCT] where business_id \u003d {[.]../../../../../../Business_Code} and plant_id \u003d {[.]../../../../../Plant_Code} and cell_id \u003d {[.]../../../../Cell_Code} and line_id \u003d {[.]../../../Line_Code} and machine_code \u003d {[.]../../Machine_Code} and product_id \u003d {[.]../../OPC/From/Part_Id}),0)",
                              "name": "HT_Std",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "sourceTagPath": "0",
                              "name": "PS_Planner",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "datasource": {
                                "bindType": "parameter",
                                "binding": "{DB}"
                              },
                              "valueSource": "db",
                              "query": "Select isnull((Select cycle_time from [OEE_NEW].[dbo].[M_PRODUCT] where business_id \u003d {[.]../../../../../../Business_Code} and plant_id \u003d {[.]../../../../../Plant_Code} and cell_id \u003d {[.]../../../../Cell_Code} and line_id \u003d {[.]../../../Line_Code} and machine_code \u003d {[.]../../Machine_Code} and product_id \u003d {[.]../../OPC/From/Part_Id}),0)",
                              "name": "CT",
                              "tagType": "AtomicTag"
                            },
                            {
                              "datasource": {
                                "bindType": "parameter",
                                "binding": "{DB}"
                              },
                              "valueSource": "db",
                              "query": "Select isnull((Select cumulative_cycle_time from [OEE_NEW].[dbo].[M_PRODUCT] where business_id \u003d {[.]../../../../../../Business_Code} and plant_id \u003d {[.]../../../../../Plant_Code} and cell_id \u003d {[.]../../../../Cell_Code} and line_id \u003d {[.]../../../Line_Code} and machine_code \u003d {[.]../../Machine_Code} and product_id \u003d {[.]../../OPC/From/Part_Id}),0)",
                              "name": "Cum_CT",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "dataType": "DateTime",
                              "name": "OEE_Stop",
                              "formatString": "yyyy-MM-dd h:mm:ss aa",
                              "value": 1735670220000,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "CT_Actual",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "HT_Actual",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "datasource": {
                                "bindType": "parameter",
                                "binding": "{DB}"
                              },
                              "valueSource": "db",
                              "dataType": "String",
                              "query": "Select isnull((Select product_name from [OEE_NEW].[dbo].[M_PRODUCT] where business_id \u003d {[.]../../../../../../Business_Code} and plant_id \u003d {[.]../../../../../Plant_Code} and cell_id \u003d {[.]../../../../Cell_Code} and line_id \u003d {[.]../../../Line_Code} and machine_code \u003d {[.]../../Machine_Code} and product_id \u003d {[.]../../OPC/From/Part_Id}),0)",
                              "name": "Part_Model",
                              "tagType": "AtomicTag"
                            }
                          ]
                        },
                        {
                          "name": "Operating_Time",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "valueSource": "memory",
                              "name": "Stop_Timer",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Run_Timer",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "MC_Time",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Minor_Loss",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "DT_Reason",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "DT_Type",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "dataType": "DateTime",
                              "name": "DT_Stop",
                              "formatString": "yyyy-MM-dd h:mm:ss aa",
                              "value": 1735670220000,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "HT_Time",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "dataType": "DateTime",
                              "name": "DT_Start",
                              "formatString": "yyyy-MM-dd h:mm:ss aa",
                              "value": 1735670220000,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Down_Time",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "dataType": "DateTime",
                              "name": "DT_Start_Act",
                              "formatString": "yyyy-MM-dd h:mm:ss aa",
                              "value": 1735670220000,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "dataType": "Int4",
                              "name": "Shift_Time",
                              "formatString": "#,##0.##",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Idle_Timer",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Off_Timer",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "eventScripts": [
                                {
                                  "eventid": "valueChanged",
                                  "script": "\tOEE_ON \u003d system.tag.read(\"[.]../Count/OEE_On\").value\n\tMACHINE_Tracking \u003d system.tag.read(\"[.]../../Machine_Tracking\").value\n\tMachine_Status \u003d system.tag.read(\"[.]MC_Status_Act\").value\n\tT_Stamp \u003d system.tag.read(\"[.]../../../../DateTime_OEE\").value\n\tif OEE_ON \u003d\u003d 1 and MACHINE_Tracking \u003d\u003d 1 and Machine_Status \u003d\u003d 1:\n\t\tsystem.tag.write(\"[.]DT_Stop\",T_Stamp)\n\ttags_to_read \u003d [\n        \"[.]../Count/OEE_On\",\n        \"[.]../../Machine_Tracking\",\n        \"[.]MC_Status_Act\",\n        \"[.]../Triggers/Off_Tag\",\n        \"[.]../../../../../DateTime_OEE\",\n        \"[.]DT_Start\",\n        \"[.]DT_Start_Act\",\n        \"[.]../../../../../../Business_Code\",\n        \"[.]../../../../../Plant_Code\",\n        \"[.]../../../../Cell_Code\",\n        \"[.]../../../Line_Code\",\n        \"[.]../../Machine_Code\",\n        \"[.]../../OPC/From/Operator_Id\",\n        \"[.]../../../../../Shift_Id\",\n        \"[.]../../../../../Shift_Hour\",\n        \"[.]../../../../../../../Hour\",\n        \"[.]../../../../../../../Date_hour\",\n        \"[.]Shift_Time\",\n        \"[.]../OEE/OEE_Start\",\n        \"[.]Idle_Timer\",\n        \"[.]Stop_Timer\",\n        \"[.]Run_Timer\",\n        \"[.]Off_Timer\",\n        \"[.]../Count/G_Count\",\n        \"[.]../Count/R_Count\",\n        \"[.]../../OPC/From/Part_Id\",\n        \"[.]DT_Stop\",\n        \"[.]../Triggers/Idel_Limit\",\n        \"[.]DT_Reason\",\n        \"[.]../OEE/CT\",\n        \"[.]../Count/CT_H\",\n        \"[.]../Count/CT_E\",\n        \"[.]../Count/CT_L\",\n        \"[.]HT_Time\",\n        \"[.]MC_Time\",\n        \"[.]../../../../../DateTime_OEE\"\n    ]\n    \n\t#OEE.MC_Status_Act.MC_Status_Act(tags_to_read)\n\tOEE_NEW.MC_Status_Act.MC_Status_Act(tags_to_read)\n    "
                                }
                              ],
                              "name": "MC_Status_Act",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Reason_UD",
                              "value": 0,
                              "tagType": "AtomicTag"
                            }
                          ]
                        },
                        {
                          "name": "Count",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "valueSource": "memory",
                              "name": "G_Count",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "datasource": {
                                "bindType": "parameter",
                                "binding": "{DB}"
                              },
                              "valueSource": "db",
                              "query": "Select isnull((Select part_per_cycle from [OEE_NEW].[dbo].[M_PRODUCT] where business_id \u003d {[.]../../../../../../Business_Code} and plant_id \u003d {[.]../../../../../Plant_Code} and cell_id \u003d {[.]../../../../Cell_Code} and line_id \u003d {[.]../../../Line_Code} and machine_code \u003d {[.]../../Machine_Code} and product_id \u003d {[.]../../OPC/From/Part_Id}),0)",
                              "name": "Part_Per_Cycle",
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "CT_L",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Rejection_Act",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "CT_E",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "CT_H",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "Idel_Time",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "OEE_On",
                              "value": 1,
                              "tagType": "AtomicTag"
                            },
                            {
                              "valueSource": "memory",
                              "name": "R_Count",
                              "value": 0,
                              "tagType": "AtomicTag"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003d{Machine_Path}_Connection_Status"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Machine_Communication",
                      "tagType": "AtomicTag"
                    },
                    {
                      "name": "OPC",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "From",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dMachine_Status_{Machine_ID}"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "Machine_Status",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dPart_Model_{Machine_ID}"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "Part_Id",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dOperator_ID_{Machine_ID}"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "Operator_Id",
                              "value": 9999,
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dMachine_Breakdown_Reason_{Machine_ID}"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "BD_Reason",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dRejection_Reason_{Machine_ID}"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "Rejection_Reason",
                              "value": 0,
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dMachine_Cycle_Time_{Machine_ID}"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "MT_Actual",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dL_and_U_{Machine_ID}"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "LU_Time",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003d{Machine_Path}_Connection_Status"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "memory",
                              "name": "GOC_Com",
                              "value": 1,
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dProduct_Count_{Machine_ID}"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "Good_Count",
                              "tagType": "AtomicTag"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dRejection_Count_{Machine_ID}"
                              },
                              "opcServer": {
                                "bindType": "parameter",
                                "binding": "{Gateway}"
                              },
                              "valueSource": "opc",
                              "name": "Bad_Count",
                              "tagType": "AtomicTag"
                            }
                          ]
                        },
                        {
                          "name": "To",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/RESET_{Machine_ID}"
                              },
                              "valueSource": "memory",
                              "name": "Shift_Reset",
                              "tagType": "AtomicTag",
                              "opcServer": "Ignition OPC UA Server"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/QUAL_{Machine_ID}"
                              },
                              "valueSource": "memory",
                              "name": "Quality",
                              "tagType": "AtomicTag",
                              "opcServer": "Ignition OPC UA Server"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/OEE_{Machine_ID}"
                              },
                              "valueSource": "memory",
                              "name": "OEE",
                              "tagType": "AtomicTag",
                              "opcServer": "Ignition OPC UA Server"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/IWT_{Machine_ID}"
                              },
                              "valueSource": "memory",
                              "name": "IW_Time",
                              "tagType": "AtomicTag",
                              "opcServer": "Ignition OPC UA Server"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/PER_{Machine_ID}"
                              },
                              "valueSource": "memory",
                              "name": "Performance",
                              "tagType": "AtomicTag",
                              "opcServer": "Ignition OPC UA Server"
                            },
                            {
                              "opcItemPath": {
                                "bindType": "parameter",
                                "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/AVA_{Machine_ID}"
                              },
                              "valueSource": "memory",
                              "name": "Availability",
                              "tagType": "AtomicTag",
                              "opcServer": "Ignition OPC UA Server"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "valueSource": "db",
                      "datasource": "OEE_NEW",
                      "query": "SELECT Data_Tracking\r\nFROM [OEE_NEW].[dbo].[M_OVERALL_MASTER] \r\nWHERE Business_ID \u003d {[.]../../../../Business_Code}\r\n  AND Plant_ID\u003d {[.]../../../Plant_Code}\r\n  AND Cell_ID \u003d {[.]../../Cell_Code}\r\n  AND Line_ID \u003d {[.]../Line_Code}\r\n  AND Machine_Code \u003d {[.]Machine_Code}",
                      "name": "Machine_Tracking",
                      "executionMode": "FixedRate",
                      "executionRate": 15000,
                      "value": 1,
                      "tagType": "AtomicTag"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "OEE_NEW",
      "tagType": "Folder",
      "tags": [
        {
          "name": "Machine RBL",
          "typeId": "",
          "parameters": {
            "Machine_DataBlock": {
              "dataType": "Integer"
            },
            "Machine_ID": {
              "dataType": "String"
            },
            "Machine_Name": {
              "dataType": "String"
            },
            "Machine_Path": {
              "dataType": "String",
              "value": ""
            },
            "DB": {
              "dataType": "String"
            },
            "Gateway": {
              "dataType": "String"
            },
            "Machine_Code": {
              "dataType": "Integer"
            }
          },
          "tagType": "UdtType",
          "tags": [
            {
              "valueSource": "memory",
              "name": "Machine_Tracking",
              "value": 0,
              "tagType": "AtomicTag"
            },
            {
              "opcItemPath": {
                "bindType": "parameter",
                "binding": "ns\u003d1;s\u003d[{Machine_Name}][Diagnostics]/Connected"
              },
              "opcServer": {
                "bindType": "parameter",
                "binding": "{Gateway}"
              },
              "valueSource": "opc",
              "name": "Machine_Communication",
              "tagType": "AtomicTag"
            },
            {
              "name": "OPC",
              "tagType": "Folder",
              "tags": [
                {
                  "name": "From",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "ns\u003d1;s\u003d[{Machine_Name}][Diagnostics]/Connected"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "GOC_Com",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I0.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Machine_Status",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I10.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "LU_Time",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I26.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Rejection_Reason",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I6.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "BD_Reason",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I2.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Good_Count",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I12.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Operator_Id",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I4.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Bad_Count",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I8.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "MT_Actual",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I14.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Part_Id",
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "To",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I22.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Quality",
                      "tagType": "AtomicTag",
                      "enabled": false
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I18.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Availability",
                      "tagType": "AtomicTag",
                      "enabled": false
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I20.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Performance",
                      "tagType": "AtomicTag",
                      "enabled": false
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I24.0"
                      },
                      "valueSource": "opc",
                      "name": "Shift_Reset",
                      "tagType": "AtomicTag",
                      "enabled": false,
                      "opcServer": "Ignition OPC UA Server"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I28.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "IW_Time",
                      "tagType": "AtomicTag",
                      "enabled": false
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "[{Machine_Name}]DB{Machine_DataBlock},I16.0"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "OEE",
                      "tagType": "AtomicTag",
                      "enabled": false
                    }
                  ]
                }
              ]
            },
            {
              "name": "Calculation",
              "tagType": "Folder",
              "tags": [
                {
                  "name": "OEE",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "memory",
                      "dataType": "DateTime",
                      "name": "OEE_Start",
                      "formatString": "yyyy-MM-dd h:mm:ss aa",
                      "value": 1735670220000,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "HT_Actual",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "db",
                      "query": "select isnull((Select CycleTime_Cumulative from OEE_ProductMaster where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Cell_ID \u003d {[.]../../../../Cell_Code} and Line_ID \u003d {[.]../../../Line_Code} and Machine_Code \u003d {[.]../../Machine_Code} and Product_ID \u003d {[.]../../OPC/From/Part_Id}),0)",
                      "name": "Cum_CT",
                      "tagType": "AtomicTag"
                    },
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "db",
                      "query": "Select isnull((Select Handling_Time from OEE_ProductMaster where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Cell_ID \u003d {[.]../../../../Cell_Code} and Line_ID \u003d {[.]../../../Line_Code} and Machine_Code \u003d {[.]../../Machine_Code} and Product_ID \u003d {[.]../../OPC/From/Part_Id}),0)",
                      "name": "HT_Std",
                      "tagType": "AtomicTag"
                    },
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "db",
                      "dataType": "String",
                      "query": "Select isnull((Select Product_Name from OEE_ProductMaster where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Cell_ID \u003d {[.]../../../../Cell_Code} and Line_ID \u003d {[.]../../../Line_Code} and Machine_Code \u003d {[.]../../Machine_Code} and Product_ID \u003d {[.]../../OPC/From/Part_Id}),\u0027No Part Model in Master\u0027)",
                      "name": "Part_Model",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "DateTime",
                      "name": "OEE_Stop",
                      "formatString": "yyyy-MM-dd h:mm:ss aa",
                      "value": 1735670220000,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "sourceTagPath": "0",
                      "name": "PS_Planner",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "CT_Actual",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "db",
                      "query": "select isnull((Select CycleTime from OEE_ProductMaster where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Cell_ID \u003d {[.]../../../../Cell_Code} and Line_ID \u003d {[.]../../../Line_Code} and Machine_Code \u003d {[.]../../Machine_Code} and Product_ID \u003d {[.]../../OPC/From/Part_Id}),0)",
                      "name": "CT",
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "Count",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "db",
                      "query": "Select isnull((Select PartPerCount from OEE_ProductMaster where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Cell_ID \u003d {[.]../../../../Cell_Code} and Line_ID \u003d {[.]../../../Line_Code} and Machine_Code \u003d {[.]../../Machine_Code} and Product_ID \u003d {[.]../../OPC/From/Part_Id}),0)",
                      "name": "Part_Per_Cycle",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Idel_Time",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "R_Count",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "CT_E",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "CT_H",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "G_Count",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "OEE_On",
                      "value": 1,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Rejection_Act",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "CT_L",
                      "value": 0,
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "Triggers",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "memory",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tsystem.tag.write(\"[.]../Count/Idel_Time\",currentValue.value)"
                        }
                      ],
                      "query": "Select Idle_Time from Idle_Time where Eg_ID \u003d 1 and Bg_ID \u003d 4 and Plant_Id \u003d 2 and Line_Id \u003d 1 and Machine_Id \u003d 1\r\n\r\n",
                      "name": "Idel_Limit",
                      "value": 300,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "expr",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\ttags_to_read \u003d [\n\t\t\"[.]../Count/OEE_On\",                    # OEE_On\n\t\t\"[.]../../Machine_Tracking\",                 # MC_Stat\n\t\t\"[.]OEE_1hour\",               # Triger\n\t\t\"[.]MC_Status_Trigger\",   # Triger1\n\t\t\n\t\t\"[.]../../../../../../Business_Code\",  # BG_Id\n\t\t\"[.]../../../../../../Business_Name\",\n\t\t\"[.]../../../../../Plant_Code\",        # Plant\n\t\t\"[.]../../../../../Plant_Name\",\n\t\t\"[.]../../../../Cell_Code\",\n\t\t\"[.]../../../../Cell_Name\",\n\t\t\"[.]../../../Line_Code\",                # Line\n\t\t\"[.]../../../Line_Name\",\n\t\t\"[.]../../Machine_Code\",             # Machine\n\t\t\"[.]../../Machine_Name\",\n\t\t\n\t\t\"[.]../../OPC/From/Operator_Id\",                   # Operator\n\t\t\"[.]../../../../../Shift\",                                         # Shift\n\t\t\"[.]../../../../../Shift_Hour\",                                    # Shift_Hour\n\t\t\"[.]../../../../../../../Hour\",                                                                # Hour\n\t\t\"[.]../../../../../../../Date_hour\",                                                           # Datetime_Hour\n\t\t\n\t\t\"[.]../../OPC/From/Part_Id\",                    # Part_Id\n\t\t\"[.]../OEE/OEE_Start\",                  # Start_Time\n\t\t\"[.]../../../../../DateTime_OEE\",                                  # end_Time\n\t\t\n\t\t\"[.]../Operating_Time/Stop_Timer\",       # StopTime1\n\t\t\"[.]../Operating_Time/Run_Timer\",        # run_time\n\t\t\"[.]../Operating_Time/Off_Timer\",        # Off_time\n\t\t\n\t\t\"[.]../Count/G_Count\",               # Good_Count\n\t\t\"[.]../Count/R_Count\",                   # Rejection\n\t\t\"[.]Breakdown_ID\",    # Reason\n\t\t\"[.]../Operating_Time/Idle_Timer\",       # downTime1\n\t\t\n\t\t\"[.]../Operating_Time/Shift_Time\",             # Shifttime\n\t\t\"[.]../Operating_Time/DT_Type\",         # DT_type\n\t\t\"[.]../OEE/CT\",                 # idle_Cycle_time\n\t\t\n\t\t\"[.]../Count/CT_E\",                      # CTE\n\t\t\"[.]../Count/CT_H\",                      # CTH\n\t\t\"[.]../Count/CT_L\",                      # CTL\n\t\t\n\t\t\"[.]../Operating_Time/HT_Time\",   # Handling_time_tag\n\t\t\"[.]../Operating_Time/MC_Time\"     # Maching_time_tag\n\t]\n\t\n\tresult \u003d OEE.OEE_Triggers.log_oee_data_1Hou(tags_to_read)\n\t\n\tif result:\n\t\ttag_write_values \u003d result[:-1]         # First 13 values\n\t\tdt_type \u003d result[-1]                   # 14th value is DT_type\n\t\t\n\t\tresult_tags \u003d [\n\t\t\t\"[.]../OEE/OEE_Start\",\n\t\t\t\"[.]../Count/G_Count\",\n\t\t\t\"[.]../Count/R_Count\",\n\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\"[.]../Operating_Time/Stop_Timer\",\n\t\t\t\"[.]../Operating_Time/Idle_Timer\",\n\t\t\t\"[.]../Count/CT_E\",\n\t\t\t\"[.]../Count/CT_H\",\n\t\t\t\"[.]../Count/CT_L\",\n\t\t\t\"[.]../Operating_Time/HT_Time\",\n\t\t\t\"[.]../Operating_Time/MC_Time\",\n\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\"[.]../Operating_Time/Shift_Time\"\n\t\t]\n\t\t\n\t\tsystem.tag.writeBlocking(result_tags, tag_write_values)\n\t\t\n\t\tif dt_type \u003d\u003d 2:\n\t\t\tsystem.tag.writeBlocking(\n\t\t\t\t[\"[.]../Operating_Time/Minor_Loss\"],\n\t\t\t\t[1]\n\t\t\t)"
                        }
                      ],
                      "expression": "getHour24(now())",
                      "name": "OEE_1hour",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "db",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\ttags_to_read \u003d [\n\t    \"[.]../Count/OEE_On\",\n\t    \"[.]../../../../../DateTime_OEE\",\n\t    \"[.]../../../../../Shift_Id\",\n\t    \"[.]../../../../../../Business_Code\",\n\t    \"[.]../../../../../../Business_Name\",\n\t    \"[.]../../../../../Plant_Code\",\n\t    \"[.]../../../../../Plant_Name\",\n\t    \"[.]../../../../Cell_Code\",\n\t    \"[.]../../../../Cell_Name\",\n\t    \"[.]../../../Line_Code\",\n\t    \"[.]../../../Line_Name\",\n\t    \"[.]../../Machine_Code\",\n\t    \"[.]../../Machine_Name\",\n\t    \"[.]../../../../../Shift\",\n\t    \"[.]../../../../../Shift_Id\"\n\t]\n\tresult \u003d OEE.PS.PS(tags_to_read)\n\tDate,date_oee,Shift,T_stamp,Tstamp_act, SE, Shift_Time \u003d result\n\tif SE\u003d\u003d0:\n\t\tsystem.tag.writeBlocking([\"[.]../Operating_Time/Shift_Time\"], [Shift_Time])\n\tif Date \u003d\u003d date_oee and Shift \u003e 0:\n\t    system.tag.writeAll([\n\t        \"[.]../Count/OEE_On\",\n\t        \"[.]../Operating_Time/Shift_Time\"\n\t    ], [0, 0])\n\telse:\n\t    system.tag.writeAll([\n\t        \"[.]../OEE/OEE_Start\",\n\t        \"[.]../Operating_Time/DT_Start\",\n\t        \"[.]../Operating_Time/DT_Start_Act\",\n\t        \"[.]../Count/OEE_On\"\n\t    ], [T_stamp, T_stamp, Tstamp_act, 1])\n\t"
                        }
                      ],
                      "datasource": "Master",
                      "query": "Select isnull((Select distinct Shift_ID from Shift_Master where Business_ID \u003d {[.]../../../../../../Business_Code} and Plant_ID \u003d {[.]../../../../../Plant_Code} and Start_time \u003c \u0027{[.]../../../../../../../Time 2}\u0027 and End_time \u003e \u0027{[.]../../../../../../../Time 2}\u0027),\u00273\u0027)",
                      "name": "PS",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "expr",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tif currentValue.value \u003d\u003d 1:\n\t\ttags_to_read \u003d [\n\t\t\t\"[.]../../../../../../Business_Code\",\n\t\t\t\"[.]../../../../../../Business_Name\",\n\t\t\t\"[.]../../../../../Plant_Code\",\n\t\t\t\"[.]../../../../../Plant_Name\",\n\t\t\t\"[.]../../../../Cell_Code\",\n\t\t\t\"[.]../../../../Cell_Name\",\n\t\t\t\"[.]../../../Line_Code\",\n\t\t\t\"[.]../../../Line_Name\",\n\t\t\t\"[.]../../Machine_Code\",\n\t\t\t\"[.]../../Machine_Name\",\n\t\t\t\"[.]../../../../../Shift\",\n\t\t\t\"[.]../../../../../Shift_Hour\",\n\t\t\t\"[.]../../../../../DateTime_OEE\",\n\t\t\t\"[.]../Count/OEE_On\",\n\t\t\t\"[.]../Operating_Time/MC_Status_Act\",\n\t\t\t\"[.]../../OPC/From/Operator_Id\",\n\t\t\t\"[.]../../../../../../../Hour\",\n\t\t\t\"[.]../../../../../../../Date_hour\",\n\t\t\t\"[.]../../OPC/From/Part_Id\",\n\t\t\t\"[.]../OEE/OEE_Start\",\n\t\t\t\"[.]../../../../../DateTime_OEE\",\n\t\t\t\"[.]../Operating_Time/Stop_Timer\",\n\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\"[.]../Count/G_Count\",\n\t\t\t\"[.]../Count/R_Count\",\n\t\t\t\"[.]Breakdown_ID\",\n\t\t\t\"[.]../Operating_Time/Idle_Timer\",\n\t\t\t\"[.]../Operating_Time/Shift_Time\",\n\t\t\t\"[.]../OEE/CT\",\n\t\t\t\"[.]../Count/CT_E\",\n\t\t\t\"[.]../Count/CT_H\",\n\t\t\t\"[.]../Count/CT_L\",\n\t\t\t\"[.]../Operating_Time/HT_Time\",\n\t\t\t\"[.]../Operating_Time/MC_Time\"\n\t\t]\n\t\t# Call the function\n\t\tresult_values \u003d OEE.OEE_Triggers.log_oee_data_15Min(tags_to_read)\n\t\t\n\t\t# If the function returned valid data, write to tags\n\t\tif result_values:\n\t\t\treset_tags \u003d [\n\t\t\t\t\"[.]../OEE/OEE_Start\",\n\t\t\t\t\"[.]../Count/G_Count\",\n\t\t\t\t\"[.]../Count/R_Count\",\n\t\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Stop_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Idle_Timer\",\n\t\t\t\t\"[.]../Count/CT_E\",\n\t\t\t\t\"[.]../Count/CT_H\",\n\t\t\t\t\"[.]../Count/CT_L\",\n\t\t\t\t\"[.]../Operating_Time/HT_Time\",\n\t\t\t\t\"[.]../Operating_Time/MC_Time\",\n\t\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Shift_Time\",\n\t\t\t\t\"[.]../../OPC/To/Availability\",\n\t\t\t\t\"[.]../../OPC/To/Quality\",\n\t\t\t\t\"[.]../../OPC/To/Performance\",\n\t\t\t\t\"[.]../../OPC/To/OEE\"           \n\t\t\t]\n\t\t\t\n\t\t\tsystem.tag.writeBlocking(reset_tags, result_values)"
                        }
                      ],
                      "expression": "getMinute(now()) % 15 \u003d 0 \u0026\u0026 getSecond(now()) \u003d 0",
                      "name": "OEE_15Mins",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "expr",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\ttags_to_read \u003d [\n\t\t\"[.]../../Machine_Tracking\",\n\t\t\"[.]Off_Tag\",\n\t\t\"[.]../Operating_Time/MC_Status_Act\",\n\t\t\"[.]DT_Timer\",\n\t\t\"[.]MC_Status_Trigger\",\n\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\"[.]HT_Timer\"\n\t]\n\ttags \u003d [tag.value for tag in system.tag.readBlocking(tags_to_read)]\n\tif tags[0] !\u003d 1:\n\t\treturn\n\tb \u003d tags[1]\n\ta \u003d int(tags[2])\n\tc \u003d tags[3]\n\te \u003d int(tags[4])\n\toff, run, ht \u003d tags[5], tags[6], tags[7]\n\tupdates \u003d []\n\tif b \u003d\u003d 1:\n\t\tsystem.tag.write(\"[.]../Operating_Time/Off_Timer\" , off + 1)\n\tif a \u003d\u003d 1 and b !\u003d 1:\n\t\tsystem.tag.write(\"[.]../Operating_Time/Run_Timer\", run + 1)\n\tif a \u003d\u003d 2 and b !\u003d 1:\n\t\tsystem.tag.write(\"[.]DT_Timer\", c + 1)\n\tif e \u003d\u003d 2 and b !\u003d 1:\n\t\tsystem.tag.write(\"[.]HT_Timer\", ht + 1)\n\t#if Write_Tag:\n\t\t#system.tag.writeBlocking([item[0] for item in Write_Tag], [item[1] for item in Write_Tag])\n\t\t\n\t\t\n\t"
                        }
                      ],
                      "expression": "getSecond(now())",
                      "name": "Seconds",
                      "executionMode": "FixedRate",
                      "executionRate": 500,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tif currentValue.quality.isGood() and currentValue.value !\u003d 0 and previousValue.quality.isGood():\n\t\tsystem.tag.write(\"[.]../Operating_Time/DT_Reason\",currentValue.value)"
                        }
                      ],
                      "sourceTagPath": "[.]../../OPC/From/BD_Reason",
                      "name": "Breakdown_ID",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\ttags_to_read \u003d [\n\t    \"[.]../Count/OEE_On\",\n\t    \"[.]MC_Status_Trigger\",\n\t    \"[.]../Count/R_Count\",\n\t    \"[.]../Count/Part_Per_Cycle\",\n\t    \"[.]../../OPC/From/MT_Actual\",\n\t    \"[.]../OEE/HT_Actual\",\n\t    \"[.]../Operating_Time/MC_Time\",\n\t    \"[.]../Operating_Time/HT_Time\",\n\t    \"[.]../OEE/Cum_CT\",\n\t    \"[.]../Count/CT_H\",\n\t    \"[.]../Count/CT_L\",\n\t    \"[.]../Count/CT_E\",\n\t    \"[.]../../../../../../Business_Code\",\n\t    \"[.]../../../../../../Business_Name\",\n\t    \"[.]../../../../../Plant_Code\",\n\t    \"[.]../../../../../Plant_Name\",\n\t    \"[.]../../../../Cell_Code\",\n\t    \"[.]../../../../Cell_Name\",\n\t    \"[.]../../../Line_Code\",\n\t    \"[.]../../../Line_Name\",\n\t    \"[.]../../Machine_Code\",\n\t    \"[.]../../Machine_Name\",\n\t    \"[.]../../../../../Shift\",\n\t    \"[.]../../../../../../../Hour\",\n\t    \"[.]../../OPC/From/Part_Id\",\n\t    \"[.]../../OPC/From/Operator_Id\",\n\t    \"[.]../../../../../DateTime_OEE\",\n\t    \"[.]../Count/Rejection_Act\",\n\t    \"[.]Idel_Limit\"\n\t]\n\t\n\t#OEE_On, MC_Status, Cycle_partcount, Good_Count, HT_Actual, MT_Actual, Handling_time, Maching_time, Cycle_time_act, CycleTime, CTH, CTL, CTE,\n\t#Enterprise_No, BG_No, Plant_No, Line_No, Machine_No, Shift, Hour, Operator, Part_ID, DateTime_OEE, Rejection\n\t\n\tresult \u003d OEE.P_Count.Rejection_Count(tags_to_read)\n\t\n\tif result:\n\t    rejection_count, ct_actual, ht_final, mt_final, cth, ctl, cte, R_id \u003d result\n\t\n\t    system.tag.writeBlocking([\n\t        \"[.]../Count/R_Count\",\n\t        \"[.]../OEE/CT_Actual\",\n\t        \"[.]../Operating_Time/HT_Time\",\n\t        \"[.]../Operating_Time/MC_Time\",\n\t        \"[.]../Count/CT_H\",\n\t        \"[.]../Count/CT_L\",\n\t        \"[.]../Count/CT_E\",\n\t        \"[.]../Count/Rejection_Act\"\n\t    ], [rejection_count, ct_actual, ht_final, mt_final, cth, ctl, cte, R_id])"
                        }
                      ],
                      "sourceTagPath": "[.]../../OPC/From/Bad_Count",
                      "name": "Rejection_Count",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "qualityChanged",
                          "script": "\tMS_Qual \u003d currentValue.quality\n\tif currentValue.quality.isGood():\n\t\tsystem.tag.write(\"[.]Off_Tag\",0)\n\telse:\n\t\tsystem.tag.write(\"[.]Off_Tag\",1)"
                        },
                        {
                          "eventid": "valueChanged",
                          "script": "\tMC_Status \u003d currentValue.value\n\t#system.tag.write(\"[default]Tags/OEE/Enterprise/BG4/Plant2/Line1/Machine1/Operating_time/Mc_status\",a)\n\tsystem.tag.write(\"[.]../Operating_Time/MC_Status_Act\",MC_Status)\n\tsystem.tag.write(\"[.]HT_Timer\",0)\n\tif MC_Status \u003d\u003d 1:\n\t\tsystem.tag.write(\"[.]../Operating_Time/MC_Status_Act\",1)\n\t\tsystem.tag.write(\"[.]HT_Timer\",0)\n\t\t#system.tag.write(\"[default]Tags/OEE/Enterprise/BG4/Plant2/Line1/Machine1/Operating_time/Mc_status_Act 1\",1)\n\t\t\t\n\t"
                        }
                      ],
                      "sourceTagPath": "[.]../../OPC/From/Machine_Status",
                      "name": "MC_Status_Trigger",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tif currentValue.quality.isGood() and currentValue.value !\u003d 0 and previousValue.quality.isGood():\n\t\tsystem.tag.write(\"[.]../Count/Rejection_Act\",currentValue.value)"
                        }
                      ],
                      "sourceTagPath": "[.]../../OPC/From/Rejection_Reason",
                      "name": "Rejection_Id",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\ttags_to_read \u003d [\n\t    \"[.]../Operating_Time/MC_Status_Act\",\n\t    \"[.]DT_Timer\",\n\t    \"[.]Idel_Limit\",\n\t    \"[.]../Operating_Time/Stop_Timer\",\n\t    \"[.]../Operating_Time/Idle_Timer\",\n\t    \"[.]../Operating_Time/Minor_Loss\",\n\t    \"[.]../../../../../../Business_Code\",\n\t    \"[.]../../../../../../Business_Name\",\n\t    \"[.]../../../../../Plant_Code\",\n\t    \"[.]../../../../../Plant_Name\",\n\t    \"[.]../../../../Cell_Code\",\n\t    \"[.]../../../../Cell_Name\",\n\t    \"[.]../../../Line_Code\",\n\t    \"[.]../../../Line_Name\",\n\t    \"[.]../../Machine_Code\",\n\t    \"[.]../../Machine_Name\",\n\t    \"[.]../../../../../Shift\",\n\t    \"[.]../../../../../../../Hour\"\n\t]\n\t# Read tag values in one go\n\tvalues \u003d [tag.value for tag in system.tag.readBlocking(tags_to_read)]\n\t\n\t# Assign values with meaningful names\n\tmc_status, dt_timer, idle_limit, stop_time, idle_time, minor_loss, bg_id, bg_Name, plant, plant_Name, Cell, Cell_Name, line, Line_Name, machine, Machine_Name, shift, hour \u003d values\n\t\n\t# Ensure values are numeric (type safety)\n\tdt_timer \u003d int(dt_timer)\n\tidle_limit \u003d int(idle_limit)\n\tstop_time \u003d int(stop_time)\n\tidle_time \u003d int(idle_time)\n\tminor_loss \u003d int(minor_loss)\n\t\n\t# Prepare tag writes\n\twrite_tags \u003d []\n\t\n\t# Main logic for DT classification\n\tif mc_status \u003d\u003d 2:\n\t\n\t    if dt_timer \u003c idle_limit:\n\t        stop_time +\u003d 1\n\t        write_tags +\u003d [\n\t            [\"[.]../Operating_Time/Stop_Timer\", stop_time],\n\t            [\"[.]../Operating_Time/DT_Type\", 2]  # 2 \u003d STOP\n\t        ]\n\t\n\t    elif dt_timer \u003e idle_limit:\n\t        idle_time +\u003d 1\n\t        write_tags +\u003d [\n\t            [\"[.]../Operating_Time/Idle_Timer\", idle_time],\n\t            [\"[.]../Operating_Time/DT_Type\", 3]  # 3 \u003d IDLE\n\t        ]\n\t\n\t    elif dt_timer \u003d\u003d idle_limit and dt_timer !\u003d 0:\n\t        # Calculate new stop time capped at 0\n\t        new_stop_time \u003d stop_time - idle_limit if stop_time \u003e\u003d idle_limit else 0\n\t        #2025-07-31 write_tags.append([\"[.]../Operating_Time/Stop_Timer\", new_stop_time])\n\t        system.tag.write(\"[.]../Operating_Time/Stop_Timer\", new_stop_time)\n\t        #2025-07-2025 write_tags.append([\"[.]../Operating_Time/Idle_Timer\", idle_time])\n\t        new_idle_time \u003d idle_time + idle_limit #2025-07-2025 if stop_time \u003e\u003d idle_limit else idle_time\n\t        #2025-07-2025 write_tags.append([\"[.]../Operating_Time/Idle_Timer\", new_idle_time])\n\t        system.tag.write(\"[.]../Operating_Time/Idle_Timer\", new_idle_time)\n\t\n\t        # Fetch latest DB record for this machine\n\t        row \u003d system.db.runPrepQuery(\n\t            \"SELECT TOP 1 ID, Shift, Hour, Stoptime, Downtime FROM OEE_OEEData \"\n\t            \"WHERE Business_ID \u003d ? AND Plant_ID \u003d ? AND Cell_ID \u003d ? AND Line_ID \u003d ? AND Machine_Code \u003d ? ORDER BY id DESC\",\n\t            [bg_id, plant, Cell, line, machine], \u0027OEE\u0027\n\t        )\n\t\n\t        if row:\n\t            record \u003d row[0]\n\t            id \u003d record[\"id\"]\n\t            shift_pre \u003d record[\"Shift\"]\n\t            hour_pre \u003d record[\"Hour\"]\n\t            stop_time_pre \u003d int(record[\"StopTime\"])\n\t            downtime_pre \u003d int(record[\"DownTime\"])\n\t\n\t            # Handle minor loss reversal if hour changed\n\t            if hour_pre !\u003d hour and shift \u003d\u003d shift_pre and downtime_pre \u003d\u003d 0 and minor_loss \u003d\u003d 1:\n\t                updated_stop_time \u003d stop_time_pre + new_stop_time + 1  # +1 for current cycle\n\t                downtime_new \u003d -new_stop_time\n\t\n\t                # Update OEE_data to reflect the corrected minor loss transition\n\t                system.db.runPrepUpdate(\n\t                    \"UPDATE OEE_OEEData SET Downtime \u003d ?, Stoptime \u003d ?,Trigger_Type \u003d ? WHERE ID \u003d ?\",\n\t                    [downtime_new, updated_stop_time, \"DT_Timer\", id],\n\t                    \u0027OEE\u0027\n\t                )\n\t\n\t                # Reset minor loss flag\n\t                write_tags.append([\"[.]../Operating_Time/Minor_Loss\", 0])\n\t\n\t# Write back tag values if any changes occurred\n\tif write_tags:\n\t    system.tag.writeBlocking(\n\t        [tag_path for tag_path, _ in write_tags],\n\t        [value for _, value in write_tags]\n\t    )"
                        }
                      ],
                      "name": "DT_Timer",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tI_Limit \u003d system.tag.read(\"[.]Idel_Limit\").value\n\tHT_Act \u003d currentValue.value\n\tif I_Limit\u003cHT_Act:\n\t\tsystem.tag.write(\"[.]../OEE/HT_Actual\",I_Limit)\n\telse:\n\t\tsystem.tag.write(\"[.]../OEE/HT_Actual\",HT_Act)"
                        }
                      ],
                      "sourceTagPath": "[.]../../OPC/From/LU_Time",
                      "name": "HT_Actual",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\ttags_to_read \u003d [\n\t    \"[.]../Count/OEE_On\",\n\t    \"[.]MC_Status_Trigger\",\n\t    \"[.]../Count/Part_Per_Cycle\",\n\t    \"[.]../Count/G_Count\",\n\t    \"[.]../../OPC/From/MT_Actual\",\n\t    \"[.]../OEE/HT_Actual\",\n\t    \"[.]../Operating_Time/MC_Time\",\n\t    \"[.]../Operating_Time/HT_Time\",\n\t    \"[.]../OEE/CT_Actual\",\n\t    \"[.]../OEE/CT\",\n\t    \"[.]../Count/CT_H\",\n\t    \"[.]../Count/CT_L\",\n\t    \"[.]../Count/CT_E\",\n\t    \"[.]../../../../../../Business_Code\",\n\t    \"[.]../../../../../../Business_Name\",\n\t    \"[.]../../../../../Plant_Code\",\n\t    \"[.]../../../../../Plant_Name\",\n\t    \"[.]../../../../Cell_Code\",\n\t    \"[.]../../../../Cell_Name\",\n\t    \"[.]../../../Line_Code\",\n\t    \"[.]../../../Line_Name\",\n\t    \"[.]../../Machine_Code\",\n\t    \"[.]../../Machine_Name\",\n\t    \"[.]../../../../../Shift\",\n\t    \"[.]../../../../../../../Hour\",\n\t    \"[.]../../OPC/From/Part_Id\",\n\t    \"[.]../../OPC/From/Operator_Id\",\n\t    \"[.]Shot_Count\",\n\t    \"[.]../OEE/Cum_CT\",\n\t    \"[.]../../../../../DateTime_OEE\",\n\t    \"[.]../../../../../../Rejection\",\n\t    \"[.]Idel_Limit\"\n\t]\n\t\n\t#OEE_On, MC_Status, Cycle_partcount, Good_Count, HT_Actual, MT_Actual, Handling_time, Maching_time, Cycle_time_act, CycleTime, CTH, CTL, CTE,\n\t#Enterprise_No, BG_No, Plant_No, Line_No, Machine_No, Shift, Hour, Operator, Part_ID, DateTime_OEE, Rejection\n\t\n\tresult \u003d OEE.P_Count.Shot_Count(tags_to_read)\n\t\n\tif result:\n\t    good_count, ct_actual, ht_final, mt_final, cth, ctl, cte \u003d result\n\t\n\t    system.tag.writeBlocking([\n\t        \"[.]../Count/G_Count\",\n\t        \"[.]../OEE/CT_Actual\",\n\t        \"[.]../Operating_Time/HT_Time\",\n\t        \"[.]../Operating_Time/MC_Time\",\n\t        \"[.]../Count/CT_H\",\n\t        \"[.]../Count/CT_L\",\n\t        \"[.]../Count/CT_E\",\n\t    ], [good_count, ct_actual, ht_final, mt_final, cth, ctl, cte])"
                        }
                      ],
                      "sourceTagPath": "[.]../../OPC/From/Good_Count",
                      "name": "Shot_Count",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tHT_Actual \u003d system.tag.read(\"[.]HT_Timer\").value\n\tHT_Standard \u003d int(system.tag.read(\"[.]../OEE/HT_Std\").value)\n\tif HT_Actual \u003e\u003d HT_Standard:\n\t\tsystem.tag.write(\"[.]../Operating_Time/MC_Status_Act\",2)\n\t\n"
                        }
                      ],
                      "name": "HT_Timer",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tMC_status \u003d system.tag.read(\"[.]../Operating_Time/MC_Status_Act\").value\n\tOFF_Tag \u003d system.tag.read(\"[.]Off_Tag\").value\n\tT_Stamp \u003d system.tag.read(\"[.]../../../../../DateTime_OEE\").value\n\tif MC_status \u003d\u003d 1 and OFF_Tag \u003d\u003d0:\n\t\tsystem.tag.write(\"[.]../Operating_Time/DT_Stop\",T_Stamp)\n\t\n\ttags_to_read \u003d [\n\t\t\"[.]../../../../../Shift\",\n\t\t\"[.]../Operating_Time/MC_Status_Act\",\n\t\t\"[.]Off_Tag\",\n\t\t\"[.]../../../../../DateTime_OEE\",\n\t\t\"[.]../../../../../../Business_Code\",\n\t\t\"[.]../../../../../../Business_Name\",\n\t\t\"[.]../../../../../Plant_Code\",\n\t\t\"[.]../../../../../Plant_Name\",\n\t\t\"[.]../../../../Cell_Code\",\n\t\t\"[.]../../../../Cell_Name\",\n\t\t\"[.]../../../Line_Code\",\n\t\t\"[.]../../../Line_Name\",\n\t\t\"[.]../../Machine_Code\",\n\t\t\"[.]../../Machine_Name\",\n\t\t\"[.]../../OPC/From/Operator_Id\",\n\t\t\"[.]../../../../../../../Hour\",\n\t\t\"[.]../../OPC/From/Part_Id\",\n\t\t\"[.]../Operating_Time/DT_Start\",\n\t\t\"[.]../Operating_Time/DT_Start_Act\",\n\t\t\"[.]Idel_Limit\",\n\t\t\"[.]../Operating_Time/DT_Stop\",\n\t\t\"[.]../../../../../../../Day\",\n\t\t\"[.]Breakdown_ID\"\n\t]\n\twrite_value \u003d OEE.Operating_Time.offtime(tags_to_read)\n\tif write_value:\n\t\tsystem.tag.writeBlocking([item[0] for item in write_value], [item[1] for item in write_value])"
                        }
                      ],
                      "name": "Off_Tag",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "PS_Planner",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\t# Tag paths\n\tTrigger \u003d system.tag.read(\"[.]../Operating_Time/MC_Status_Act\").value\n\tTrigger1 \u003d system.tag.read(\"[.]Off_Tag\").value\n\tOEE_On \u003d system.tag.read(\"[.]../Count/OEE_On\").value\n\tMC_Track \u003d system.tag.read(\"[.]../../Machine_Tracking\").value\n\tT_stamp \u003d system.tag.read(\"[.]../../../../../DateTime_OEE\").value\n\t\n\t# Write OEE_On \u003d 1 if the condition is met\n\tif (Trigger \u003d\u003d 2 or Trigger1 \u003d\u003d 1) and OEE_On \u003d\u003d 1 and MC_Track \u003d\u003d 1:\n\t    system.tag.write(\"[.]../Operating_Time/DT_Stop\", T_stamp)\n\t\n\t# Tags to read\n\ttags_to_read \u003d [\n\t    \"[.]../Count/OEE_On\",\n\t    \"[.]../../Machine_Tracking\",\n\t    \"[.]../Operating_Time/MC_Status_Act\",\n\t    \"[.]Off_Tag\",\n\t    \"[.]../../../../../../Business_Code\",\n\t    \"[.]../../../../../../Business_Name\",\n\t    \"[.]../../../../../Plant_Code\",\n\t    \"[.]../../../../../Plant_Name\",\n\t    \"[.]../../../../Cell_Code\",\n\t    \"[.]../../../../Cell_Name\",\n\t    \"[.]../../../Line_Code\",\n\t    \"[.]../../../Line_Name\",\n\t    \"[.]../../Machine_Code\",\n\t    \"[.]../../Machine_Name\",\n\t    \"[.]../../OPC/From/Operator_Id\",\n\t    \"[.]../../../../../Shift_dup\",\n\t    \"[.]../../../../../Shift_Hour_Dup\",\n\t    \"[.]../../../../../Shift_Id\",\n\t    \"[.]../../../../../../../Hour\",\n\t    \"[.]../../../../../../../Date_hour\",\n\t    \"[.]../../OPC/From/Part_Id\",\n\t    \"[.]../OEE/OEE_Start\",\n\t    \"[.]../../../../../DateTime_OEE\",\n\t    \"[.]../Operating_Time/Stop_Timer\",\n\t    \"[.]../Operating_Time/Run_Timer\",\n\t    \"[.]../Operating_Time/Off_Timer\",\n\t    \"[.]../Count/G_Count\",\n\t    \"[.]../Count/R_Count\",\n\t    \"[.]../Operating_Time/DT_Reason\",\n\t    \"[.]../Operating_Time/Idle_Timer\",\n\t    \"[.]../Operating_Time/Shift_Time\",\n\t    \"[.]../Operating_Time/DT_Type\",\n\t    \"[.]../OEE/CT\",\n\t    \"[.]../Count/CT_E\",\n\t    \"[.]../Count/CT_H\",\n\t    \"[.]../Count/CT_L\",\n\t    \"[.]HT_Timer\",\n\t    \"[.]../Operating_Time/MC_Time\",\n\t    \"[.]../Operating_Time/DT_Start\",\n\t    \"[.]../Operating_Time/DT_Start_Act\",\n\t    \"[.]../Operating_Time/DT_Stop\",\n\t    \"[.]Idel_Limit\",\n\t    \"[.]Breakdown_ID\",\n\t    \"[.]../../../../../DateTime_OEE\"  # currentTimestamp\n\t]\n\t\n\tReturn_values \u003d OEE.OEE_Triggers.log_oee_data_Shift(tags_to_read)\n\t\n\tif Return_values:\n\t    (\n\t        Trigger, Trigger1, OEE_On, MC_Stat,\n\t        actualDowntime, SP_DATE_TIME, Date_OEE,\n\t        Shift_Plan, end_Time, oeeTimestamp, currentTimestamp\n\t    ) \u003d Return_values\n\t    if (Trigger \u003d\u003d 2 or Trigger1 \u003d\u003d 1) and OEE_On \u003d\u003d 1 and MC_Stat \u003d\u003d 1:\n\t        tags_to_write \u003d [\n\t            \"[.]../OEE/OEE_Start\",\n\t            \"[.]../Count/G_Count\",\n\t            \"[.]../Count/R_Count\",\n\t            \"[.]../Operating_Time/Run_Timer\",\n\t            \"[.]../Operating_Time/Stop_Timer\",\n\t            \"[.]../Operating_Time/Idle_Timer\",\n\t            \"[.]../Count/CT_E\",\n\t            \"[.]../Count/CT_H\",\n\t            \"[.]../Count/CT_L\",\n\t            \"[.]HT_Timer\",\n\t            \"[.]../Operating_Time/MC_Time\",\n\t            \"[.]../Operating_Time/Off_Timer\",\n\t            \"[.]../Operating_Time/Down_Time\",\n\t            \"[.]../Operating_Time/DT_Start\",\n\t            \"[.]../Operating_Time/DT_Start_Act\"\n\t        ]\n\t        values_to_write \u003d [end_Time, 0, 0, 0, 0, 0,0, 0, 0,0, 0, 0,0, oeeTimestamp, currentTimestamp]\n\t        system.tag.writeBlocking(tags_to_write, values_to_write)\n\t    if SP_DATE_TIME \u003d\u003d Date_OEE and Shift_Plan \u003e 0:\n\t        system.tag.write(\"[.]../Count/OEE_On\", 0)\n\t        system.tag.write(\"[.]../Operating_Time/Shift_Time\", 0)\n\t    else:\n\t        system.tag.write(\"[.]../OEE/OEE_Start\", oeeTimestamp)\n\t        system.tag.write(\"[.]../Operating_Time/DT_Start\", oeeTimestamp)\n\t        system.tag.write(\"[.]../Operating_Time/DT_Start_Act\", currentTimestamp)\n\t        system.tag.write(\"[.]../Count/OEE_On\", 1)"
                        }
                      ],
                      "sourceTagPath": "[.]../../../../../Shift_Trigger",
                      "name": "OEE_Shift",
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "Operating_Time",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tOEE_ON \u003d system.tag.read(\"[.]../Count/OEE_On\").value\n\tMACHINE_Tracking \u003d system.tag.read(\"[.]../../Machine_Tracking\").value\n\tMachine_Status \u003d system.tag.read(\"[.]MC_Status_Act\").value\n\tT_Stamp \u003d system.tag.read(\"[.]../../../../DateTime_OEE\").value\n\tif OEE_ON \u003d\u003d 1 and MACHINE_Tracking \u003d\u003d 1 and Machine_Status \u003d\u003d 1:\n\t\tsystem.tag.write(\"[.]DT_Stop\",T_Stamp)\n\ttags_to_read \u003d [\n        \"[.]../Count/OEE_On\",\n        \"[.]../../Machine_Tracking\",\n        \"[.]MC_Status_Act\",\n        \"[.]../Triggers/Off_Tag\",\n        \"[.]../../../../../DateTime_OEE\",\n        \"[.]DT_Start\",\n        \"[.]DT_Start_Act\",\n        \"[.]../../../../../../Business_Code\",\n        \"[.]../../../../../../Business_Name\",\n        \"[.]../../../../../Plant_Code\",\n        \"[.]../../../../../Plant_Name\",\n        \"[.]../../../../Cell_Code\",\n        \"[.]../../../../Cell_Name\",\n        \"[.]../../../Line_Code\",\n        \"[.]../../../Line_Name\",\n        \"[.]../../Machine_Code\",\n        \"[.]../../Machine_Name\",\n        \"[.]../../OPC/From/Operator_Id\",\n        \"[.]../../../../../Shift\",\n        \"[.]../../../../../Shift_Hour\",\n        \"[.]../../../../../../../Hour\",\n        \"[.]../../../../../../../Date_hour\",\n        \"[.]Shift_Time\",\n        \"[.]../OEE/OEE_Start\",\n        \"[.]Idle_Timer\",\n        \"[.]Stop_Timer\",\n        \"[.]Run_Timer\",\n        \"[.]Off_Timer\",\n        \"[.]../Count/G_Count\",\n        \"[.]../Count/R_Count\",\n        \"[.]../../OPC/From/Part_Id\",\n        \"[.]DT_Stop\",\n        \"[.]../Triggers/Idel_Limit\",\n        \"[.]DT_Reason\",\n        \"[.]../OEE/CT\",\n        \"[.]../Count/CT_H\",\n        \"[.]../Count/CT_E\",\n        \"[.]../Count/CT_L\",\n        \"[.]HT_Time\",\n        \"[.]MC_Time\",\n        \"[.]../../../../../DateTime_OEE\"\n    ]\n    \n\tOEE.MC_Status_Act.MC_Status_Act(tags_to_read)\n    "
                        }
                      ],
                      "sourceTagPath": "[.]../../OPC/From/Machine_Status",
                      "name": "MC_Status_Act",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Reason_UD",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "DT_Reason",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Run_Timer",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "Int4",
                      "name": "Shift_Time",
                      "formatString": "#,##0.##",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Down_Time",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "DT_Type",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Off_Timer",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "DateTime",
                      "name": "DT_Start_Act",
                      "formatString": "yyyy-MM-dd h:mm:ss aa",
                      "value": 1735670220000,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "MC_Time",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Minor_Loss",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Stop_Timer",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "HT_Time",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "DateTime",
                      "name": "DT_Start",
                      "formatString": "yyyy-MM-dd h:mm:ss aa",
                      "value": 1735670220000,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Idle_Timer",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "DateTime",
                      "name": "DT_Stop",
                      "formatString": "yyyy-MM-dd h:mm:ss aa",
                      "value": 1735670220000,
                      "tagType": "AtomicTag"
                    }
                  ]
                }
              ]
            },
            {
              "valueSource": "db",
              "dataType": "String",
              "datasource": "Master",
              "query": "Select distinct Machine_name from STD_Master where Business_ID \u003d {[.]../../../../Business_Code} and Plant_ID \u003d {[.]../../../Plant_Code} and Cell_ID \u003d {[.]../../Cell_Code} and Line_ID \u003d {[.]../Line_Code} and Machine_Code \u003d {[.]Machine_Code} and Status \u003d \u0027Live\u0027",
              "name": "Machine_Name",
              "value": "0",
              "tagType": "AtomicTag"
            },
            {
              "value": {
                "bindType": "parameter",
                "binding": "{Machine_Code}"
              },
              "valueSource": "memory",
              "name": "Machine_Code",
              "tagType": "AtomicTag"
            }
          ]
        },
        {
          "name": "Machine",
          "typeId": "",
          "parameters": {
            "Machine_ID": {
              "dataType": "String"
            },
            "Machine_Path": {
              "dataType": "String",
              "value": ""
            },
            "DB": {
              "dataType": "String"
            },
            "Gateway": {
              "dataType": "String"
            },
            "Machine_Code": {
              "dataType": "Integer"
            }
          },
          "tagType": "UdtType",
          "tags": [
            {
              "valueSource": "db",
              "dataType": "String",
              "datasource": "CM_MASTER",
              "query": "Select distinct machine_name from M_MACHINE where business_id \u003d {[.]../../../../Business_Code} and plant_id \u003d {[.]../../../Plant_Code} and cell_id \u003d {[.]../../Cell_Code} and line_id \u003d {[.]../Line_Code} and machine_code \u003d {[.]Machine_Code} and project_id \u003d 1",
              "name": "Machine_Name",
              "value": "0",
              "tagType": "AtomicTag"
            },
            {
              "name": "OPC",
              "tagType": "Folder",
              "tags": [
                {
                  "name": "To",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/OEE_{Machine_ID}"
                      },
                      "valueSource": "memory",
                      "name": "OEE",
                      "tagType": "AtomicTag",
                      "opcServer": "Ignition OPC UA Server"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/IWT_{Machine_ID}"
                      },
                      "valueSource": "memory",
                      "name": "IW_Time",
                      "tagType": "AtomicTag",
                      "opcServer": "Ignition OPC UA Server"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/QUAL_{Machine_ID}"
                      },
                      "valueSource": "memory",
                      "name": "Quality",
                      "tagType": "AtomicTag",
                      "opcServer": "Ignition OPC UA Server"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/RESET_{Machine_ID}"
                      },
                      "valueSource": "memory",
                      "name": "Shift_Reset",
                      "tagType": "AtomicTag",
                      "opcServer": "Ignition OPC UA Server"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/PER_{Machine_ID}"
                      },
                      "valueSource": "memory",
                      "name": "Performance",
                      "tagType": "AtomicTag",
                      "opcServer": "Ignition OPC UA Server"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "ns\u003d1;s\u003d[OEE_TETSING_EWON]_Meta:{Machine_Path}/AVA_{Machine_ID}"
                      },
                      "valueSource": "memory",
                      "name": "Availability",
                      "tagType": "AtomicTag",
                      "opcServer": "Ignition OPC UA Server"
                    }
                  ]
                },
                {
                  "name": "From",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dLoading_Unloading_Time{Machine_ID}"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "LU_Time",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dMachineBreakDownReasons{Machine_ID}"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "BD_Reason",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dGOC_Communication{Machine_ID}"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "GOC_Com",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dMachine_Status{Machine_ID}"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Machine_Status",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dReject_reason{Machine_ID}"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Rejection_Reason",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dProduction_Count{Machine_ID}"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Good_Count",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dOperator_ID{Machine_ID}"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Operator_Id",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dRejection_Count{Machine_ID}"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Bad_Count",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dMachine_cycle_time{Machine_ID}"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "MT_Actual",
                      "tagType": "AtomicTag"
                    },
                    {
                      "opcItemPath": {
                        "bindType": "parameter",
                        "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dPart_Number{Machine_ID}"
                      },
                      "opcServer": {
                        "bindType": "parameter",
                        "binding": "{Gateway}"
                      },
                      "valueSource": "opc",
                      "name": "Part_Id",
                      "tagType": "AtomicTag"
                    }
                  ]
                }
              ]
            },
            {
              "name": "Calculation",
              "tagType": "Folder",
              "tags": [
                {
                  "name": "Count",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "memory",
                      "name": "CT_H",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Idel_Time",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "OEE_On",
                      "value": 1,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "CT_L",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "G_Count",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "db",
                      "query": "Select isnull((Select part_per_cycle from [OEE_NEW].[dbo].[M_PRODUCT] where business_id \u003d {[.]../../../../../../Business_Code} and plant_id \u003d {[.]../../../../../Plant_Code} and cell_id \u003d {[.]../../../../Cell_Code} and line_id \u003d {[.]../../../Line_Code} and machine_code \u003d {[.]../../Machine_Code} and product_id \u003d {[.]../../OPC/From/Part_Id}),0)",
                      "name": "Part_Per_Cycle",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Rejection_Act",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "CT_E",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "R_Count",
                      "value": 0,
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "Operating_Time",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "memory",
                      "name": "HT_Time",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Run_Timer",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tOEE_ON \u003d system.tag.read(\"[.]../Count/OEE_On\").value\n\tMACHINE_Tracking \u003d system.tag.read(\"[.]../../Machine_Tracking\").value\n\tMachine_Status \u003d system.tag.read(\"[.]MC_Status_Act\").value\n\tT_Stamp \u003d system.tag.read(\"[.]../../../../DateTime_OEE\").value\n\tif OEE_ON \u003d\u003d 1 and MACHINE_Tracking \u003d\u003d 1 and Machine_Status \u003d\u003d 1:\n\t\tsystem.tag.write(\"[.]DT_Stop\",T_Stamp)\n\ttags_to_read \u003d [\n        \"[.]../Count/OEE_On\",\n        \"[.]../../Machine_Tracking\",\n        \"[.]MC_Status_Act\",\n        \"[.]../Triggers/Off_Tag\",\n        \"[.]../../../../../DateTime_OEE\",\n        \"[.]DT_Start\",\n        \"[.]DT_Start_Act\",\n        \"[.]../../../../../../Business_Code\",\n        \"[.]../../../../../Plant_Code\",\n        \"[.]../../../../Cell_Code\",\n        \"[.]../../../Line_Code\",\n        \"[.]../../Machine_Code\",\n        \"[.]../../OPC/From/Operator_Id\",\n        \"[.]../../../../../Shift_Id\",\n        \"[.]../../../../../Shift_Hour\",\n        \"[.]../../../../../../../Hour\",\n        \"[.]../../../../../../../Date_hour\",\n        \"[.]Shift_Time\",\n        \"[.]../OEE/OEE_Start\",\n        \"[.]Idle_Timer\",\n        \"[.]Stop_Timer\",\n        \"[.]Run_Timer\",\n        \"[.]Off_Timer\",\n        \"[.]../Count/G_Count\",\n        \"[.]../Count/R_Count\",\n        \"[.]../../OPC/From/Part_Id\",\n        \"[.]DT_Stop\",\n        \"[.]../Triggers/Idel_Limit\",\n        \"[.]DT_Reason\",\n        \"[.]../OEE/CT\",\n        \"[.]../Count/CT_H\",\n        \"[.]../Count/CT_E\",\n        \"[.]../Count/CT_L\",\n        \"[.]HT_Time\",\n        \"[.]MC_Time\",\n        \"[.]../../../../../DateTime_OEE\"\n    ]\n    \n\t#OEE.MC_Status_Act.MC_Status_Act(tags_to_read)\n\tOEE_NEW.MC_Status_Act.MC_Status_Act(tags_to_read)\n    "
                        }
                      ],
                      "name": "MC_Status_Act",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "DT_Reason",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Reason_UD",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "DT_Type",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Idle_Timer",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "MC_Time",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Down_Time",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Stop_Timer",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "Int4",
                      "name": "Shift_Time",
                      "formatString": "#,##0.##",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "DateTime",
                      "name": "DT_Stop",
                      "formatString": "yyyy-MM-dd h:mm:ss aa",
                      "value": 1735670220000,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "DateTime",
                      "name": "DT_Start_Act",
                      "formatString": "yyyy-MM-dd h:mm:ss aa",
                      "value": 1735670220000,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Minor_Loss",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "Off_Timer",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "DateTime",
                      "name": "DT_Start",
                      "formatString": "yyyy-MM-dd h:mm:ss aa",
                      "value": 1735670220000,
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "OEE",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "memory",
                      "name": "CT_Actual",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "db",
                      "dataType": "String",
                      "query": "Select isnull((Select product_name from [OEE_NEW].[dbo].[M_PRODUCT] where business_id \u003d {[.]../../../../../../Business_Code} and plant_id \u003d {[.]../../../../../Plant_Code} and cell_id \u003d {[.]../../../../Cell_Code} and line_id \u003d {[.]../../../Line_Code} and machine_code \u003d {[.]../../Machine_Code} and product_id \u003d {[.]../../OPC/From/Part_Id}),\u0027No Part Model in Master\u0027)",
                      "name": "Part_Model",
                      "tagType": "AtomicTag"
                    },
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "db",
                      "query": "Select isnull((Select handling_time from [OEE_NEW].[dbo].[M_PRODUCT] where business_id \u003d {[.]../../../../../../Business_Code} and plant_id \u003d {[.]../../../../../Plant_Code} and cell_id \u003d {[.]../../../../Cell_Code} and line_id \u003d {[.]../../../Line_Code} and machine_code \u003d {[.]../../Machine_Code} and product_id \u003d {[.]../../OPC/From/Part_Id}),0)",
                      "name": "HT_Std",
                      "tagType": "AtomicTag"
                    },
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "db",
                      "query": "select isnull((Select cumulative_cycle_time from [OEE_NEW].[dbo].[M_PRODUCT] where business_id \u003d {[.]../../../../../../Business_Code} and plant_id \u003d {[.]../../../../../Plant_Code} and cell_id \u003d {[.]../../../../Cell_Code} and line_id \u003d {[.]../../../Line_Code} and machine_code \u003d {[.]../../Machine_Code} and product_id \u003d {[.]../../OPC/From/Part_Id}),0)",
                      "name": "Cum_CT",
                      "tagType": "AtomicTag"
                    },
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "db",
                      "query": "select isnull((Select cycle_time from [OEE_NEW].[dbo].[M_PRODUCT] where business_id \u003d {[.]../../../../../../Business_Code} and plant_id \u003d {[.]../../../../../Plant_Code} and cell_id \u003d {[.]../../../../Cell_Code} and line_id \u003d {[.]../../../Line_Code} and machine_code \u003d {[.]../../Machine_Code} and product_id \u003d {[.]../../OPC/From/Part_Id}),0)",
                      "name": "CT",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "HT_Actual",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "DateTime",
                      "name": "OEE_Stop",
                      "formatString": "yyyy-MM-dd h:mm:ss aa",
                      "value": 1735670220000,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "dataType": "DateTime",
                      "name": "OEE_Start",
                      "formatString": "yyyy-MM-dd h:mm:ss aa",
                      "value": 1735670220000,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "sourceTagPath": "0",
                      "name": "PS_Planner",
                      "value": 0,
                      "tagType": "AtomicTag"
                    }
                  ]
                },
                {
                  "name": "Triggers",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "valueSource": "expr",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\ttags_to_read \u003d [\n\t\t\"[.]../../Machine_Tracking\",\n\t\t\"[.]Off_Tag\",\n\t\t\"[.]../Operating_Time/MC_Status_Act\",\n\t\t\"[.]DT_Timer\",\n\t\t\"[.]MC_Status_Trigger\",\n\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\"[.]HT_Timer\"\n\t]\n\ttags \u003d [tag.value for tag in system.tag.readBlocking(tags_to_read)]\n\tif tags[0] !\u003d 1:\n\t\treturn\n\tb \u003d tags[1]\n\ta \u003d int(tags[2])\n\tc \u003d tags[3]\n\te \u003d int(tags[4])\n\toff, run, ht \u003d tags[5], tags[6], tags[7]\n\tupdates \u003d []\n\tif b \u003d\u003d 1:\n\t\tsystem.tag.write(\"[.]../Operating_Time/Off_Timer\" , off + 1)\n\telif a \u003d\u003d 1 and b !\u003d 1:\n\t\tsystem.tag.write(\"[.]../Operating_Time/Run_Timer\", run + 1)\n\telif a \u003d\u003d 2 and b !\u003d 1:\n\t\tsystem.tag.write(\"[.]DT_Timer\", c + 1)\n\telif e \u003d\u003d 2 and b !\u003d 1:\n\t\tsystem.tag.write(\"[.]HT_Timer\", ht + 1)\n\t#if Write_Tag:\n\t\t#system.tag.writeBlocking([item[0] for item in Write_Tag], [item[1] for item in Write_Tag])\n\t\t\n\t\t\n\t"
                        }
                      ],
                      "expression": "getSecond(now())",
                      "name": "Seconds",
                      "executionMode": "FixedRate",
                      "executionRate": 500,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\ttags_to_read \u003d [\n\t    \"[.]../Count/OEE_On\",\n\t    \"[.]MC_Status_Trigger\",\n\t    \"[.]../Count/R_Count\",\n\t    \"[.]../Count/Part_Per_Cycle\",\n\t    \"[.]../../OPC/From/MT_Actual\",\n\t    \"[.]../OEE/HT_Actual\",\n\t    \"[.]../Operating_Time/MC_Time\",\n\t    \"[.]../Operating_Time/HT_Time\",\n\t    \"[.]../OEE/Cum_CT\",\n\t    \"[.]../Count/CT_H\",\n\t    \"[.]../Count/CT_L\",\n\t    \"[.]../Count/CT_E\",\n\t    \"[.]../../../../../../Business_Code\",\n\t    \"[.]../../../../../Plant_Code\",\n\t    \"[.]../../../../Cell_Code\",\n\t    \"[.]../../../Line_Code\",\n\t    \"[.]../../Machine_Code\",\n\t    \"[.]../../../../../Shift_Id\",\n\t    \"[.]../../../../../../../Hour\",\n\t    \"[.]../../OPC/From/Part_Id\",\n\t    \"[.]../../OPC/From/Operator_Id\",\n\t    \"[.]../../../../../DateTime_OEE\",\n\t    \"[.]../Count/Rejection_Act\",\n\t    \"[.]Idel_Limit\"\n\t]\n\t\n\t#OEE_On, MC_Status, Cycle_partcount, Good_Count, HT_Actual, MT_Actual, Handling_time, Maching_time, Cycle_time_act, CycleTime, CTH, CTL, CTE,\n\t#Enterprise_No, BG_No, Plant_No, Line_No, Machine_No, Shift, Hour, Operator, Part_ID, DateTime_OEE, Rejection\n\t\n\t#result \u003d OEE.P_Count.Rejection_Count(tags_to_read)\n\tresult \u003d OEE_NEW.P_Count.Rejection_Count(tags_to_read)\n\t\n\tif result:\n\t    rejection_count, ct_actual, ht_final, mt_final, cth, ctl, cte, R_id \u003d result\n\t\n\t    system.tag.writeBlocking([\n\t        \"[.]../Count/R_Count\",\n\t        \"[.]../OEE/CT_Actual\",\n\t        \"[.]../Operating_Time/HT_Time\",\n\t        \"[.]../Operating_Time/MC_Time\",\n\t        \"[.]../Count/CT_H\",\n\t        \"[.]../Count/CT_L\",\n\t        \"[.]../Count/CT_E\",\n\t        \"[.]../Count/Rejection_Act\"\n\t    ], [rejection_count, ct_actual, ht_final, mt_final, cth, ctl, cte, R_id])"
                        }
                      ],
                      "sourceTagPath": "[.]../../OPC/From/Bad_Count",
                      "name": "Rejection_Count",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tif currentValue.quality.isGood() and currentValue.value !\u003d 0 and previousValue.quality.isGood():\n\t\tsystem.tag.write(\"[.]../Operating_Time/DT_Reason\",currentValue.value)"
                        }
                      ],
                      "sourceTagPath": "[.]../../OPC/From/BD_Reason",
                      "name": "Breakdown_ID",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\t# Tag paths\n\tTrigger \u003d system.tag.read(\"[.]../Operating_Time/MC_Status_Act\").value\n\tTrigger1 \u003d system.tag.read(\"[.]Off_Tag\").value\n\tOEE_On \u003d system.tag.read(\"[.]../Count/OEE_On\").value\n\tMC_Track \u003d system.tag.read(\"[.]../../Machine_Tracking\").value\n\tT_stamp \u003d system.tag.read(\"[.]../../../../../DateTime_OEE\").value\n\t\n\t# Write OEE_On \u003d 1 if the condition is met\n\tif (Trigger \u003d\u003d 2 or Trigger1 \u003d\u003d 1) and OEE_On \u003d\u003d 1 and MC_Track \u003d\u003d 1:\n\t    system.tag.write(\"[.]../Operating_Time/DT_Stop\", T_stamp)\n\t\n\t# Tags to read\n\ttags_to_read \u003d [\n\t    \"[.]../Count/OEE_On\",\n\t    \"[.]../../Machine_Tracking\",\n\t    \"[.]../Operating_Time/MC_Status_Act\",\n\t    \"[.]Off_Tag\",\n\t    \"[.]../../../../../../Business_Code\",\n\t    \"[.]../../../../../Plant_Code\",\n\t    \"[.]../../../../Cell_Code\",\n\t    \"[.]../../../Line_Code\",\n\t    \"[.]../../Machine_Code\",\n\t    \"[.]../../OPC/From/Operator_Id\",\n\t    \"[.]../../../../../Shift_dup\",\n\t    \"[.]../../../../../Shift_Hour_Dup\",\n\t    \"[.]../../../../../Shift_Id_Dup\",\n\t    \"[.]../../../../../../../Hour\",\n\t    \"[.]../../../../../../../Date_hour\",\n\t    \"[.]../../OPC/From/Part_Id\",\n\t    \"[.]../OEE/OEE_Start\",\n\t    \"[.]../../../../../DateTime_OEE\",\n\t    \"[.]../Operating_Time/Stop_Timer\",\n\t    \"[.]../Operating_Time/Run_Timer\",\n\t    \"[.]../Operating_Time/Off_Timer\",\n\t    \"[.]../Count/G_Count\",\n\t    \"[.]../Count/R_Count\",\n\t    \"[.]../Operating_Time/DT_Reason\",\n\t    \"[.]../Operating_Time/Idle_Timer\",\n\t    \"[.]../Operating_Time/Shift_Time\",\n\t    \"[.]../Operating_Time/DT_Type\",\n\t    \"[.]../OEE/CT\",\n\t    \"[.]../Count/CT_E\",\n\t    \"[.]../Count/CT_H\",\n\t    \"[.]../Count/CT_L\",\n\t    \"[.]HT_Timer\",\n\t    \"[.]../Operating_Time/MC_Time\",\n\t    \"[.]../Operating_Time/DT_Start\",\n\t    \"[.]../Operating_Time/DT_Start_Act\",\n\t    \"[.]../Operating_Time/DT_Stop\",\n\t    \"[.]Idel_Limit\",\n\t    \"[.]Breakdown_ID\",\n\t    \"[.]../../../../../DateTime_OEE\",  # currentTimestamp\n\t    \"[.]../../../../../Shift_Id\"\n\t]\n\t\n\t#Return_values \u003d OEE.OEE_Triggers.log_oee_data_Shift(tags_to_read)\n\tReturn_values \u003d OEE_NEW.OEE_Triggers.log_oee_data_Shift(tags_to_read)\n\t\n\tif Return_values:\n\t    (\n\t        Trigger, Trigger1, OEE_On, MC_Stat,\n\t        actualDowntime, SP_DATE_TIME, Date_OEE,\n\t        Shift_Plan, end_Time, oeeTimestamp, currentTimestamp\n\t    ) \u003d Return_values\n\t    if (Trigger \u003d\u003d 2 or Trigger1 \u003d\u003d 1) and OEE_On \u003d\u003d 1 and MC_Stat \u003d\u003d 1:\n\t        tags_to_write \u003d [\n\t            \"[.]../OEE/OEE_Start\",\n\t            \"[.]../Count/G_Count\",\n\t            \"[.]../Count/R_Count\",\n\t            \"[.]../Operating_Time/Run_Timer\",\n\t            \"[.]../Operating_Time/Stop_Timer\",\n\t            \"[.]../Operating_Time/Idle_Timer\",\n\t            \"[.]../Count/CT_E\",\n\t            \"[.]../Count/CT_H\",\n\t            \"[.]../Count/CT_L\",\n\t            \"[.]HT_Timer\",\n\t            \"[.]../Operating_Time/MC_Time\",\n\t            \"[.]../Operating_Time/Off_Timer\",\n\t            \"[.]../Operating_Time/Down_Time\",\n\t            \"[.]../Operating_Time/DT_Start\",\n\t            \"[.]../Operating_Time/DT_Start_Act\"\n\t        ]\n\t        values_to_write \u003d [end_Time, 0, 0, 0, 0, 0,0, 0, 0,0, 0, 0,0, oeeTimestamp, currentTimestamp]\n\t        system.tag.writeBlocking(tags_to_write, values_to_write)\n\t    if SP_DATE_TIME \u003d\u003d Date_OEE and Shift_Plan \u003e 0:\n\t        system.tag.write(\"[.]../Count/OEE_On\", 0)\n\t        system.tag.write(\"[.]../Operating_Time/Shift_Time\", 0)\n\t    else:\n\t        system.tag.write(\"[.]../OEE/OEE_Start\", oeeTimestamp)\n\t        system.tag.write(\"[.]../Operating_Time/DT_Start\", oeeTimestamp)\n\t        system.tag.write(\"[.]../Operating_Time/DT_Start_Act\", currentTimestamp)\n\t        system.tag.write(\"[.]../Count/OEE_On\", 1)"
                        }
                      ],
                      "sourceTagPath": "[.]../../../../../Shift_Trigger",
                      "name": "OEE_Shift",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\ttags_to_read \u003d [\n\t    \"[.]../Count/OEE_On\",\n\t    \"[.]MC_Status_Trigger\",\n\t    \"[.]../Count/Part_Per_Cycle\",\n\t    \"[.]../Count/G_Count\",\n\t    \"[.]../../OPC/From/MT_Actual\",\n\t    \"[.]../OEE/HT_Actual\",\n\t    \"[.]../Operating_Time/MC_Time\",\n\t    \"[.]../Operating_Time/HT_Time\",\n\t    \"[.]../OEE/CT_Actual\",\n\t    \"[.]../OEE/CT\",\n\t    \"[.]../Count/CT_H\",\n\t    \"[.]../Count/CT_L\",\n\t    \"[.]../Count/CT_E\",\n\t    \"[.]../../../../../../Business_Code\",\n\t    \"[.]../../../../../Plant_Code\",\n\t    \"[.]../../../../Cell_Code\",\n\t    \"[.]../../../Line_Code\",\n\t    \"[.]../../Machine_Code\",\n\t    \"[.]../../../../../Shift_Id\",\n\t    \"[.]../../../../../../../Hour\",\n\t    \"[.]../../OPC/From/Part_Id\",\n\t    \"[.]../../OPC/From/Operator_Id\",\n\t    \"[.]Shot_Count\",\n\t    \"[.]../OEE/Cum_CT\",\n\t    \"[.]../../../../../DateTime_OEE\",\n\t    \"[.]../../../../../../Rejection\",\n\t    \"[.]Idel_Limit\"\n\t]\n\t\n\t#OEE_On, MC_Status, Cycle_partcount, Good_Count, HT_Actual, MT_Actual, Handling_time, Maching_time, Cycle_time_act, CycleTime, CTH, CTL, CTE,\n\t#Enterprise_No, BG_No, Plant_No, Line_No, Machine_No, Shift, Hour, Operator, Part_ID, DateTime_OEE, Rejection\n\t\n\t#result \u003d OEE.P_Count.Shot_Count(tags_to_read)\n\tresult \u003d OEE_NEW.P_Count.Shot_Count(tags_to_read)\n\t\n\tif result:\n\t    good_count, ct_actual, ht_final, mt_final, cth, ctl, cte \u003d result\n\t\n\t    system.tag.writeBlocking([\n\t        \"[.]../Count/G_Count\",\n\t        \"[.]../OEE/CT_Actual\",\n\t        \"[.]../Operating_Time/HT_Time\",\n\t        \"[.]../Operating_Time/MC_Time\",\n\t        \"[.]../Count/CT_H\",\n\t        \"[.]../Count/CT_L\",\n\t        \"[.]../Count/CT_E\",\n\t    ], [good_count, ct_actual, ht_final, mt_final, cth, ctl, cte])"
                        }
                      ],
                      "sourceTagPath": "[.]../../OPC/From/Good_Count",
                      "name": "Shot_Count",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tMC_status \u003d system.tag.read(\"[.]../Operating_Time/MC_Status_Act\").value\n\tOFF_Tag \u003d system.tag.read(\"[.]Off_Tag\").value\n\tT_Stamp \u003d system.tag.read(\"[.]../../../../../DateTime_OEE\").value\n\tif MC_status \u003d\u003d 1 and OFF_Tag \u003d\u003d0:\n\t\tsystem.tag.write(\"[.]../Operating_Time/DT_Stop\",T_Stamp)\n\t\n\ttags_to_read \u003d [\n\t\t\"[.]../../../../../Shift_Id\",\n\t\t\"[.]../Operating_Time/MC_Status_Act\",\n\t\t\"[.]Off_Tag\",\n\t\t\"[.]../../../../../DateTime_OEE\",\n\t\t\"[.]../../../../../../Business_Code\",\n\t\t\"[.]../../../../../Plant_Code\",\n\t\t\"[.]../../../../Cell_Code\",\n\t\t\"[.]../../../Line_Code\",\n\t\t\"[.]../../Machine_Code\",\n\t\t\"[.]../../OPC/From/Operator_Id\",\n\t\t\"[.]../../../../../../../Hour\",\n\t\t\"[.]../../../../../Shift_Hour\",\n\t\t\"[.]../../OPC/From/Part_Id\",\n\t\t\"[.]../Operating_Time/DT_Start\",\n\t\t\"[.]../Operating_Time/DT_Start_Act\",\n\t\t\"[.]Idel_Limit\",\n\t\t\"[.]../Operating_Time/DT_Stop\",\n\t\t\"[.]../../../../../../../Day\",\n\t\t\"[.]Breakdown_ID\"\n\t]\n\t#write_value \u003d OEE.Operating_Time.offtime(tags_to_read)\n\twrite_value \u003d OEE_NEW.Operating_Time.offtime(tags_to_read)\n\tif write_value:\n\t\tsystem.tag.writeBlocking([item[0] for item in write_value], [item[1] for item in write_value])"
                        }
                      ],
                      "name": "Off_Tag",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "name": "PS_Planner",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "qualityChanged",
                          "script": "\tMS_Qual \u003d currentValue.quality\n\tif currentValue.quality.isGood():\n\t\tsystem.tag.write(\"[.]Off_Tag\",0)\n\telse:\n\t\tsystem.tag.write(\"[.]Off_Tag\",1)"
                        },
                        {
                          "eventid": "valueChanged",
                          "script": "\tMC_Status \u003d currentValue.value\n\t#system.tag.write(\"[default]Tags/OEE/Enterprise/BG4/Plant2/Line1/Machine1/Operating_time/Mc_status\",a)\n\tsystem.tag.write(\"[.]../Operating_Time/MC_Status_Act\",MC_Status)\n\tsystem.tag.write(\"[.]HT_Timer\",0)\n\tif MC_Status \u003d\u003d 1:\n\t\tsystem.tag.write(\"[.]../Operating_Time/MC_Status_Act\",1)\n\t\tsystem.tag.write(\"[.]HT_Timer\",0)\n\t\t#system.tag.write(\"[default]Tags/OEE/Enterprise/BG4/Plant2/Line1/Machine1/Operating_time/Mc_status_Act 1\",1)\n\t\t\t\n\t"
                        }
                      ],
                      "sourceTagPath": "[.]../../OPC/From/Machine_Status",
                      "name": "MC_Status_Trigger",
                      "tagType": "AtomicTag"
                    },
                    {
                      "datasource": {
                        "bindType": "parameter",
                        "binding": "{DB}"
                      },
                      "valueSource": "memory",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tsystem.tag.write(\"[.]../Count/Idel_Time\",currentValue.value)"
                        }
                      ],
                      "query": "Select Idle_Time from Idle_Time where Eg_ID \u003d 1 and Bg_ID \u003d 4 and Plant_Id \u003d 2 and Line_Id \u003d 1 and Machine_Id \u003d 1\r\n\r\n",
                      "name": "Idel_Limit",
                      "value": 300,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tif currentValue.quality.isGood() and currentValue.value !\u003d 0 and previousValue.quality.isGood():\n\t\tsystem.tag.write(\"[.]../Count/Rejection_Act\",currentValue.value)"
                        }
                      ],
                      "sourceTagPath": "[.]../../OPC/From/Rejection_Reason",
                      "name": "Rejection_Id",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "expr",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\ttags_to_read \u003d [\n\t\t\"[.]../Count/OEE_On\",                    # OEE_On\n\t\t\"[.]../../Machine_Tracking\",                 # MC_Stat\n\t\t\"[.]OEE_1hour\",               # Triger\n\t\t\"[.]MC_Status_Trigger\",   # Triger1\n\t\t\n\t\t\"[.]../../../../../../Business_Code\",  # BG_Id\n\t\t\"[.]../../../../../Plant_Code\",        # Plant\n\t\t\"[.]../../../../Cell_Code\",\n\t\t\"[.]../../../Line_Code\",                # Line\n\t\t\"[.]../../Machine_Code\",             # Machine\n\t\t\n\t\t\"[.]../../OPC/From/Operator_Id\",                   # Operator\n\t\t\"[.]../../../../../Shift_Id\",                                         # Shift\n\t\t\"[.]../../../../../Shift_Hour\",                                    # Shift_Hour\n\t\t\"[.]../../../../../../../Hour\",                                                                # Hour\n\t\t\"[.]../../../../../../../Date_hour\",                                                           # Datetime_Hour\n\t\t\n\t\t\"[.]../../OPC/From/Part_Id\",                    # Part_Id\n\t\t\"[.]../OEE/OEE_Start\",                  # Start_Time\n\t\t\"[.]../../../../../DateTime_OEE\",                                  # end_Time\n\t\t\n\t\t\"[.]../Operating_Time/Stop_Timer\",       # StopTime1\n\t\t\"[.]../Operating_Time/Run_Timer\",        # run_time\n\t\t\"[.]../Operating_Time/Off_Timer\",        # Off_time\n\t\t\n\t\t\"[.]../Count/G_Count\",               # Good_Count\n\t\t\"[.]../Count/R_Count\",                   # Rejection\n\t\t\"[.]Breakdown_ID\",    # Reason\n\t\t\"[.]../Operating_Time/Idle_Timer\",       # downTime1\n\t\t\n\t\t\"[.]../Operating_Time/Shift_Time\",             # Shifttime\n\t\t\"[.]../Operating_Time/DT_Type\",         # DT_type\n\t\t\"[.]../OEE/CT\",                 # idle_Cycle_time\n\t\t\n\t\t\"[.]../Count/CT_E\",                      # CTE\n\t\t\"[.]../Count/CT_H\",                      # CTH\n\t\t\"[.]../Count/CT_L\",                      # CTL\n\t\t\n\t\t\"[.]../Operating_Time/HT_Time\",   # Handling_time_tag\n\t\t\"[.]../Operating_Time/MC_Time\"     # Maching_time_tag\n\t]\n\t\n\t#result \u003d OEE.OEE_Triggers.log_oee_data_1Hou(tags_to_read)\n\tresult \u003d OEE_NEW.OEE_Triggers.log_oee_data_1Hou(tags_to_read)\n\t\n\tif result:\n\t\ttag_write_values \u003d result[:-1]         # First 13 values\n\t\tdt_type \u003d result[-1]                   # 14th value is DT_type\n\t\t\n\t\tresult_tags \u003d [\n\t\t\t\"[.]../OEE/OEE_Start\",\n\t\t\t\"[.]../Count/G_Count\",\n\t\t\t\"[.]../Count/R_Count\",\n\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\"[.]../Operating_Time/Stop_Timer\",\n\t\t\t\"[.]../Operating_Time/Idle_Timer\",\n\t\t\t\"[.]../Count/CT_E\",\n\t\t\t\"[.]../Count/CT_H\",\n\t\t\t\"[.]../Count/CT_L\",\n\t\t\t\"[.]../Operating_Time/HT_Time\",\n\t\t\t\"[.]../Operating_Time/MC_Time\",\n\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\"[.]../Operating_Time/Shift_Time\"\n\t\t]\n\t\t\n\t\tsystem.tag.writeBlocking(result_tags, tag_write_values)\n\t\t\n\t\tif dt_type \u003d\u003d 2:\n\t\t\tsystem.tag.writeBlocking(\n\t\t\t\t[\"[.]../Operating_Time/Minor_Loss\"],\n\t\t\t\t[1]\n\t\t\t)"
                        }
                      ],
                      "expression": "getHour24(now())",
                      "name": "OEE_1hour",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "expr",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tif currentValue.value \u003d\u003d 1:\n\t\ttags_to_read \u003d [\n\t\t\t\"[.]../../../../../../Business_Code\",\n\t\t\t\"[.]../../../../../Plant_Code\",\n\t\t\t\"[.]../../../../Cell_Code\",\n\t\t\t\"[.]../../../Line_Code\",\n\t\t\t\"[.]../../Machine_Code\",\n\t\t\t\"[.]../../../../../Shift_Id\",\n\t\t\t\"[.]../../../../../Shift_Hour\",\n\t\t\t\"[.]../../../../../DateTime_OEE\",\n\t\t\t\"[.]../Count/OEE_On\",\n\t\t\t\"[.]../Operating_Time/MC_Status_Act\",\n\t\t\t\"[.]../../OPC/From/Operator_Id\",\n\t\t\t\"[.]../../../../../../../Hour\",\n\t\t\t\"[.]../../../../../../../Date_hour\",\n\t\t\t\"[.]../../OPC/From/Part_Id\",\n\t\t\t\"[.]../OEE/OEE_Start\",\n\t\t\t\"[.]../../../../../DateTime_OEE\",\n\t\t\t\"[.]../Operating_Time/Stop_Timer\",\n\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\"[.]../Count/G_Count\",\n\t\t\t\"[.]../Count/R_Count\",\n\t\t\t\"[.]Breakdown_ID\",\n\t\t\t\"[.]../Operating_Time/Idle_Timer\",\n\t\t\t\"[.]../Operating_Time/Shift_Time\",\n\t\t\t\"[.]../OEE/CT\",\n\t\t\t\"[.]../Count/CT_E\",\n\t\t\t\"[.]../Count/CT_H\",\n\t\t\t\"[.]../Count/CT_L\",\n\t\t\t\"[.]../Operating_Time/HT_Time\",\n\t\t\t\"[.]../Operating_Time/MC_Time\"\n\t\t]\n\t\t# Call the function\n\t\t#result_values \u003d OEE.OEE_Triggers.log_oee_data_15Min(tags_to_read)\n\t\tresult_values \u003d OEE_NEW.OEE_Triggers.log_oee_data_15Min(tags_to_read)\n\t\t\n\t\t# If the function returned valid data, write to tags\n\t\tif result_values:\n\t\t\treset_tags \u003d [\n\t\t\t\t\"[.]../OEE/OEE_Start\",\n\t\t\t\t\"[.]../Count/G_Count\",\n\t\t\t\t\"[.]../Count/R_Count\",\n\t\t\t\t\"[.]../Operating_Time/Run_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Stop_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Idle_Timer\",\n\t\t\t\t\"[.]../Count/CT_E\",\n\t\t\t\t\"[.]../Count/CT_H\",\n\t\t\t\t\"[.]../Count/CT_L\",\n\t\t\t\t\"[.]../Operating_Time/HT_Time\",\n\t\t\t\t\"[.]../Operating_Time/MC_Time\",\n\t\t\t\t\"[.]../Operating_Time/Off_Timer\",\n\t\t\t\t\"[.]../Operating_Time/Shift_Time\",\n\t\t\t\t\"[.]../../OPC/To/Availability\",\n\t\t\t\t\"[.]../../OPC/To/Quality\",\n\t\t\t\t\"[.]../../OPC/To/Performance\",\n\t\t\t\t\"[.]../../OPC/To/OEE\"           \n\t\t\t]\n\t\t\t\n\t\t\tsystem.tag.writeBlocking(reset_tags, result_values)"
                        }
                      ],
                      "expression": "getMinute(now()) % 15 \u003d 0 \u0026\u0026 getSecond(now()) \u003d 0",
                      "name": "OEE_15Mins",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tHT_Actual \u003d system.tag.read(\"[.]HT_Timer\").value\n\tHT_Standard \u003d int(system.tag.read(\"[.]../OEE/HT_Std\").value)\n\tif HT_Actual \u003e\u003d HT_Standard:\n\t\tsystem.tag.write(\"[.]../Operating_Time/MC_Status_Act\",2)\n\t\n"
                        }
                      ],
                      "name": "HT_Timer",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "memory",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tDB \u003d \"OEE_NEW\"\n\ttags_to_read \u003d [\n\t    \"[.]../Operating_Time/MC_Status_Act\",\n\t    \"[.]DT_Timer\",\n\t    \"[.]Idel_Limit\",\n\t    \"[.]../Operating_Time/Stop_Timer\",\n\t    \"[.]../Operating_Time/Idle_Timer\",\n\t    \"[.]../Operating_Time/Minor_Loss\",\n\t    \"[.]../../../../../../Business_Code\",\n\t    \"[.]../../../../../Plant_Code\",\n\t    \"[.]../../../../Cell_Code\",\n\t    \"[.]../../../Line_Code\",\n\t    \"[.]../../Machine_Code\",\n\t    \"[.]../../../../../Shift_Id\",\n\t    \"[.]../../../../../../../Hour\"\n\t]\n\t# Read tag values in one go\n\tvalues \u003d [tag.value for tag in system.tag.readBlocking(tags_to_read)]\n\t\n\t# Assign values with meaningful names\n\tmc_status, dt_timer, idle_limit, stop_time, idle_time, minor_loss, bg_id, plant, Cell, line, machine, shift, hour \u003d values\n\t\n\t# Ensure values are numeric (type safety)\n\tdt_timer \u003d int(dt_timer)\n\tidle_limit \u003d int(idle_limit)\n\tstop_time \u003d int(stop_time)\n\tidle_time \u003d int(idle_time)\n\tminor_loss \u003d int(minor_loss)\n\t\n\t# Prepare tag writes\n\twrite_tags \u003d []\n\t\n\t# Main logic for DT classification\n\tif mc_status \u003d\u003d 2:\n\t\n\t    if dt_timer \u003c idle_limit:\n\t        stop_time +\u003d 1\n\t        write_tags +\u003d [\n\t            [\"[.]../Operating_Time/Stop_Timer\", stop_time],\n\t            [\"[.]../Operating_Time/DT_Type\", 2]  # 2 \u003d STOP\n\t        ]\n\t\n\t    elif dt_timer \u003e idle_limit:\n\t        idle_time +\u003d 1\n\t        write_tags +\u003d [\n\t            [\"[.]../Operating_Time/Idle_Timer\", idle_time],\n\t            [\"[.]../Operating_Time/DT_Type\", 3]  # 3 \u003d IDLE\n\t        ]\n\t\n\t    elif dt_timer \u003d\u003d idle_limit and dt_timer !\u003d 0:\n\t        # Calculate new stop time capped at 0\n\t        new_stop_time \u003d stop_time - idle_limit if stop_time \u003e\u003d idle_limit else 0\n\t        #2025-07-31 write_tags.append([\"[.]../Operating_Time/Stop_Timer\", new_stop_time])\n\t        system.tag.write(\"[.]../Operating_Time/Stop_Timer\", new_stop_time)\n\t        #2025-07-2025 write_tags.append([\"[.]../Operating_Time/Idle_Timer\", idle_time])\n\t        new_idle_time \u003d idle_time + idle_limit #2025-07-2025 if stop_time \u003e\u003d idle_limit else idle_time\n\t        #2025-07-2025 write_tags.append([\"[.]../Operating_Time/Idle_Timer\", new_idle_time])\n\t        system.tag.write(\"[.]../Operating_Time/Idle_Timer\", new_idle_time)\n\t\n\t        # Fetch latest DB record for this machine\n\t        row \u003d system.db.runPrepQuery(\n\t            \"SELECT TOP 1 id, shift_id, hour, stop_time, down_time FROM [OEE_NEW].[dbo].[OEE_DATA] \"\n\t            \"WHERE business_id \u003d ? and plant_id \u003d ? and cell_id \u003d ? and line_id \u003d ? and machine_code \u003d ? order by id desc\",\n\t            [bg_id, plant, Cell, line, machine], DB\n\t        )\n\t\n\t        if row:\n\t            record \u003d row[0]\n\t            id \u003d record[\"id\"]\n\t            shift_pre \u003d record[\"shift_id\"]\n\t            hour_pre \u003d record[\"hour\"]\n\t            stop_time_pre \u003d int(record[\"stop_time\"])\n\t            downtime_pre \u003d int(record[\"down_time\"])\n\t\n\t            # Handle minor loss reversal if hour changed\n\t            if hour_pre !\u003d hour and shift \u003d\u003d shift_pre and downtime_pre \u003d\u003d 0 and minor_loss \u003d\u003d 1:\n\t                updated_stop_time \u003d stop_time_pre + new_stop_time + 1  # +1 for current cycle\n\t                downtime_new \u003d -new_stop_time\n\t\n\t                # Update OEE_data to reflect the corrected minor loss transition\n\t                system.db.runPrepUpdate(\n\t                    \"UPDATE [OEE_NEW].[dbo].[OEE_DATA] SET down_time \u003d ?, stop_time \u003d ?, trigger_type \u003d ? WHERE ID \u003d ?\",\n\t                    [downtime_new, updated_stop_time, \"DT_Timer\", id],\n\t                    DB\n\t                )\n\t\n\t                # Reset minor loss flag\n\t                write_tags.append([\"[.]../Operating_Time/Minor_Loss\", 0])\n\t\n\t# Write back tag values if any changes occurred\n\tif write_tags:\n\t    system.tag.writeBlocking(\n\t        [tag_path for tag_path, _ in write_tags],\n\t        [value for _, value in write_tags]\n\t    )"
                        }
                      ],
                      "name": "DT_Timer",
                      "value": 0,
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "db",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\ttags_to_read \u003d [\n\t    \"[.]../Count/OEE_On\",\n\t    \"[.]../../../../../DateTime_OEE\",\n\t    \"[.]../../../../../Shift_Id\",\n\t    \"[.]../../../../../../Business_Code\",\n\t    \"[.]../../../../../Plant_Code\",\n\t    \"[.]../../../../Cell_Code\",\n\t    \"[.]../../../Line_Code\",\n\t    \"[.]../../Machine_Code\",\n\t    \"[.]../../../../../Shift\"\n\t]\n\t#result \u003d OEE.PS.PS(tags_to_read)\n\tresult \u003d OEE_NEW.PS.PS(tags_to_read)\n\tDate,date_oee,Shift,T_stamp,Tstamp_act, SE, Shift_Time \u003d result\n\tif SE\u003d\u003d0:\n\t\tsystem.tag.writeBlocking([\"[.]../Operating_Time/Shift_Time\"], [Shift_Time])\n\tif Date \u003d\u003d date_oee and Shift \u003e 0:\n\t    system.tag.writeAll([\n\t        \"[.]../Count/OEE_On\",\n\t        \"[.]../Operating_Time/Shift_Time\"\n\t    ], [0, 0])\n\telse:\n\t    system.tag.writeAll([\n\t        \"[.]../OEE/OEE_Start\",\n\t        \"[.]../Operating_Time/DT_Start\",\n\t        \"[.]../Operating_Time/DT_Start_Act\",\n\t        \"[.]../Count/OEE_On\"\n\t    ], [T_stamp, T_stamp, Tstamp_act, 1])\n\t"
                        }
                      ],
                      "datasource": "CM_MASTER",
                      "query": "Select isnull((Select distinct shift_id from [MASTER_DATA].[dbo].[M_SHIFT] where business_id \u003d {[.]../../../../../../Business_Code} and plant_id \u003d {[.]../../../../../Plant_Code} and shift_start_time \u003c \u0027{[.]../../../../../../../Time 2}\u0027 and shift_end_time \u003e \u0027{[.]../../../../../../../Time 2}\u0027),\u00273\u0027)",
                      "name": "PS",
                      "tagType": "AtomicTag"
                    },
                    {
                      "valueSource": "reference",
                      "eventScripts": [
                        {
                          "eventid": "valueChanged",
                          "script": "\tI_Limit \u003d system.tag.read(\"[.]Idel_Limit\").value\n\tHT_Act \u003d currentValue.value\n\tif I_Limit\u003cHT_Act:\n\t\tsystem.tag.write(\"[.]../OEE/HT_Actual\",I_Limit)\n\telse:\n\t\tsystem.tag.write(\"[.]../OEE/HT_Actual\",HT_Act)"
                        }
                      ],
                      "sourceTagPath": "[.]../../OPC/From/LU_Time",
                      "name": "HT_Actual",
                      "tagType": "AtomicTag"
                    }
                  ]
                }
              ]
            },
            {
              "valueSource": "opc",
              "opcItemPath": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dGOC_Communication",
              "name": "Machine_Communication",
              "tagType": "AtomicTag",
              "opcServer": "eWON - Tags server_SGD_P1"
            },
            {
              "value": {
                "bindType": "parameter",
                "binding": "{Machine_Code}"
              },
              "valueSource": "memory",
              "name": "Machine_Code",
              "tagType": "AtomicTag"
            },
            {
              "valueSource": "memory",
              "name": "Machine_Tracking",
              "value": 0,
              "tagType": "AtomicTag"
            }
          ]
        }
      ]
    },
    {
      "name": "Rane Architecture",
      "tagType": "Folder",
      "tags": [
        {
          "name": "BG1",
          "parameters": {
            "BGNum": {
              "dataType": "Integer"
            }
          },
          "tagType": "UdtType",
          "tags": [
            {
              "name": "Plant2",
              "typeId": "Rane Architecture/BG1",
              "parameters": {
                "BGNum": {
                  "dataType": "Integer",
                  "value": 2
                }
              },
              "tagType": "UdtInstance"
            },
            {
              "name": "Plant4",
              "typeId": "Rane Architecture/BG1",
              "parameters": {
                "BGNum": {
                  "dataType": "Integer",
                  "value": 4
                }
              },
              "tagType": "UdtInstance"
            },
            {
              "name": "Plant1",
              "typeId": "Rane Architecture/BG1",
              "parameters": {
                "BGNum": {
                  "dataType": "Integer",
                  "value": 1
                }
              },
              "tagType": "UdtInstance"
            },
            {
              "name": "Plant3",
              "typeId": "Rane Architecture/BG1",
              "parameters": {
                "BGNum": {
                  "dataType": "Integer",
                  "value": 3
                }
              },
              "tagType": "UdtInstance"
            }
          ]
        },
        {
          "name": "OEE",
          "tagType": "Folder",
          "tags": [
            {
              "name": "Enterprise",
              "tagType": "Folder",
              "tags": [
                {
                  "name": "BG1",
                  "tagType": "Folder",
                  "tags": [
                    {
                      "name": "Plant1",
                      "tagType": "Folder",
                      "tags": [
                        {
                          "name": "Line1",
                          "tagType": "Folder",
                          "tags": [
                            {
                              "name": "Machine1",
                              "tagType": "Folder",
                              "tags": [
                                {
                                  "name": "Info 1",
                                  "parameters": {
                                    "PLID": {
                                      "dataType": "Integer",
                                      "value": 1
                                    },
                                    "LID": {
                                      "dataType": "Integer",
                                      "value": 1
                                    },
                                    "MID": {
                                      "dataType": "Integer",
                                      "value": 1
                                    },
                                    "BGID": {
                                      "dataType": "Integer",
                                      "value": 1
                                    }
                                  },
                                  "tagType": "UdtType",
                                  "tags": [
                                    {
                                      "valueSource": "memory",
                                      "name": "LID",
                                      "value": 1,
                                      "tagType": "AtomicTag"
                                    },
                                    {
                                      "valueSource": "memory",
                                      "name": "MID",
                                      "value": 1,
                                      "tagType": "AtomicTag"
                                    },
                                    {
                                      "valueSource": "memory",
                                      "name": "PLID",
                                      "value": 1,
                                      "tagType": "AtomicTag"
                                    },
                                    {
                                      "valueSource": "memory",
                                      "eventScripts": [
                                        {
                                          "eventid": "valueChanged",
                                          "script": "\ttagPath \u003d system.tag.read(\"[default]_types_/Rane Architecture/OEE/Enterprise/BG1/Plant1/Line1/Machine1/Info/BGID\").value\n\tsystem.tag.write(\"[default]_types_/Rane Architecture/OEE/Enterprise/BG1/Plant1/Line1/Machine1/Info/LID\",21)"
                                        }
                                      ],
                                      "name": "BGID",
                                      "value": 1,
                                      "tagType": "AtomicTag"
                                    }
                                  ]
                                },
                                {
                                  "name": "Info",
                                  "parameters": {
                                    "PLID": {
                                      "dataType": "Integer",
                                      "value": 1
                                    },
                                    "LID": {
                                      "dataType": "Integer",
                                      "value": 1
                                    },
                                    "MID": {
                                      "dataType": "Integer",
                                      "value": 1
                                    },
                                    "BGID": {
                                      "dataType": "Integer",
                                      "value": 1
                                    }
                                  },
                                  "tagType": "UdtType",
                                  "tags": [
                                    {
                                      "valueSource": "memory",
                                      "name": "LID",
                                      "value": 1,
                                      "tagType": "AtomicTag"
                                    },
                                    {
                                      "valueSource": "memory",
                                      "eventScripts": [
                                        {
                                          "eventid": "valueChanged",
                                          "script": "\ttagPath \u003d system.tag.read(\"[default]_types_/Rane Architecture/OEE/Enterprise/BG1/Plant1/Line1/Machine1/Info/BGID\").value\n\tsystem.tag.write(\"[default]_types_/Rane Architecture/OEE/Enterprise/BG1/Plant1/Line1/Machine1/Info/LID\",21)"
                                        }
                                      ],
                                      "name": "BGID",
                                      "value": 1,
                                      "tagType": "AtomicTag"
                                    },
                                    {
                                      "valueSource": "memory",
                                      "name": "MID",
                                      "value": 1,
                                      "tagType": "AtomicTag"
                                    },
                                    {
                                      "valueSource": "memory",
                                      "name": "PLID",
                                      "value": 1,
                                      "tagType": "AtomicTag"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "name": "Machine2",
                              "tagType": "Folder",
                              "tags": [
                                {
                                  "name": "Info",
                                  "parameters": {
                                    "PLID": {
                                      "dataType": "Integer",
                                      "value": 1
                                    },
                                    "LID": {
                                      "dataType": "Integer",
                                      "value": 1
                                    },
                                    "MID": {
                                      "dataType": "Integer",
                                      "value": 1
                                    },
                                    "BGID": {
                                      "dataType": "Integer",
                                      "value": 1
                                    }
                                  },
                                  "tagType": "UdtType",
                                  "tags": [
                                    {
                                      "valueSource": "memory",
                                      "eventScripts": [
                                        {
                                          "eventid": "valueChanged",
                                          "script": "\ttagPath \u003d system.tag.read(\"[default]_types_/Rane Architecture/OEE/Enterprise/BG1/Plant1/Line1/Machine1/Info/BGID\").value\n\tsystem.tag.write(\"[default]_types_/Rane Architecture/OEE/Enterprise/BG1/Plant1/Line1/Machine1/Info/LID\",21)"
                                        }
                                      ],
                                      "name": "BGID",
                                      "value": 1,
                                      "tagType": "AtomicTag"
                                    },
                                    {
                                      "valueSource": "memory",
                                      "name": "PLID",
                                      "value": 1,
                                      "tagType": "AtomicTag"
                                    },
                                    {
                                      "valueSource": "memory",
                                      "name": "LID",
                                      "value": 1,
                                      "tagType": "AtomicTag"
                                    },
                                    {
                                      "valueSource": "memory",
                                      "name": "MID",
                                      "value": 1,
                                      "tagType": "AtomicTag"
                                    }
                                  ]
                                },
                                {
                                  "name": "Info 1",
                                  "parameters": {
                                    "PLID": {
                                      "dataType": "Integer",
                                      "value": 1
                                    },
                                    "LID": {
                                      "dataType": "Integer",
                                      "value": 1
                                    },
                                    "MID": {
                                      "dataType": "Integer",
                                      "value": 1
                                    },
                                    "BGID": {
                                      "dataType": "Integer",
                                      "value": 1
                                    }
                                  },
                                  "tagType": "UdtType",
                                  "tags": [
                                    {
                                      "valueSource": "memory",
                                      "name": "PLID",
                                      "value": 1,
                                      "tagType": "AtomicTag"
                                    },
                                    {
                                      "valueSource": "memory",
                                      "name": "LID",
                                      "value": 1,
                                      "tagType": "AtomicTag"
                                    },
                                    {
                                      "valueSource": "memory",
                                      "name": "MID",
                                      "value": 1,
                                      "tagType": "AtomicTag"
                                    },
                                    {
                                      "valueSource": "memory",
                                      "eventScripts": [
                                        {
                                          "eventid": "valueChanged",
                                          "script": "\ttagPath \u003d system.tag.read(\"[default]_types_/Rane Architecture/OEE/Enterprise/BG1/Plant1/Line1/Machine1/Info/BGID\").value\n\tsystem.tag.write(\"[default]_types_/Rane Architecture/OEE/Enterprise/BG1/Plant1/Line1/Machine1/Info/LID\",21)"
                                        }
                                      ],
                                      "name": "BGID",
                                      "value": 1,
                                      "tagType": "AtomicTag"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "BG2",
          "parameters": {
            "BGNum": {
              "dataType": "Integer"
            }
          },
          "tagType": "UdtType",
          "tags": [
            {
              "name": "Plant2",
              "typeId": "Rane Architecture/BG1",
              "parameters": {
                "BGNum": {
                  "dataType": "Integer",
                  "value": 2
                }
              },
              "tagType": "UdtInstance"
            },
            {
              "name": "Plant3",
              "typeId": "Rane Architecture/BG1",
              "parameters": {
                "BGNum": {
                  "dataType": "Integer",
                  "value": 3
                }
              },
              "tagType": "UdtInstance"
            },
            {
              "name": "Plant4",
              "typeId": "Rane Architecture/BG1",
              "parameters": {
                "BGNum": {
                  "dataType": "Integer",
                  "value": 4
                }
              },
              "tagType": "UdtInstance"
            },
            {
              "name": "Plant1",
              "typeId": "Rane Architecture/BG1",
              "parameters": {
                "BGNum": {
                  "dataType": "Integer",
                  "value": 1
                }
              },
              "tagType": "UdtInstance"
            }
          ]
        }
      ]
    },
    {
      "name": "Ar",
      "parameters": {
        "Number": {
          "dataType": "Integer"
        }
      },
      "tagType": "UdtType",
      "tags": [
        {
          "opcItemPath": {
            "bindType": "parameter",
            "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dAVAILABILITY_{Number}"
          },
          "valueSource": "opc",
          "name": "Availability",
          "tagType": "AtomicTag",
          "opcServer": "RSSL P1 eWON - Tags server - 2"
        },
        {
          "opcItemPath": {
            "bindType": "parameter",
            "binding": "nsu\u003dhttp://ewon.biz/Ewontags/;s\u003dCURRENT_SHIFT_{Number}"
          },
          "valueSource": "opc",
          "name": "Currentshift",
          "tagType": "AtomicTag",
          "opcServer": "RSSL P1 eWON - Tags server - 2"
        }
      ]
    },
    {
      "name": "EM6436H_OPC_Line",
      "parameters": {
        "Meter": {
          "dataType": "String",
          "value": ""
        },
        "Gateway": {
          "dataType": "String",
          "value": "RML_BCD_P3_ADVANT_1"
        },
        "DB": {
          "dataType": "String",
          "value": "EMS_CP"
        }
      },
      "tagType": "UdtType",
      "tags": [
        {
          "valueSource": "memory",
          "name": "Machine_Status",
          "tagType": "AtomicTag"
        },
        {
          "valueSource": "memory",
          "dataType": "String",
          "name": "Machine_Name",
          "tagType": "AtomicTag"
        },
        {
          "valueSource": "memory",
          "name": "Machine_Tracking",
          "tagType": "AtomicTag"
        },
        {
          "name": "Calculation",
          "tagType": "Folder",
          "tags": [
            {
              "name": "Expression",
              "tagType": "Folder",
              "tags": [
                {
                  "valueSource": "expr",
                  "expression": "{[.]../../OPC/From/Volt-Avg}*1.732",
                  "name": "Voltage_Avg",
                  "tagType": "AtomicTag"
                }
              ]
            },
            {
              "name": "Triggers",
              "tagType": "Folder",
              "tags": [
                {
                  "valueSource": "expr",
                  "eventScripts": [
                    {
                      "eventid": "valueChanged",
                      "script": "\ttags_to_read \u003d [\n\t     \"[.]../../../../../DateTime\",\n\t\t \"[.]../../../../../../Business_Code\",\t\t\n        \"[.]../../../../../Plant_Code\",\n        \"[.]../../../../Cell_Code\",\n        \"[.]../../../Line_Code\",\n        \"[.]../../Machine_ID\",\n        \"[.]../../Machine_Code\",\n        \"[.]../../../../../Date\",\n        \"[.]../../../../../Shift\",\t\n\t    \"[.]../../OPC/From/Current-B\",\n\t    \"[.]../../OPC/From/Current-R\",\n\t    \"[.]../../OPC/From/Current-Y\",\n\t    \"[.]../../OPC/From/Current_Avg\",\n\t    \"[.]../../OPC/From/Frequency\",\n\t    \"[.]../../OPC/From/KWH\",\n\t    \"[.]../../OPC/From/PF\",\n\t    \"[.]../Expression/Voltage_Avg\",\n\t    \"[.]../../OPC/From/Volt-B\",\n\t    \"[.]../../OPC/From/Volt-R\",\n\t    \"[.]../../OPC/From/Volt-Y\",\n\t    \"[.]../../OPC/From/WH\",\n\t        \t    \t   \n\t]\n\ttag_values \u003d [tag.value if tag.value is not None else \u0027\u0027 for tag in system.tag.readBlocking(tags_to_read)]\n\t\n\tEMS_Overall.TestFunction.EMS_trigger(tag_values)"
                    }
                  ],
                  "expression": "floor(getMinute({[.]../../../../../DateTime}) / 5)",
                  "name": "Main_Trigger",
                  "tagType": "AtomicTag"
                }
              ]
            }
          ]
        },
        {
          "valueSource": "memory",
          "name": "Machine_ID",
          "tagType": "AtomicTag"
        },
        {
          "name": "OPC",
          "tagType": "Folder",
          "tags": [
            {
              "name": "From",
              "tagType": "Folder",
              "tags": [
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "nsu\u003dOpcUaServer.Data_Center;s\u003dDPO_{Meter}:Active_Energy_Into_Load"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{Gateway}"
                  },
                  "valueSource": "opc",
                  "dataType": "Float4",
                  "name": "KWH",
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "nsu\u003dOpcUaServer.Data_Center;s\u003dDPO_{Meter}:Voltage_RYBN_Avg"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{Gateway}"
                  },
                  "valueSource": "opc",
                  "dataType": "Float4",
                  "name": "Volt-Avg",
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "nsu\u003dOpcUaServer.Data_Center;s\u003dDPO_{Meter}:Voltage_B"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{Gateway}"
                  },
                  "valueSource": "opc",
                  "dataType": "Float4",
                  "name": "Volt-B",
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "nsu\u003dOpcUaServer.Data_Center;s\u003dDPO_{Meter}:Current_R"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{Gateway}"
                  },
                  "valueSource": "opc",
                  "dataType": "Float4",
                  "name": "Current-R",
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "nsu\u003dOpcUaServer.Data_Center;s\u003dDPO_{Meter}:Current_Avg"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{Gateway}"
                  },
                  "valueSource": "opc",
                  "expression": "({[.]Current-B.value}+{[.]Current-R.value}+{[.]Current-Y.value})/3",
                  "name": "Current_Avg",
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "nsu\u003dOpcUaServer.Data_Center;s\u003dDPO_{Meter}:Frequency"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{Gateway}"
                  },
                  "valueSource": "opc",
                  "dataType": "Float4",
                  "name": "Frequency",
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "nsu\u003dOpcUaServer.Data_Center;s\u003dDPO_{Meter}:Power_Factor_T"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{Gateway}"
                  },
                  "valueSource": "opc",
                  "dataType": "Float4",
                  "name": "PF",
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "nsu\u003dOpcUaServer.Data_Center;s\u003dDPO_{Meter}:Active_Power_T"
                  },
                  "sourceTagPath": {
                    "bindType": "parameter",
                    "binding": "[LMCI-default]EMS/LMCI/Plant-2/{Meter}/Active_Pwr(KW)"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{Gateway}"
                  },
                  "valueSource": "opc",
                  "dataType": "Float4",
                  "name": "Active_Pwr_T",
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "nsu\u003dOpcUaServer.Data_Center;s\u003dDPO_{Meter}:Voltage_R"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{Gateway}"
                  },
                  "valueSource": "opc",
                  "dataType": "Float4",
                  "name": "Volt-R",
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "nsu\u003dOpcUaServer.Data_Center;s\u003dDPO_{Meter}:Voltage_Y"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{Gateway}"
                  },
                  "valueSource": "opc",
                  "dataType": "Float4",
                  "name": "Volt-Y",
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "nsu\u003dOpcUaServer.Data_Center;s\u003dDPO_{Meter}:Current_B"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{Gateway}"
                  },
                  "valueSource": "opc",
                  "dataType": "Float4",
                  "name": "Current-B",
                  "tagType": "AtomicTag"
                },
                {
                  "opcItemPath": {
                    "bindType": "parameter",
                    "binding": "nsu\u003dOpcUaServer.Data_Center;s\u003dDPO_{Meter}:Current_Y"
                  },
                  "opcServer": {
                    "bindType": "parameter",
                    "binding": "{Gateway}"
                  },
                  "valueSource": "opc",
                  "dataType": "Float4",
                  "name": "Current-Y",
                  "tagType": "AtomicTag"
                }
              ]
            },
            {
              "name": "To",
              "tagType": "Folder"
            }
          ]
        },
        {
          "valueSource": "memory",
          "name": "Machine_Code",
          "historyEnabled": false,
          "tagType": "AtomicTag"
        }
      ]
    }
  ]
}